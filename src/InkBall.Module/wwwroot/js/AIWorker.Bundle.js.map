{"version":3,"file":"AIWorker.Bundle.js","mappings":"oDAEA,IAAIA,EAAQ,EAAQ,KAChBC,EAAQ,EAAQ,KAChBC,EAAiB,EAAQ,KACzBC,EAAS,gBAUb,SAASC,EAAWC,EAAQC,EAAWC,GAEnCD,EAAYE,KAAKC,IAAI,OAAiBC,IAAdJ,EAA0B,EAAIA,GAGtDC,EAAkBA,GAAmB,EAGrC,IAAII,EAgLR,SAAwBN,GAOpB,IANA,IAAIO,EAAOP,EAAO,GACdQ,EAAMR,EAAO,GACbS,EAAQT,EAAO,GACfU,EAASV,EAAO,GAGXW,EAAI,EAAGA,EAAIX,EAAOY,OAAQD,IAAK,CACpC,IAAIE,EAAIb,EAAOW,GACXE,EAAE,GAAKN,EAAK,KAAIA,EAAOM,GACvBA,EAAE,GAAKJ,EAAM,KAAIA,EAAQI,GACzBA,EAAE,GAAKL,EAAI,KAAIA,EAAMK,GACrBA,EAAE,GAAKH,EAAO,KAAIA,EAASG,GAInC,IAAIC,EAAO,CAACP,EAAMC,EAAKC,EAAOC,GAC1BK,EAAWD,EAAKE,QACpB,IAAKL,EAAI,EAAGA,EAAIX,EAAOY,OAAQD,IACtBd,EAAeG,EAAOW,GAAIG,IAAOC,EAASE,KAAKjB,EAAOW,IAI/D,OA0IJ,SAAoBX,GAChBA,EAAOkB,KAAKC,GAGZ,IADA,IAAIC,EAAQ,GACHT,EAAI,EAAGA,EAAIX,EAAOY,OAAQD,IAAK,CACpC,KAAOS,EAAMR,QAAU,GAAKS,EAAMD,EAAMA,EAAMR,OAAS,GAAIQ,EAAMA,EAAMR,OAAS,GAAIZ,EAAOW,KAAO,GAC9FS,EAAME,MAEVF,EAAMH,KAAKjB,EAAOW,IAItB,IADA,IAAIY,EAAQ,GACHC,EAAKxB,EAAOY,OAAS,EAAGY,GAAM,EAAGA,IAAM,CAC5C,KAAOD,EAAMX,QAAU,GAAKS,EAAME,EAAMA,EAAMX,OAAS,GAAIW,EAAMA,EAAMX,OAAS,GAAIZ,EAAOwB,KAAQ,GAC/FD,EAAMD,MAEVC,EAAMN,KAAKjB,EAAOwB,IAKtB,OAFAD,EAAMD,MACNF,EAAME,MACCF,EAAMK,OAAOF,GA/JbG,CAAWX,GAvMPY,CAAe3B,GAGtB4B,EAAO,IAAIjC,EAAM,IACrBiC,EAAKC,OAAS,SAAUC,GACpB,MAAO,CACHC,KAAMD,EAAE,GACRE,KAAMF,EAAE,GACRG,KAAMH,EAAE,GACRI,KAAMJ,EAAE,KAGhBF,EAAKO,YAAc,SAAUL,EAAGM,GAAK,OAAON,EAAE,GAAKM,EAAE,IACrDR,EAAKS,YAAc,SAAUP,EAAGM,GAAK,OAAON,EAAE,GAAKM,EAAE,IAErDR,EAAKU,KAAKtC,GAIV,IADA,IACgBuC,EADZC,EAAQ,GACH7B,EAAI,EAASA,EAAIL,EAAKM,OAAQD,IAAK,CACxC,IAAIE,EAAIP,EAAKK,GACbiB,EAAKa,OAAO5B,GACZ0B,EAAOG,EAAW7B,EAAG0B,GACrBC,EAAMvB,KAAKsB,GAIf,IAAII,EAAU,IAAIhD,EAAM,IACxB,IAAKgB,EAAI,EAAGA,EAAI6B,EAAM5B,OAAQD,IAAKgC,EAAQC,OAAOC,EAAWL,EAAM7B,KAMnE,IAJA,IAAImC,EAAc7C,EAAYA,EAC1B8C,EAAiB7C,EAAkBA,EAGhCsC,EAAM5B,QAAQ,CACjB,IAAIoC,EAAOR,EAAMS,QACbnB,EAAIkB,EAAKnC,EACTuB,EAAIY,EAAKE,KAAKrC,EAGdsC,EAAQC,EAAUtB,EAAGM,GACzB,KAAIe,EAAQJ,GAAZ,CAEA,IAAIM,EAAWF,EAAQL,GAGvBjC,EAAIyC,EAAc1B,EAAMoB,EAAKO,KAAK1C,EAAGiB,EAAGM,EAAGY,EAAKE,KAAKA,KAAKrC,EAAGwC,EAAUV,KAG9DxC,KAAKqD,IAAIJ,EAAUvC,EAAGiB,GAAIsB,EAAUvC,EAAGuB,KAAOiB,IAEnDb,EAAMvB,KAAK+B,GACXR,EAAMvB,KAAKyB,EAAW7B,EAAGmC,IAGzBpB,EAAKa,OAAO5B,GACZ8B,EAAQF,OAAOO,GACfL,EAAQC,OAAOC,EAAWG,IAC1BL,EAAQC,OAAOC,EAAWG,EAAKE,SAKvCF,EAAOT,EACP,IAAIkB,EAAU,GACd,GACIA,EAAQxC,KAAK+B,EAAKnC,GAClBmC,EAAOA,EAAKE,WACPF,IAAST,GAIlB,OAFAkB,EAAQxC,KAAK+B,EAAKnC,GAEX4C,EAGX,SAASH,EAAc1B,EAAME,EAAGM,EAAGsB,EAAGC,EAAGC,EAASjB,GAM9C,IALA,IAAIH,EAAQ,IAAI5C,EAAM,GAAIiE,GACtBb,EAAOpB,EAAKkC,KAITd,GAAM,CACT,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAKe,SAASnD,OAAQD,IAAK,CAC3C,IAAIqD,EAAQhB,EAAKe,SAASpD,GAEtBsD,EAAOjB,EAAKkB,KAAOC,EAAUH,EAAO5B,EAAGsB,GAAKU,EAAahC,EAAGsB,EAAGM,GAC/DC,EAAOL,GAEXpB,EAAMvB,KAAK,CACP+B,KAAMgB,EACNC,KAAMA,IAId,KAAOzB,EAAM5B,SAAW4B,EAAM6B,OAAOrB,KAAKe,UAAU,CAChD,IAAIO,EAAO9B,EAAMlB,MACbT,EAAIyD,EAAKtB,KAITuB,EAAKJ,EAAUtD,EAAGiB,EAAGM,GACrBoC,EAAKL,EAAUtD,EAAG6C,EAAGC,GACzB,GAAIW,EAAKL,KAAOM,GAAMD,EAAKL,KAAOO,GAC9BC,EAAgBrC,EAAGvB,EAAG8B,IACtB8B,EAAgBf,EAAG7C,EAAG8B,GAAU,OAAO9B,GAG/CmC,EAAOR,EAAMlB,SACH0B,EAAOA,EAAKA,MAG1B,OAAO,KAGX,SAASa,EAAY/B,EAAGM,GACpB,OAAON,EAAEmC,KAAO7B,EAAE6B,KAItB,SAASG,EAAatC,EAAGM,EAAGsC,GACxB,GAAIC,EAAO7C,EAAG4C,IAASC,EAAOvC,EAAGsC,GAAO,OAAO,EAC/C,IAAIF,EAAKI,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAK3C,KAAM2C,EAAK1C,KAAM0C,EAAKzC,KAAMyC,EAAK1C,MACpF,GAAW,IAAPwC,EAAU,OAAO,EACrB,IAAIK,EAAKD,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAK3C,KAAM2C,EAAK1C,KAAM0C,EAAK3C,KAAM2C,EAAKxC,MACpF,GAAW,IAAP2C,EAAU,OAAO,EACrB,IAAIC,EAAKF,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAKzC,KAAMyC,EAAK1C,KAAM0C,EAAKzC,KAAMyC,EAAKxC,MACpF,GAAW,IAAP4C,EAAU,OAAO,EACrB,IAAIC,EAAKH,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAK3C,KAAM2C,EAAKxC,KAAMwC,EAAKzC,KAAMyC,EAAKxC,MACpF,OAAW,IAAP6C,EAAiB,EACd5E,KAAKqD,IAAIgB,EAAIK,EAAIC,EAAIC,GAGhC,SAASJ,EAAO7C,EAAG4C,GACf,OAAO5C,EAAE,IAAM4C,EAAK3C,MACbD,EAAE,IAAM4C,EAAKzC,MACbH,EAAE,IAAM4C,EAAK1C,MACbF,EAAE,IAAM4C,EAAKxC,KAIxB,SAASuC,EAAgB3C,EAAGM,EAAGO,GAO3B,IANA,IAiBgBqC,EAAIC,EAAIC,EAAIC,EAjBxBpD,EAAO5B,KAAKqD,IAAI1B,EAAE,GAAIM,EAAE,IACxBJ,EAAO7B,KAAKqD,IAAI1B,EAAE,GAAIM,EAAE,IACxBH,EAAO9B,KAAKC,IAAI0B,EAAE,GAAIM,EAAE,IACxBF,EAAO/B,KAAKC,IAAI0B,EAAE,GAAIM,EAAE,IAExBgD,EAAQzC,EAAQ0C,OAAO,CAACtD,KAAMA,EAAMC,KAAMA,EAAMC,KAAMA,EAAMC,KAAMA,IAC7DvB,EAAI,EAAGA,EAAIyE,EAAMxE,OAAQD,IAC9B,GAUYqE,EAVGI,EAAMzE,GAAGE,EAURoE,EAVWG,EAAMzE,GAAGuC,KAAKrC,EAUrBqE,EAVwBpD,EAWzCkD,KADqBG,EAVuB/C,IAW/B6C,IAAOC,GACvB7D,EAAM2D,EAAIC,EAAIC,GAAM,GAAM7D,EAAM2D,EAAIC,EAAIE,GAAM,GAC9C9D,EAAM6D,EAAIC,EAAIH,GAAM,GAAM3D,EAAM6D,EAAIC,EAAIF,GAAM,EAbK,OAAO,EAE9D,OAAO,EAGX,SAAS5D,EAAM2D,EAAIE,EAAII,GACnB,OAAOxF,EAAOkF,EAAG,GAAIA,EAAG,GAAIE,EAAG,GAAIA,EAAG,GAAII,EAAG,GAAIA,EAAG,IAWxD,SAASzC,EAAWG,GAChB,IAAIgC,EAAKhC,EAAKnC,EACVqE,EAAKlC,EAAKE,KAAKrC,EAKnB,OAJAmC,EAAKjB,KAAO5B,KAAKqD,IAAIwB,EAAG,GAAIE,EAAG,IAC/BlC,EAAKhB,KAAO7B,KAAKqD,IAAIwB,EAAG,GAAIE,EAAG,IAC/BlC,EAAKf,KAAO9B,KAAKC,IAAI4E,EAAG,GAAIE,EAAG,IAC/BlC,EAAKd,KAAO/B,KAAKC,IAAI4E,EAAG,GAAIE,EAAG,IACxBlC,EA+BX,SAASN,EAAW7B,EAAG0C,GACnB,IAAIP,EAAO,CACPnC,EAAGA,EACH0C,KAAM,KACNL,KAAM,KACNnB,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,GAaV,OAVKqB,GAKDP,EAAKE,KAAOK,EAAKL,KACjBF,EAAKO,KAAOA,EACZA,EAAKL,KAAKK,KAAOP,EACjBO,EAAKL,KAAOF,IAPZA,EAAKO,KAAOP,EACZA,EAAKE,KAAOF,GAQTA,EAIX,SAASI,EAAU4B,EAAIE,GAEnB,IAAIK,EAAKP,EAAG,GAAKE,EAAG,GAChBM,EAAKR,EAAG,GAAKE,EAAG,GAEpB,OAAOK,EAAKA,EAAKC,EAAKA,EAI1B,SAASrB,EAAUtD,EAAGmE,EAAIE,GAEtB,IAAIO,EAAIT,EAAG,GACPU,EAAIV,EAAG,GACPO,EAAKL,EAAG,GAAKO,EACbD,EAAKN,EAAG,GAAKQ,EAEjB,GAAW,IAAPH,GAAmB,IAAPC,EAAU,CAEtB,IAAIG,IAAM9E,EAAE,GAAK4E,GAAKF,GAAM1E,EAAE,GAAK6E,GAAKF,IAAOD,EAAKA,EAAKC,EAAKA,GAE1DG,EAAI,GACJF,EAAIP,EAAG,GACPQ,EAAIR,EAAG,IAEAS,EAAI,IACXF,GAAKF,EAAKI,EACVD,GAAKF,EAAKG,GAOlB,OAHAJ,EAAK1E,EAAE,GAAK4E,GAGAF,GAFZC,EAAK3E,EAAE,GAAK6E,GAEUF,EAI1B,SAASZ,EAAagB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC9C,IAaIC,EAAIC,EAAIC,EAAIC,EAbZC,EAAKV,EAAKF,EACVa,EAAKV,EAAKF,EACVa,EAAKR,EAAKF,EACVW,EAAKR,EAAKF,EACVW,EAAKhB,EAAKI,EACVa,EAAKhB,EAAKI,EACVnE,EAAI0E,EAAKA,EAAKC,EAAKA,EACnBrE,EAAIoE,EAAKE,EAAKD,EAAKE,EACnBjD,EAAIgD,EAAKA,EAAKC,EAAKA,EACnBhD,EAAI6C,EAAKI,EAAKH,EAAKI,EACnBC,EAAIJ,EAAKE,EAAKD,EAAKE,EACnBE,EAAIjF,EAAI4B,EAAItB,EAAIA,EAGhB4E,EAAKD,EACLE,EAAKF,EAEC,IAANA,GACAV,EAAK,EACLW,EAAK,EACLT,EAAKO,EACLG,EAAKvD,IAGL6C,EAAKzE,EAAIgF,EAAI1E,EAAIuB,GADjB0C,EAAKjE,EAAI0E,EAAIpD,EAAIC,GAER,GACL0C,EAAK,EACLE,EAAKO,EACLG,EAAKvD,GACE2C,EAAKW,IACZX,EAAKW,EACLT,EAAKO,EAAI1E,EACT6E,EAAKvD,IAIT6C,EAAK,GACLA,EAAK,GACA5C,EAAI,EAAK0C,EAAK,GACT1C,EAAI7B,EAAGuE,EAAKW,GAElBX,GAAM1C,EACNqD,EAAKlF,IAEFyE,EAAKU,IACZV,EAAKU,GACCtD,EAAIvB,EAAK,EAAKiE,EAAK,GACf1C,EAAIvB,EAAIN,EAAGuE,EAAKW,GAEtBX,GAAM1C,EAAIvB,EACV4E,EAAKlF,IAOb,IAIIyD,GAFO,GAJXe,EAAY,IAAPC,EAAW,EAAIA,EAAKU,IAIJjB,EAAKM,EAAKJ,IAFrB,GAHVE,EAAY,IAAPC,EAAW,EAAIA,EAAKW,IAGLpB,EAAKQ,EAAKN,GAK1BN,GAFO,EAAIc,GAAML,EAAKK,EAAKH,IAFrB,EAAIC,GAAMP,EAAKO,EAAKL,GAM9B,OAAOR,EAAKA,EAAKC,EAAKA,EAG1B,SAASrE,EAAWW,EAAGM,GACnB,OAAON,EAAE,KAAOM,EAAE,GAAKN,EAAE,GAAKM,EAAE,GAAKN,EAAE,GAAKM,EAAE,GA7V9CxC,EAAMsH,UACNtH,EAAQA,EAAMsH,SAGlBC,EAAOC,QAAUrH,EACjBoH,EAAOC,QAAP,QAAyBrH,G,gBCbzBoH,EAAOC,QAAU,SAA6BC,EAAOC,EAAIC,EAAOC,GAC5D,IAAI/B,EAAI4B,EAAM,GAAI3B,EAAI2B,EAAM,GACxB1C,GAAS,OACCtE,IAAVkH,IAAqBA,EAAQ,QACrBlH,IAARmH,IAAmBA,EAAMF,EAAG1G,QAEhC,IADA,IAAI6G,GAAOD,EAAID,GAAO,EACb5G,EAAI,EAAG+G,EAAID,EAAM,EAAG9G,EAAI8G,EAAKC,EAAI/G,IAAK,CAC3C,IAAIgH,EAAKL,EAAGC,EAAQ,EAAF5G,EAAI,GAAIiH,EAAKN,EAAGC,EAAQ,EAAF5G,EAAI,GACxCkH,EAAKP,EAAGC,EAAQ,EAAFG,EAAI,GAAII,EAAKR,EAAGC,EAAQ,EAAFG,EAAI,GAC1BE,EAAKlC,GAAQoC,EAAKpC,GAC5BD,GAAKoC,EAAKF,IAAOjC,EAAIkC,IAAOE,EAAKF,GAAMD,IAChChD,GAAUA,GAE7B,OAAOA,I,oBCbX,IAAIoD,EAAqB,EAAQ,KAC7BC,EAAuB,EAAQ,KAEnCb,EAAOC,QAAU,SAAyBC,EAAOC,EAAIC,EAAOC,GACxD,OAAIF,EAAG1G,OAAS,GAAKqH,MAAMC,QAAQZ,EAAG,IAC3BU,EAAqBX,EAAOC,EAAIC,EAAOC,GAEvCO,EAAmBV,EAAOC,EAAIC,EAAOC,IAGpDL,EAAOC,QAAQe,OAASH,EACxBb,EAAOC,QAAQgB,KAAOL,G,gBCRtBZ,EAAOC,QAAU,SAA+BC,EAAOC,EAAIC,EAAOC,GAC9D,IAAI/B,EAAI4B,EAAM,GAAI3B,EAAI2B,EAAM,GACxB1C,GAAS,OACCtE,IAAVkH,IAAqBA,EAAQ,QACrBlH,IAARmH,IAAmBA,EAAMF,EAAG1G,QAEhC,IADA,IAAI6G,EAAMD,EAAMD,EACP5G,EAAI,EAAG+G,EAAID,EAAM,EAAG9G,EAAI8G,EAAKC,EAAI/G,IAAK,CAC3C,IAAIgH,EAAKL,EAAG3G,EAAE4G,GAAO,GAAIK,EAAKN,EAAG3G,EAAE4G,GAAO,GACtCM,EAAKP,EAAGI,EAAEH,GAAO,GAAIO,EAAKR,EAAGI,EAAEH,GAAO,GACxBK,EAAKlC,GAAQoC,EAAKpC,GAC5BD,GAAKoC,EAAKF,IAAOjC,EAAIkC,IAAOE,EAAKF,GAAMD,IAChChD,GAAUA,GAE7B,OAAOA,I,gBCEX,SAAS0D,EAAQC,EAAGC,EAAGC,GACnBA,EAAYA,GAAa,EACzB,IACIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EADxBpI,EAAI,CAAC,EAAE,GAaX,OAXA8H,EAAKH,EAAG,GAAG,GAAKA,EAAG,GAAG,GACtBI,EAAKJ,EAAG,GAAG,GAAKA,EAAG,GAAG,GACtBK,EAAKF,EAAKH,EAAG,GAAG,GAAKI,EAAKJ,EAAG,GAAG,GAChCM,EAAKL,EAAG,GAAG,GAAKA,EAAG,GAAG,GACtBM,EAAKN,EAAG,GAAG,GAAKA,EAAG,GAAG,GACtBO,EAAKF,EAAKL,EAAG,GAAG,GAAKM,EAAKN,EAAG,GAAG,GAE3BS,EADLD,EAAMN,EAAKI,EAAKD,EAAGF,EACC,EAAGF,KACnB7H,EAAE,IAAMkI,EAAKF,EAAKD,EAAKI,GAAMC,EAC7BpI,EAAE,IAAM8H,EAAKK,EAAKF,EAAKD,GAAMI,GAE1BpI,EAYX,SAASsI,EAAsBjE,EAAIE,EAAID,EAAIE,GAC1C,IAAII,EAAKL,EAAG,GAAKF,EAAG,GAChBQ,EAAKN,EAAG,GAAKF,EAAG,GAChBkE,EAAK/D,EAAG,GAAKF,EAAG,GAChBkE,EAAKhE,EAAG,GAAKF,EAAG,GAGpB,GAAIiE,EAAG1D,EAAK2D,EAAG5D,GAAQ,EACtB,OAAO,EAGR,IAAI6D,GAAK7D,GAAMN,EAAG,GAAKD,EAAG,IAAMQ,GAAMR,EAAG,GAAKC,EAAG,MAAQiE,EAAK1D,EAAK2D,EAAK5D,GACpEI,GAAKuD,GAAMlE,EAAG,GAAKC,EAAG,IAAMkE,GAAMlE,EAAG,GAAKD,EAAG,MAAQmE,EAAK5D,EAAK2D,EAAK1D,GAExE,OAAQ4D,GAAG,GAAKA,GAAG,GAAKzD,GAAG,GAAKA,GAAG,EAYpC,SAAS0D,EAAavH,EAAEM,EAAEsB,GACtB,OAAUtB,EAAE,GAAKN,EAAE,KAAK4B,EAAE,GAAK5B,EAAE,KAAO4B,EAAE,GAAK5B,EAAE,KAAKM,EAAE,GAAKN,EAAE,IAGnE,SAASwH,EAAOxH,EAAEM,EAAEsB,GAChB,OAAO2F,EAAavH,EAAEM,EAAEsB,GAAK,EAGjC,SAAS6F,EAASzH,EAAEM,EAAEsB,GAClB,OAAO2F,EAAavH,EAAGM,EAAGsB,IAAM,EAGpC,SAAS8F,EAAQ1H,EAAEM,EAAEsB,GACjB,OAAO2F,EAAavH,EAAGM,EAAGsB,GAAK,EAGnC,SAAS+F,EAAU3H,EAAEM,EAAEsB,GACnB,OAAO2F,EAAavH,EAAGM,EAAGsB,IAAM,EAxFpCyD,EAAOC,QAAU,CACbsC,OAoVJ,SAAuBC,GACnB,IAAIvE,EAAQwE,EAAmBD,GAC/B,OAAGvE,EAAMxE,OAAS,EACPiJ,EAAaF,EAASvE,GAEtB,CAACuE,IAxVZG,YAkcJ,SAASC,EAAmBJ,EAASK,EAAOC,EAAeC,EAAcC,EAAMC,EAASC,GACpFD,EAAWA,GAAY,IACvBC,EAAQA,GAAS,EACjBF,EAAQA,GAAS,GACjBH,OAA0B,IAAX,EAAyBA,EAAS,GACjDC,EAAiBA,GAAkB,GACnCC,EAAgBA,GAAiB,GAEjC,IAAII,EAAS,CAAC,EAAE,GAAIC,EAAS,CAAC,EAAE,GAAI1J,EAAE,CAAC,EAAE,GACrC2J,EAAU,EAAGC,EAAU,EAAG9G,EAAE,EAAG+G,EAAY,EAC3CC,EAAW,EAAGC,EAAW,EAAGC,EAAa,EACzCC,EAAU,GAAIC,EAAU,GACxBC,EAAOrB,EACPsB,EAAItB,EAER,GAAGsB,EAAErK,OAAS,EAChB,OAAOoJ,EAIL,KADAK,EACWD,EAEP,OADAc,QAAQC,KAAK,2BAA2Bf,EAAS,cAC1CJ,EAGX,IAAK,IAAIrJ,EAAI,EAAGA,EAAIgJ,EAAQ/I,SAAUD,EAClC,GAAIyK,EAAgBJ,EAAMrK,GAAI,CAC1BsJ,EAAehJ,KAAK+J,EAAKrK,IACzB6J,EAAYC,EAAYY,OAAOC,UAG/B,IAAK,IAAI5D,EAAI,EAAGA,EAAIiC,EAAQ/I,SAAU8G,EAC9B4B,EAAOiC,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,KAAO+B,EAAU8B,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,EAAI,MACpJ7G,EAAI2K,EAAqBD,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,GAAI6D,EAAUP,EAAMtD,EAAI,IACzG8B,EAAQ+B,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAIE,KACpD8C,EAAI8H,EAAOT,EAAKrK,GAAIE,IACZ4J,IACJA,EAAY9G,EACZ4G,EAAW1J,EACX+J,EAAalD,IAIrB4B,EAAOiC,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,EAAI,KAAO+B,EAAU8B,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,MACpJ7G,EAAI2K,EAAqBD,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,GAAI6D,EAAUP,EAAMtD,EAAI,IACzG4B,EAAOiC,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAIE,KACnD8C,EAAI8H,EAAOT,EAAKrK,GAAIE,IACZ2J,IACJA,EAAY7G,EACZ2G,EAAWzJ,EACX8J,EAAajD,IAO7B,GAAIkD,KAAgBD,EAAa,GAAKhB,EAAQ/I,OAE1CC,EAAE,IAAM0J,EAAS,GAAKD,EAAS,IAAM,EACrCzJ,EAAE,IAAM0J,EAAS,GAAKD,EAAS,IAAM,EACrCJ,EAAcjJ,KAAKJ,GAEfF,EAAIgK,GAEJe,EAAcZ,EAAWE,EAAMrK,EAAGgK,EAAW,GAC7CG,EAAU7J,KAAKJ,GACfkK,EAAU9J,KAAKJ,GACI,IAAf+J,GAEAc,EAAcX,EAAWC,EAAKJ,EAAWI,EAAKpK,QAGlD8K,EAAcX,EAAWC,EAAK,EAAErK,EAAE,KAExB,IAANA,GAEA+K,EAAcZ,EAAWE,EAAKrK,EAAEqK,EAAKpK,QAGzC8K,EAAcZ,EAAWE,EAAK,EAAEL,EAAW,GAC3CG,EAAU7J,KAAKJ,GACfkK,EAAU9J,KAAKJ,GAEf6K,EAAcX,EAAWC,EAAKJ,EAAWjK,EAAE,QAE5C,CASH,GALIiK,EAAaD,IACbA,GAAchB,EAAQ/I,QAE1B8J,EAAcW,OAAOC,UAElBX,EAAaC,EACZ,OAAOZ,EAGX,IAAStC,EAAIkD,EAAYlD,GAAKiD,IAAcjD,EAEpC6B,EAASgC,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,KACrE+B,EAAU8B,EAAUP,EAAMrK,EAAI,GAAI4K,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,MAEtE/D,EAAI8H,EAAOF,EAAUP,EAAMrK,GAAI4K,EAAUP,EAAMtD,KACvCgD,GAAeiB,EAAeX,EAAMrK,EAAG+G,KAC3CgD,EAAc/G,EACdkH,EAAenD,EAAIiC,EAAQ/I,QAKnCD,EAAIkK,GACJa,EAAcZ,EAAWE,EAAKrK,EAAEkK,EAAa,GACxB,IAAjBA,GACAa,EAAcX,EAAWC,EAAKH,EAAaI,EAAErK,QAEjD8K,EAAcX,EAAWC,EAAK,EAAErK,EAAE,KAExB,IAANA,GACA+K,EAAcZ,EAAWE,EAAKrK,EAAEsK,EAAErK,QAEtC8K,EAAcZ,EAAWE,EAAK,EAAEH,EAAa,GAC7Ca,EAAcX,EAAWC,EAAKH,EAAalK,EAAE,IAarD,OARImK,EAAUlK,OAASmK,EAAUnK,QAC7BmJ,EAAmBe,EAAUd,EAAOC,EAAeC,EAAcC,EAAMC,EAASC,GAChFN,EAAmBgB,EAAUf,EAAOC,EAAeC,EAAcC,EAAMC,EAASC,KAEhFN,EAAmBgB,EAAUf,EAAOC,EAAeC,EAAcC,EAAMC,EAASC,GAChFN,EAAmBe,EAAUd,EAAOC,EAAeC,EAAcC,EAAMC,EAASC,IAG7EL,EAKf,OAFAA,EAAO/I,KAAK0I,GAELK,GA9kBP4B,SAgZJ,SAAyBjC,GACrB,IAAoBhJ,EAAhBkL,EAAOlC,EAEX,IAAIhJ,EAAE,EAAGA,EAAEkL,EAAKjL,OAAO,EAAGD,IACtB,IAAI,IAAI+G,EAAE,EAAGA,EAAE/G,EAAE,EAAG+G,IAChB,GAAGuB,EAAsB4C,EAAKlL,GAAIkL,EAAKlL,EAAE,GAAIkL,EAAKnE,GAAImE,EAAKnE,EAAE,IACzD,OAAO,EAMnB,IAAI/G,EAAE,EAAGA,EAAEkL,EAAKjL,OAAO,EAAGD,IACtB,GAAGsI,EAAsB4C,EAAK,GAAIA,EAAKA,EAAKjL,OAAO,GAAIiL,EAAKlL,GAAIkL,EAAKlL,EAAE,IACnE,OAAO,EAIf,OAAO,GAjaPmL,sBAslBJ,SAAsCnC,EAASnB,GAE3C,IADA,IAAIuD,EAAM,EACFpL,EAAEgJ,EAAQ/I,OAAO,EAAG+I,EAAQ/I,OAAO,GAAKD,GAAG,IAAKA,EACjDqL,EAAUT,EAAU5B,EAAShJ,EAAE,GAAG4K,EAAU5B,EAAShJ,GAAG4K,EAAU5B,EAAShJ,EAAE,GAAG6H,KAE/EmB,EAAQsC,OAAOtL,EAAEgJ,EAAQ/I,OAAO,GAChCmL,KAGR,OAAOA,GA9lBPG,sBAsmBJ,SAAsCvC,EAASnB,GAC3C,IAAI,IAAI7H,EAAEgJ,EAAQ/I,OAAO,EAAGD,GAAG,IAAKA,EAEhC,IADA,IAAIwL,EAAKxC,EAAQhJ,GACT+G,EAAE/G,EAAE,EAAG+G,GAAG,IAAKA,EAChB0E,EAAUD,EAAIxC,EAAQjC,GAAIc,IACzBmB,EAAQsC,OAAOtL,EAAE,IA1mB7B0L,QAiKJ,SAAwB1C,GAKpB,IAJA,IAAI2C,EAAK,EACLrB,EAAItB,EAGChJ,EAAI,EAAGA,EAAIgJ,EAAQ/I,SAAUD,GAC9BsK,EAAEtK,GAAG,GAAKsK,EAAEqB,GAAI,IAAOrB,EAAEtK,GAAG,KAAOsK,EAAEqB,GAAI,IAAMrB,EAAEtK,GAAG,GAAKsK,EAAEqB,GAAI,MAC/DA,EAAK3L,GAKb,OAAK2I,EAAOiC,EAAU5B,EAAS2C,EAAK,GAAIf,EAAU5B,EAAS2C,GAAKf,EAAU5B,EAAS2C,EAAK,MAY5F,SAAwB3C,GAGpB,IAFA,IAAI4C,EAAM,GACNC,EAAI7C,EAAQ/I,OACRD,EAAE,EAAGA,IAAI6L,EAAG7L,IAChB4L,EAAItL,KAAK0I,EAAQrI,OAErB,IAAQX,EAAE,EAAGA,IAAI6L,EAAG7L,IACtBgJ,EAAQhJ,GAAK4L,EAAI5L,GAlBX8L,CAAe9C,IACR,KA1Ff,IAAI+C,EAAY,GACZC,EAAY,GAWhB,SAASX,EAAUlK,EAAEM,EAAEsB,EAAEkJ,GACrB,GAAIA,EAEG,CACH,IAAIC,EAAKH,EACLI,EAAKH,EAETE,EAAG,GAAKzK,EAAE,GAAGN,EAAE,GACf+K,EAAG,GAAKzK,EAAE,GAAGN,EAAE,GACfgL,EAAG,GAAKpJ,EAAE,GAAGtB,EAAE,GACf0K,EAAG,GAAKpJ,EAAE,GAAGtB,EAAE,GAEf,IAAI2K,EAAMF,EAAG,GAAGC,EAAG,GAAKD,EAAG,GAAGC,EAAG,GAC7BE,EAAO7M,KAAK8M,KAAKJ,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,IACxCK,EAAO/M,KAAK8M,KAAKH,EAAG,GAAGA,EAAG,GAAKA,EAAG,GAAGA,EAAG,IAE5C,OADY3M,KAAKgN,KAAKJ,GAAKC,EAAKE,IACjBN,EAdf,OAAiC,IAA1BvD,EAAavH,EAAGM,EAAGsB,GAkBlC,SAAS+H,EAAO3J,EAAEM,GACd,IAAImD,EAAKnD,EAAE,GAAKN,EAAE,GACd0D,EAAKpD,EAAE,GAAKN,EAAE,GAClB,OAAOyD,EAAKA,EAAKC,EAAKA,EAS1B,SAAS+F,EAAU5B,EAAShJ,GACxB,IAAIyI,EAAIO,EAAQ/I,OAChB,OAAO+I,EAAQhJ,EAAI,EAAIA,EAAIyI,EAAIA,EAAIzI,EAAIyI,GAoB3C,SAASsC,EAAc/B,EAASqB,EAAMoC,EAAMC,GACxC,IAAI,IAAI1M,EAAEyM,EAAMzM,EAAE0M,EAAI1M,IAClBgJ,EAAQ1I,KAAK+J,EAAKrK,IAiD1B,SAASyK,EAAgBzB,EAAShJ,GAC9B,OAAO6I,EAAQ+B,EAAU5B,EAAShJ,EAAI,GAAI4K,EAAU5B,EAAShJ,GAAI4K,EAAU5B,EAAShJ,EAAI,IAG5F,IAAI2M,EAAS,GACTC,EAAS,GASb,SAASC,EAAc7D,EAAS7H,EAAEM,GAC9B,IAAIvB,EAAGoD,EAAMqE,EAAGgF,EAAU/E,EAAGgF,EAE7B,GAAIhE,EAASgC,EAAU5B,EAAS7H,EAAI,GAAIyJ,EAAU5B,EAAS7H,GAAIyJ,EAAU5B,EAASvH,KAAOqH,EAAU8B,EAAU5B,EAAS7H,EAAI,GAAIyJ,EAAU5B,EAAS7H,GAAIyJ,EAAU5B,EAASvH,IACpK,OAAO,EAEX6B,EAAOwH,EAAOF,EAAU5B,EAAS7H,GAAIyJ,EAAU5B,EAASvH,IACxD,IAAK,IAAIzB,EAAI,EAAGA,IAAMgJ,EAAQ/I,SAAUD,EACpC,IAAKA,EAAI,GAAKgJ,EAAQ/I,SAAWkB,GAAKnB,IAAMmB,GAGxCyH,EAASgC,EAAU5B,EAAS7H,GAAIyJ,EAAU5B,EAASvH,GAAImJ,EAAU5B,EAAShJ,EAAI,KAAO8I,EAAU8B,EAAU5B,EAAS7H,GAAIyJ,EAAU5B,EAASvH,GAAImJ,EAAU5B,EAAShJ,MAChK2H,EAAG,GAAKiD,EAAU5B,EAAS7H,GAC3BwG,EAAG,GAAKiD,EAAU5B,EAASvH,GAC3BmG,EAAG,GAAKgD,EAAU5B,EAAShJ,GAC3B4H,EAAG,GAAKgD,EAAU5B,EAAShJ,EAAI,GAC/BE,EAAIwH,EAAQC,EAAGC,GACXkD,EAAOF,EAAU5B,EAAS7H,GAAIjB,GAAKoD,GACnC,OAAO,EAKnB,OAAO,EAUX,SAAS0H,EAAehC,EAAS7H,EAAEM,GAE/B,IAAK,IAAIzB,EAAI,EAAGA,IAAMgJ,EAAQ/I,SAAUD,EAEpC,GAAIA,IAAMmB,GAAKnB,IAAMyB,IAAMzB,EAAI,GAAKgJ,EAAQ/I,SAAWkB,IAAMnB,EAAI,GAAKgJ,EAAQ/I,SAAWwB,GAGrF6G,EAAsBsC,EAAU5B,EAAS7H,GAAIyJ,EAAU5B,EAASvH,GAAImJ,EAAU5B,EAAShJ,GAAI4K,EAAU5B,EAAShJ,EAAE,IAChH,OAAO,EAGf,OAAO,EAWX,SAAS8M,EAAY9D,EAAShJ,EAAE+G,EAAEgG,GAC9B,IAAI7M,EAAI6M,GAAc,GAEtB,GAvIJ,SAAsB/D,GAClBA,EAAQ/I,OAAS,EAqIjB+M,CAAa9M,GACTF,EAAI+G,EAEJ,IAAI,IAAIkG,EAAEjN,EAAGiN,GAAGlG,EAAGkG,IACf/M,EAAEI,KAAK0I,EAAQiE,QAGhB,CAGH,IAAQA,EAAE,EAAGA,GAAGlG,EAAGkG,IACf/M,EAAEI,KAAK0I,EAAQiE,IAInB,IAAQA,EAAEjN,EAAGiN,EAAEjE,EAAQ/I,OAAQgN,IAC3B/M,EAAEI,KAAK0I,EAAQiE,IAIvB,OAAO/M,EASX,SAAS+I,EAAmBD,GAIxB,IAHA,IAAInG,EAAI,GAAIqK,EAAK,GAAIC,EAAK,GAAIC,EAAU,GACpCC,EAAS3C,OAAOC,UAEX3K,EAAI,EAAGA,EAAIgJ,EAAQ/I,SAAUD,EAClC,GAAIyK,EAAgBzB,EAAShJ,GACzB,IAAK,IAAI+G,EAAI,EAAGA,EAAIiC,EAAQ/I,SAAU8G,EAClC,GAAI8F,EAAc7D,EAAShJ,EAAG+G,GAAI,CAC9BmG,EAAOjE,EAAmB6D,EAAY9D,EAAShJ,EAAG+G,EAAGqG,IACrDD,EAAOlE,EAAmB6D,EAAY9D,EAASjC,EAAG/G,EAAGoN,IAErD,IAAI,IAAIH,EAAE,EAAGA,EAAEE,EAAKlN,OAAQgN,IACxBC,EAAK5M,KAAK6M,EAAKF,IAGfC,EAAKjN,OAASoN,IACdxK,EAAMqK,EACNG,EAASH,EAAKjN,OACd4C,EAAIvC,KAAK,CAACsK,EAAU5B,EAAShJ,GAAI4K,EAAU5B,EAASjC,MAOxE,OAAOlE,EAuBX,SAASqG,EAAaF,EAASsE,GAC3B,GAAuB,IAApBA,EAASrN,OACd,MAAO,CAAC+I,GAEN,GAAGsE,aAAoBhG,OAASgG,EAASrN,QAAUqN,EAAS,aAAchG,OAA8B,IAArBgG,EAAS,GAAGrN,QAAcqN,EAAS,GAAG,aAAchG,MAAM,CAIzI,IAFA,IAAIiG,EAAQ,CAACvE,GAELhJ,EAAE,EAAGA,EAAEsN,EAASrN,OAAQD,IAG5B,IAFA,IAAIwN,EAAUF,EAAStN,GAEf+G,EAAE,EAAGA,EAAEwG,EAAMtN,OAAQ8G,IAAI,CAC7B,IACIsC,EAASH,EADFqE,EAAMxG,GACeyG,GAChC,GAAGnE,EAAO,CAENkE,EAAMjC,OAAOvE,EAAE,GACfwG,EAAMjN,KAAK+I,EAAO,GAAGA,EAAO,IAC5B,OAKZ,OAAOkE,EAIHC,EAAUF,EACVtN,EAAIgJ,EAAQyE,QAAQD,EAAQ,IAC5BzG,EAAIiC,EAAQyE,QAAQD,EAAQ,IAEhC,OAAU,IAAPxN,IAAmB,IAAP+G,GACJ,CAAC+F,EAAY9D,EAAShJ,EAAE+G,GACvB+F,EAAY9D,EAASjC,EAAE/G,IAmC3C,SAAS6K,EAAqBxG,EAAIE,EAAID,EAAIE,EAAIgF,GAC7CA,EAAQA,GAAS,EACjB,IAAI1B,EAAKvD,EAAG,GAAKF,EAAG,GAChB0D,EAAK1D,EAAG,GAAKE,EAAG,GAChByD,EAAMF,EAAKzD,EAAG,GAAO0D,EAAK1D,EAAG,GAC7B4D,EAAKzD,EAAG,GAAKF,EAAG,GAChB4D,EAAK5D,EAAG,GAAKE,EAAG,GAChB2D,EAAMF,EAAK3D,EAAG,GAAO4D,EAAK5D,EAAG,GAC7B8D,EAAON,EAAKI,EAAOD,EAAKF,EAE5B,OAAIM,EAAUD,EAAI,EAAEoB,GAGZ,CAAC,EAAE,GAFH,EAAGtB,EAAKF,EAAOD,EAAKI,GAAOC,GAAON,EAAKK,EAAOF,EAAKD,GAAOI,GA6MnE,SAASC,EAAUlH,EAAEM,EAAEoG,GAEnB,OADAA,EAAYA,GAAa,EAClBrI,KAAKkO,IAAIvM,EAAEM,IAAMoG,EAY5B,SAAS4D,EAAUtK,EAAEM,EAAEoG,GACnB,OAAOQ,EAAUlH,EAAE,GAAGM,EAAE,GAAGoG,IAAcQ,EAAUlH,EAAE,GAAGM,EAAE,GAAGoG,K,gBC/oBGrB,EAAOC,QAAwF,WAAW,aAAa,SAASzB,EAAEA,EAAE2I,EAAExH,EAAEhF,EAAEyM,IAAI,SAAS5I,EAAE6I,EAAEF,EAAExH,EAAEhF,EAAEyM,GAAG,KAAKzM,EAAEgF,GAAG,CAAC,GAAGhF,EAAEgF,EAAE,IAAI,CAAC,IAAI2H,EAAE3M,EAAEgF,EAAE,EAAEsC,EAAEkF,EAAExH,EAAE,EAAE4H,EAAEvO,KAAKwO,IAAIF,GAAGG,EAAE,GAAGzO,KAAK0O,IAAI,EAAEH,EAAE,GAAGI,EAAE,GAAG3O,KAAK8M,KAAKyB,EAAEE,GAAGH,EAAEG,GAAGH,IAAIrF,EAAEqF,EAAE,EAAE,GAAG,EAAE,GAA+E9I,EAAE6I,EAAEF,EAA9EnO,KAAKC,IAAI0G,EAAE3G,KAAK4O,MAAMT,EAAElF,EAAEwF,EAAEH,EAAEK,IAAM3O,KAAKqD,IAAI1B,EAAE3B,KAAK4O,MAAMT,GAAGG,EAAErF,GAAGwF,EAAEH,EAAEK,IAAcP,GAAG,IAAI1N,EAAE2N,EAAEF,GAAG3K,EAAEmD,EAAErB,EAAE3D,EAAE,IAAInB,EAAE6N,EAAE1H,EAAEwH,GAAGC,EAAEC,EAAE1M,GAAGjB,GAAG,GAAGF,EAAE6N,EAAE1H,EAAEhF,GAAG6B,EAAE8B,GAAG,CAAC,IAAI9E,EAAE6N,EAAE7K,EAAE8B,GAAG9B,IAAI8B,IAAI8I,EAAEC,EAAE7K,GAAG9C,GAAG,GAAG8C,IAAI,KAAK4K,EAAEC,EAAE/I,GAAG5E,GAAG,GAAG4E,IAAI,IAAI8I,EAAEC,EAAE1H,GAAGjG,GAAGF,EAAE6N,EAAE1H,EAAErB,GAAG9E,EAAE6N,IAAI/I,EAAE3D,GAAG2D,GAAG6I,IAAIxH,EAAErB,EAAE,GAAG6I,GAAG7I,IAAI3D,EAAE2D,EAAE,IAA3Z,CAAgaE,EAAE2I,EAAExH,GAAG,EAAEhF,GAAG6D,EAAE/E,OAAO,EAAE2N,GAAGC,GAAG,SAAS7N,EAAEgF,EAAEhF,EAAE6N,GAAG,IAAIF,EAAE3I,EAAEhF,GAAGgF,EAAEhF,GAAGgF,EAAE6I,GAAG7I,EAAE6I,GAAGF,EAAE,SAASE,EAAE7I,EAAEhF,GAAG,OAAOgF,EAAEhF,GAAG,EAAEgF,EAAEhF,EAAE,EAAE,EAAE,IAAI2N,EAAE,SAAS3I,QAAG,IAASA,IAAIA,EAAE,GAAGqJ,KAAKC,YAAY9O,KAAKC,IAAI,EAAEuF,GAAGqJ,KAAKE,YAAY/O,KAAKC,IAAI,EAAED,KAAKgP,KAAK,GAAGH,KAAKC,cAAcD,KAAKI,SAAS,SAAStI,EAAEnB,EAAEhF,EAAE6N,GAAG,IAAIA,EAAE,OAAO7N,EAAEyN,QAAQzI,GAAG,IAAI,IAAI2I,EAAE,EAAEA,EAAE3N,EAAEC,OAAO0N,IAAI,GAAGE,EAAE7I,EAAEhF,EAAE2N,IAAI,OAAOA,EAAE,OAAO,EAAE,SAASxM,EAAE6D,EAAEhF,GAAG4N,EAAE5I,EAAE,EAAEA,EAAE5B,SAASnD,OAAOD,EAAEgF,GAAG,SAAS4I,EAAE5I,EAAEhF,EAAE6N,EAAEF,EAAExH,GAAGA,IAAIA,EAAEjG,EAAE,OAAOiG,EAAE/E,KAAK,IAAI+E,EAAE9E,KAAK,IAAI8E,EAAE7E,MAAK,IAAK6E,EAAE5E,MAAK,IAAK,IAAI,IAAIJ,EAAEnB,EAAEmB,EAAE0M,EAAE1M,IAAI,CAAC,IAAIyM,EAAE5I,EAAE5B,SAASjC,GAAG2M,EAAE3H,EAAEnB,EAAEzB,KAAKoK,EAAEC,GAAGA,GAAG,OAAOzH,EAAE,SAAS2H,EAAE9I,EAAEhF,GAAG,OAAOgF,EAAE5D,KAAK5B,KAAKqD,IAAImC,EAAE5D,KAAKpB,EAAEoB,MAAM4D,EAAE3D,KAAK7B,KAAKqD,IAAImC,EAAE3D,KAAKrB,EAAEqB,MAAM2D,EAAE1D,KAAK9B,KAAKC,IAAIuF,EAAE1D,KAAKtB,EAAEsB,MAAM0D,EAAEzD,KAAK/B,KAAKC,IAAIuF,EAAEzD,KAAKvB,EAAEuB,MAAMyD,EAAE,SAASyD,EAAEzD,EAAEhF,GAAG,OAAOgF,EAAE5D,KAAKpB,EAAEoB,KAAK,SAAS2M,EAAE/I,EAAEhF,GAAG,OAAOgF,EAAE3D,KAAKrB,EAAEqB,KAAK,SAAS4M,EAAEjJ,GAAG,OAAOA,EAAE1D,KAAK0D,EAAE5D,OAAO4D,EAAEzD,KAAKyD,EAAE3D,MAAM,SAAS8M,EAAEnJ,GAAG,OAAOA,EAAE1D,KAAK0D,EAAE5D,MAAM4D,EAAEzD,KAAKyD,EAAE3D,MAAM,SAASqN,EAAE1J,EAAEhF,GAAG,OAAOgF,EAAE5D,MAAMpB,EAAEoB,MAAM4D,EAAE3D,MAAMrB,EAAEqB,MAAMrB,EAAEsB,MAAM0D,EAAE1D,MAAMtB,EAAEuB,MAAMyD,EAAEzD,KAAK,SAASwB,EAAEiC,EAAEhF,GAAG,OAAOA,EAAEoB,MAAM4D,EAAE1D,MAAMtB,EAAEqB,MAAM2D,EAAEzD,MAAMvB,EAAEsB,MAAM0D,EAAE5D,MAAMpB,EAAEuB,MAAMyD,EAAE3D,KAAK,SAASnB,EAAE8E,GAAG,MAAM,CAAC5B,SAAS4B,EAAE2J,OAAO,EAAEpL,MAAK,EAAGnC,KAAK,IAAIC,KAAK,IAAIC,MAAK,IAAKC,MAAK,KAAM,SAASyB,EAAEhD,EAAE6N,EAAEF,EAAExH,EAAEhF,GAAG,IAAI,IAAIyM,EAAE,CAACC,EAAEF,GAAGC,EAAE3N,QAAQ,MAAM0N,EAAEC,EAAEjN,QAAQkN,EAAED,EAAEjN,QAAQwF,GAAG,CAAC,IAAI2H,EAAED,EAAErO,KAAKgP,MAAMb,EAAEE,GAAG1H,EAAE,GAAGA,EAAEnB,EAAEhF,EAAE8N,EAAED,EAAEF,EAAExM,GAAGyM,EAAEtN,KAAKuN,EAAEC,EAAEA,EAAEH,IAAI,OAAOA,EAAEiB,UAAUC,IAAI,WAAW,OAAOR,KAAKS,KAAKT,KAAKlL,KAAK,KAAKwK,EAAEiB,UAAUlK,OAAO,SAASM,GAAG,IAAIhF,EAAEqO,KAAKlL,KAAK0K,EAAE,GAAG,IAAI9K,EAAEiC,EAAEhF,GAAG,OAAO6N,EAAE,IAAI,IAAIF,EAAEU,KAAKnN,OAAOiF,EAAE,GAAGnG,GAAG,CAAC,IAAI,IAAImB,EAAE,EAAEA,EAAEnB,EAAEoD,SAASnD,OAAOkB,IAAI,CAAC,IAAIyM,EAAE5N,EAAEoD,SAASjC,GAAG2M,EAAE9N,EAAEuD,KAAKoK,EAAEC,GAAGA,EAAE7K,EAAEiC,EAAE8I,KAAK9N,EAAEuD,KAAKsK,EAAEvN,KAAKsN,GAAGc,EAAE1J,EAAE8I,GAAGO,KAAKS,KAAKlB,EAAEC,GAAG1H,EAAE7F,KAAKsN,IAAI5N,EAAEmG,EAAExF,MAAM,OAAOkN,GAAGF,EAAEiB,UAAUG,SAAS,SAAS/J,GAAG,IAAIhF,EAAEqO,KAAKlL,KAAK,IAAIJ,EAAEiC,EAAEhF,GAAG,OAAM,EAAG,IAAI,IAAI6N,EAAE,GAAG7N,GAAG,CAAC,IAAI,IAAI2N,EAAE,EAAEA,EAAE3N,EAAEoD,SAASnD,OAAO0N,IAAI,CAAC,IAAIxH,EAAEnG,EAAEoD,SAASuK,GAAGxM,EAAEnB,EAAEuD,KAAK8K,KAAKnN,OAAOiF,GAAGA,EAAE,GAAGpD,EAAEiC,EAAE7D,GAAG,CAAC,GAAGnB,EAAEuD,MAAMmL,EAAE1J,EAAE7D,GAAG,OAAM,EAAG0M,EAAEvN,KAAK6F,IAAInG,EAAE6N,EAAElN,MAAM,OAAM,GAAIgN,EAAEiB,UAAUjN,KAAK,SAASqD,GAAG,IAAIA,IAAIA,EAAE/E,OAAO,OAAOoO,KAAK,GAAGrJ,EAAE/E,OAAOoO,KAAKE,YAAY,CAAC,IAAI,IAAIvO,EAAE,EAAEA,EAAEgF,EAAE/E,OAAOD,IAAIqO,KAAKpM,OAAO+C,EAAEhF,IAAI,OAAOqO,KAAK,IAAIR,EAAEQ,KAAKW,OAAOhK,EAAE3E,QAAQ,EAAE2E,EAAE/E,OAAO,EAAE,GAAG,GAAGoO,KAAKlL,KAAKC,SAASnD,OAAO,GAAGoO,KAAKlL,KAAKwL,SAASd,EAAEc,OAAON,KAAKY,WAAWZ,KAAKlL,KAAK0K,OAAO,CAAC,GAAGQ,KAAKlL,KAAKwL,OAAOd,EAAEc,OAAO,CAAC,IAAIhB,EAAEU,KAAKlL,KAAKkL,KAAKlL,KAAK0K,EAAEA,EAAEF,EAAEU,KAAKa,QAAQrB,EAAEQ,KAAKlL,KAAKwL,OAAOd,EAAEc,OAAO,GAAE,QAASN,KAAKlL,KAAK0K,EAAE,OAAOQ,MAAMV,EAAEiB,UAAU3M,OAAO,SAAS+C,GAAG,OAAOA,GAAGqJ,KAAKa,QAAQlK,EAAEqJ,KAAKlL,KAAKwL,OAAO,GAAGN,MAAMV,EAAEiB,UAAUH,MAAM,WAAW,OAAOJ,KAAKlL,KAAKjD,EAAE,IAAImO,MAAMV,EAAEiB,UAAU9M,OAAO,SAASkD,EAAEhF,GAAG,IAAIgF,EAAE,OAAOqJ,KAAK,IAAI,IAAIR,EAAEF,EAAExM,EAAEyM,EAAES,KAAKlL,KAAK2K,EAAEO,KAAKnN,OAAO8D,GAAGyD,EAAE,GAAGsF,EAAE,GAAGH,GAAGnF,EAAExI,QAAQ,CAAC,GAAG2N,IAAIA,EAAEnF,EAAE9H,MAAMgN,EAAElF,EAAEA,EAAExI,OAAO,GAAG4N,EAAEE,EAAEpN,MAAMQ,GAAE,GAAIyM,EAAErK,KAAK,CAAC,IAAI0K,EAAE9H,EAAEnB,EAAE4I,EAAExK,SAASpD,GAAG,IAAI,IAAIiO,EAAE,OAAOL,EAAExK,SAASkI,OAAO2C,EAAE,GAAGxF,EAAEnI,KAAKsN,GAAGS,KAAKc,UAAU1G,GAAG4F,KAAKlN,GAAGyM,EAAErK,OAAOmL,EAAEd,EAAEE,GAAGH,GAAGE,IAAID,EAAED,EAAEvK,SAASyK,GAAG1M,GAAE,GAAIyM,EAAE,MAAMnF,EAAEnI,KAAKsN,GAAGG,EAAEzN,KAAKuN,GAAGA,EAAE,EAAEF,EAAEC,EAAEA,EAAEA,EAAExK,SAAS,IAAI,OAAOiL,MAAMV,EAAEiB,UAAU1N,OAAO,SAAS8D,GAAG,OAAOA,GAAG2I,EAAEiB,UAAUpN,YAAY,SAASwD,EAAEhF,GAAG,OAAOgF,EAAE5D,KAAKpB,EAAEoB,MAAMuM,EAAEiB,UAAUlN,YAAY,SAASsD,EAAEhF,GAAG,OAAOgF,EAAE3D,KAAKrB,EAAEqB,MAAMsM,EAAEiB,UAAUQ,OAAO,WAAW,OAAOf,KAAKlL,MAAMwK,EAAEiB,UAAUS,SAAS,SAASrK,GAAG,OAAOqJ,KAAKlL,KAAK6B,EAAEqJ,MAAMV,EAAEiB,UAAUE,KAAK,SAAS9J,EAAEhF,GAAG,IAAI,IAAI6N,EAAE,GAAG7I,GAAGA,EAAEzB,KAAKvD,EAAEM,KAAKgP,MAAMtP,EAAEgF,EAAE5B,UAAUyK,EAAEvN,KAAKgP,MAAMzB,EAAE7I,EAAE5B,UAAU4B,EAAE6I,EAAElN,MAAM,OAAOX,GAAG2N,EAAEiB,UAAUI,OAAO,SAAShK,EAAEhF,EAAE6N,EAAEF,GAAG,IAAIxH,EAAEyH,EAAEC,EAAE7N,EAAE,EAAE8N,EAAEO,KAAKC,YAAY,GAAGV,GAAGE,EAAE,OAAO3M,EAAEgF,EAAEjG,EAAE8E,EAAE3E,MAAML,EAAE6N,EAAE,IAAIQ,KAAKnN,QAAQiF,EAAEwH,IAAIA,EAAEnO,KAAKgP,KAAKhP,KAAKwO,IAAIJ,GAAGpO,KAAKwO,IAAIF,IAAIA,EAAEtO,KAAKgP,KAAKZ,EAAEpO,KAAK+P,IAAIzB,EAAEH,EAAE,MAAMxH,EAAEjG,EAAE,KAAKqD,MAAK,EAAG4C,EAAEwI,OAAOhB,EAAE,IAAIlF,EAAEjJ,KAAKgP,KAAKZ,EAAEE,GAAGC,EAAEtF,EAAEjJ,KAAKgP,KAAKhP,KAAK8M,KAAKwB,IAAI9K,EAAEgC,EAAEhF,EAAE6N,EAAEE,EAAEM,KAAK7M,aAAa,IAAI,IAAIyM,EAAEjO,EAAEiO,GAAGJ,EAAEI,GAAGF,EAAE,CAAC,IAAII,EAAE3O,KAAKqD,IAAIoL,EAAEF,EAAE,EAAEF,GAAG7K,EAAEgC,EAAEiJ,EAAEE,EAAE1F,EAAE4F,KAAK3M,aAAa,IAAI,IAAIgN,EAAET,EAAES,GAAGP,EAAEO,GAAGjG,EAAE,CAAC,IAAI1F,EAAEvD,KAAKqD,IAAI6L,EAAEjG,EAAE,EAAE0F,GAAGhI,EAAE/C,SAAS9C,KAAK+N,KAAKW,OAAOhK,EAAE0J,EAAE3L,EAAE4K,EAAE,KAAK,OAAOxM,EAAEgF,EAAEkI,KAAKnN,QAAQiF,GAAGwH,EAAEiB,UAAUY,eAAe,SAASxK,EAAEhF,EAAE6N,EAAEF,GAAG,KAAKA,EAAErN,KAAKN,IAAIA,EAAEuD,MAAMoK,EAAE1N,OAAO,IAAI4N,GAAG,CAAC,IAAI,IAAI1H,EAAE,IAAIhF,EAAE,IAAIyM,OAAE,EAAOE,EAAE,EAAEA,EAAE9N,EAAEoD,SAASnD,OAAO6N,IAAI,CAAC,IAAIrF,EAAEzI,EAAEoD,SAAS0K,GAAGC,EAAEE,EAAExF,GAAG0F,GAAGO,EAAE1J,EAAEjC,EAAE0F,GAAGjJ,KAAKC,IAAIsD,EAAEzB,KAAKoN,EAAEpN,MAAM9B,KAAKqD,IAAIE,EAAE3B,KAAKsN,EAAEtN,QAAQ5B,KAAKC,IAAIsD,EAAExB,KAAKmN,EAAEnN,MAAM/B,KAAKqD,IAAIE,EAAE1B,KAAKqN,EAAErN,OAAO0M,GAAGI,EAAEhN,GAAGA,EAAEgN,EAAEhI,EAAE4H,EAAE5H,EAAE4H,EAAE5H,EAAEyH,EAAEnF,GAAG0F,IAAIhN,GAAG4M,EAAE5H,IAAIA,EAAE4H,EAAEH,EAAEnF,GAAGzI,EAAE4N,GAAG5N,EAAEoD,SAAS,GAAG,IAAIsL,EAAE3L,EAAE,OAAO/C,GAAG2N,EAAEiB,UAAUM,QAAQ,SAASlK,EAAEhF,EAAE6N,GAAG,IAAIF,EAAEE,EAAE7I,EAAEqJ,KAAKnN,OAAO8D,GAAGmB,EAAE,GAAGhF,EAAEkN,KAAKmB,eAAe7B,EAAEU,KAAKlL,KAAKnD,EAAEmG,GAAG,IAAIhF,EAAEiC,SAAS9C,KAAK0E,GAAG8I,EAAE3M,EAAEwM,GAAG3N,GAAG,GAAGmG,EAAEnG,GAAGoD,SAASnD,OAAOoO,KAAKC,aAAaD,KAAKoB,OAAOtJ,EAAEnG,GAAGA,IAAIqO,KAAKqB,oBAAoB/B,EAAExH,EAAEnG,IAAI2N,EAAEiB,UAAUa,OAAO,SAASzK,EAAEhF,GAAG,IAAI6N,EAAE7I,EAAEhF,GAAG2N,EAAEE,EAAEzK,SAASnD,OAAOkG,EAAEkI,KAAKE,YAAYF,KAAKsB,iBAAiB9B,EAAE1H,EAAEwH,GAAG,IAAIC,EAAES,KAAKuB,kBAAkB/B,EAAE1H,EAAEwH,GAAGG,EAAE5N,EAAE2N,EAAEzK,SAASkI,OAAOsC,EAAEC,EAAEzK,SAASnD,OAAO2N,IAAIE,EAAEa,OAAOd,EAAEc,OAAOb,EAAEvK,KAAKsK,EAAEtK,KAAKpC,EAAE0M,EAAEQ,KAAKnN,QAAQC,EAAE2M,EAAEO,KAAKnN,QAAQlB,EAAEgF,EAAEhF,EAAE,GAAGoD,SAAS9C,KAAKwN,GAAGO,KAAKY,WAAWpB,EAAEC,IAAIH,EAAEiB,UAAUK,WAAW,SAASjK,EAAEhF,GAAGqO,KAAKlL,KAAKjD,EAAE,CAAC8E,EAAEhF,IAAIqO,KAAKlL,KAAKwL,OAAO3J,EAAE2J,OAAO,EAAEN,KAAKlL,KAAKI,MAAK,EAAGpC,EAAEkN,KAAKlL,KAAKkL,KAAKnN,SAASyM,EAAEiB,UAAUgB,kBAAkB,SAAS5K,EAAEhF,EAAE6N,GAAG,IAAI,IAAIF,EAAExH,EAAEhF,EAAE2M,EAAErF,EAAEsF,EAAEI,EAAEO,EAAE,IAAI3L,EAAE,IAAI7C,EAAEF,EAAEE,GAAG2N,EAAE7N,EAAEE,IAAI,CAAC,IAAI8C,EAAE4K,EAAE5I,EAAE,EAAE9E,EAAEmO,KAAKnN,QAAQ4D,EAAE8I,EAAE5I,EAAE9E,EAAE2N,EAAEQ,KAAKnN,QAAQoJ,GAAGnE,EAAEnD,EAAE7B,EAAE2D,EAAEgJ,OAAE,EAAOrF,OAAE,EAAOsF,OAAE,EAAOI,OAAE,EAAOL,EAAEtO,KAAKC,IAAI0G,EAAE/E,KAAKD,EAAEC,MAAMqH,EAAEjJ,KAAKC,IAAI0G,EAAE9E,KAAKF,EAAEE,MAAM0M,EAAEvO,KAAKqD,IAAIsD,EAAE7E,KAAKH,EAAEG,MAAM6M,EAAE3O,KAAKqD,IAAIsD,EAAE5E,KAAKJ,EAAEI,MAAM/B,KAAKC,IAAI,EAAEsO,EAAED,GAAGtO,KAAKC,IAAI,EAAE0O,EAAE1F,IAAIoH,EAAE5B,EAAEjL,GAAGiL,EAAEnJ,GAAGwF,EAAEoE,GAAGA,EAAEpE,EAAEqD,EAAEzN,EAAE6C,EAAE8M,EAAE9M,EAAE8M,EAAE9M,GAAGuH,IAAIoE,GAAGmB,EAAE9M,IAAIA,EAAE8M,EAAElC,EAAEzN,GAAG,OAAOyN,GAAGE,EAAE7N,GAAG2N,EAAEiB,UAAUe,iBAAiB,SAAS3K,EAAEhF,EAAE6N,GAAG,IAAIF,EAAE3I,EAAEzB,KAAK8K,KAAK7M,YAAYiH,EAAEtC,EAAEnB,EAAEzB,KAAK8K,KAAK3M,YAAYqM,EAAEM,KAAKyB,eAAe9K,EAAEhF,EAAE6N,EAAEF,GAAGU,KAAKyB,eAAe9K,EAAEhF,EAAE6N,EAAE1H,IAAInB,EAAE5B,SAAS7C,KAAKoN,IAAIA,EAAEiB,UAAUkB,eAAe,SAAS9K,EAAEhF,EAAE6N,EAAEF,GAAG3I,EAAE5B,SAAS7C,KAAKoN,GAAG,IAAI,IAAIxH,EAAEkI,KAAKnN,OAAOC,EAAEyM,EAAE5I,EAAE,EAAEhF,EAAEmG,GAAGsC,EAAEmF,EAAE5I,EAAE6I,EAAE7N,EAAE6N,EAAE1H,GAAG4H,EAAEI,EAAEhN,GAAGgN,EAAE1F,GAAGwF,EAAEjO,EAAEiO,EAAEJ,EAAE7N,EAAEiO,IAAI,CAAC,IAAIS,EAAE1J,EAAE5B,SAAS6K,GAAGH,EAAE3M,EAAE6D,EAAEzB,KAAK4C,EAAEuI,GAAGA,GAAGX,GAAGI,EAAEhN,GAAG,IAAI,IAAI4B,EAAE8K,EAAE7N,EAAE,EAAE+C,GAAG/C,EAAE+C,IAAI,CAAC,IAAI7C,EAAE8E,EAAE5B,SAASL,GAAG+K,EAAErF,EAAEzD,EAAEzB,KAAK4C,EAAEjG,GAAGA,GAAG6N,GAAGI,EAAE1F,GAAG,OAAOsF,GAAGJ,EAAEiB,UAAUc,oBAAoB,SAAS1K,EAAEhF,EAAE6N,GAAG,IAAI,IAAIF,EAAEE,EAAEF,GAAG,EAAEA,IAAIG,EAAE9N,EAAE2N,GAAG3I,IAAI2I,EAAEiB,UAAUO,UAAU,SAASnK,GAAG,IAAI,IAAIhF,EAAEgF,EAAE/E,OAAO,EAAE4N,OAAE,EAAO7N,GAAG,EAAEA,IAAI,IAAIgF,EAAEhF,GAAGoD,SAASnD,OAAOD,EAAE,GAAG6N,EAAE7I,EAAEhF,EAAE,GAAGoD,UAAUkI,OAAOuC,EAAEJ,QAAQzI,EAAEhF,IAAI,GAAGqO,KAAKI,QAAQtN,EAAE6D,EAAEhF,GAAGqO,KAAKnN,SAASyM,EAAxuM3N,I,mBCA2F,SAASgF,GAAG,aAAa,MAAMmB,EAAE,UAAU0H,EAAE,sBAAsB,SAASF,EAAE3I,EAAEmB,EAAE0H,EAAEF,EAAEG,GAAG,IAAIG,EAAEjO,EAAEmO,EAAEpL,EAAE0F,EAAEtC,EAAE,GAAGhF,EAAEwM,EAAE,GAAG3K,EAAE,EAAE+K,EAAE,EAAE5M,EAAEsH,GAAGtH,GAAGsH,GAAGwF,EAAExF,EAAEA,EAAEtC,IAAInD,KAAKiL,EAAE9M,EAAEA,EAAEwM,IAAII,IAAI,IAAI7N,EAAE,EAAE,GAAG8C,EAAEgC,GAAG+I,EAAEF,EAAE,IAAI1M,EAAEsH,GAAGtH,GAAGsH,GAAG0F,EAAEF,IAAIjO,EAAEyI,EAAEwF,GAAGxF,GAAGA,EAAEtC,IAAInD,KAAKmL,EAAEF,IAAIjO,EAAEmB,EAAE8M,GAAG9M,GAAGA,EAAEwM,IAAII,IAAIE,EAAEjO,EAAE,IAAImO,IAAIL,EAAE5N,KAAKiO,GAAGnL,EAAEgC,GAAG+I,EAAEF,GAAG1M,EAAEsH,GAAGtH,GAAGsH,GAAG0F,EAAEF,IAAIjO,EAAEiO,EAAExF,IAAI1F,EAAE/C,EAAEiO,KAAKxF,EAAE1F,GAAG0F,EAAEtC,IAAInD,KAAKmL,EAAEF,IAAIjO,EAAEiO,EAAE9M,IAAI4B,EAAE/C,EAAEiO,KAAK9M,EAAE4B,GAAG5B,EAAEwM,IAAII,IAAIE,EAAEjO,EAAE,IAAImO,IAAIL,EAAE5N,KAAKiO,GAAG,KAAKnL,EAAEgC,GAAGmJ,EAAEF,IAAIjO,EAAEiO,EAAExF,IAAI1F,EAAE/C,EAAEiO,KAAKxF,EAAE1F,GAAG0F,EAAEtC,IAAInD,GAAGiL,EAAEjO,EAAE,IAAImO,IAAIL,EAAE5N,KAAKiO,GAAG,KAAKJ,EAAEF,GAAGM,EAAEF,IAAIjO,EAAEiO,EAAE9M,IAAI4B,EAAE/C,EAAEiO,KAAK9M,EAAE4B,GAAG5B,EAAEwM,IAAII,GAAGE,EAAEjO,EAAE,IAAImO,IAAIL,EAAE5N,KAAKiO,GAAG,OAAO,IAAIF,GAAG,IAAI/N,IAAI4N,EAAE5N,KAAK+N,GAAG/N,EAAE,SAAS4N,EAAE9I,GAAG,OAAO,IAAI+K,aAAa/K,GAAG,MAAMiJ,EAAE,sBAAsBjO,EAAE,sBAAsBmO,EAAE,sBAAsBpL,EAAE+K,EAAE,GAAGrF,EAAEqF,EAAE,GAAG3M,EAAE2M,EAAE,IAAI9K,EAAE8K,EAAE,IAAIC,EAAED,EAAE,GAAG9I,EAAEgL,SAAS,SAAShL,EAAE8I,EAAE5N,EAAEuB,EAAEsD,EAAE6I,GAAG,MAAMiC,GAAG/B,EAAEF,IAAI1N,EAAE6E,GAAGD,GAAGE,EAAED,IAAItD,EAAEmM,GAAG7G,EAAE8I,EAAE/K,EAAE,GAAG,IAAI+K,GAAG,IAAI/K,GAAG+K,EAAE,GAAG/K,EAAE,EAAE,OAAOiC,EAAE,MAAM2H,EAAElP,KAAKkO,IAAImC,EAAE/K,GAAG,OAAOtF,KAAKkO,IAAI3G,IAAIkH,EAAES,EAAE3H,GAAG,SAAS/B,EAAE8I,EAAEG,EAAE/N,EAAEuB,EAAEsD,EAAE6I,GAAG,IAAIiC,EAAE/K,EAAEiC,EAAE2H,EAAEuB,EAAE3F,EAAE4F,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEtD,EAAEuD,EAAEC,EAAEC,EAAEC,EAAEvK,EAAE,MAAMwK,EAAE5L,EAAEvD,EAAEoP,EAAE5C,EAAExM,EAAEqP,EAAEhD,EAAE/I,EAAEgM,EAAE7Q,EAAE6E,EAAEkL,GAAGQ,GAAGN,EAAES,GAAGV,GAAG5F,EAAEnE,EAAEyK,IAAItG,EAAEsG,MAAMP,EAAEU,GAAGX,GAAG9F,EAAEnE,EAAE4K,IAAIzG,EAAEyG,OAAOP,EAAEI,EAAEG,GAAGb,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKC,EAAEG,GAAGE,GAAGR,EAAEW,GAAGZ,GAAG5F,EAAEnE,EAAE2K,IAAIxG,EAAEwG,MAAMT,EAAEQ,GAAGT,GAAG9F,EAAEnE,EAAE0K,IAAIvG,EAAEuG,OAAOH,EAAEI,EAAED,GAAGX,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKtN,EAAE,GAAG0N,GAAGH,EAAEL,IAAIA,EAAEU,GAAGV,GAAGhD,EAAEuD,IAAID,EAAEC,EAAEF,IAAIL,EAAEM,EAAEC,KAAKF,EAAEL,KAAKK,EAAErD,EAAEyD,GAAG3N,EAAE,GAAGkK,GAAGqD,EAAEL,IAAIA,EAAES,GAAGT,GAAG7J,EAAEmK,EAAED,GAAGC,EAAExN,EAAE,GAAGwN,GAAGnK,EAAE6J,IAAIK,EAAEL,GAAGlN,EAAE,GAAGqD,EAAE,IAAI4K,EAAE,SAAShM,EAAEmB,GAAG,IAAI0H,EAAE1H,EAAE,GAAG,IAAI,IAAIwH,EAAE,EAAEA,EAAE3I,EAAE2I,IAAIE,GAAG1H,EAAEwH,GAAG,OAAOE,EAA5D,CAA+D,EAAE9K,GAAGkO,EAAEjR,EAAE4N,EAAE,GAAGoD,GAAGC,IAAID,GAAGC,EAAE,OAAOD,EAAE,GAAGnB,EAAE7K,GAAG4L,GAAGX,EAAEjL,EAAE4L,KAAKX,EAAExO,GAAGsF,EAAEkH,GAAG4C,GAAGZ,EAAEhC,EAAE4C,KAAKZ,EAAExO,GAAGqD,EAAEgJ,GAAGgD,GAAGb,EAAEnC,EAAEgD,KAAKb,EAAElL,GAAG2J,EAAExO,GAAG6Q,GAAGd,EAAE/P,EAAE6Q,KAAKd,EAAElL,GAAG,IAAI8K,GAAG,IAAI/K,GAAG,IAAIiC,GAAG,IAAI2H,EAAE,OAAOsC,EAAE,GAAGC,EAAE9C,EAAEP,EAAEC,EAAErO,KAAKkO,IAAIsD,IAAIA,GAAGJ,EAAElC,EAAEqC,EAAElB,GAAGiB,EAAE/J,EAAE8J,EAAE/L,KAAKmM,IAAID,GAAGC,EAAE,OAAOD,EAAEf,GAAGQ,GAAGN,EAAEN,GAAGK,GAAG5F,EAAEnE,EAAE0J,IAAIvF,EAAEuF,MAAMQ,EAAEU,GAAGX,GAAG9F,EAAEnE,EAAE4K,IAAIzG,EAAEyG,OAAOP,EAAEX,EAAEkB,GAAGb,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKC,EAAEG,GAAGE,GAAGR,EAAErL,GAAGoL,GAAG5F,EAAEnE,EAAErB,IAAIwF,EAAExF,MAAMuL,EAAEQ,GAAGT,GAAG9F,EAAEnE,EAAE0K,IAAIvG,EAAEuG,OAAOH,EAAE5L,EAAE+L,GAAGX,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKtC,EAAE,GAAG0C,GAAGH,EAAEL,IAAIA,EAAEU,GAAGV,GAAGhD,EAAEuD,IAAID,EAAEC,EAAEF,IAAIL,EAAEM,EAAEC,KAAKF,EAAEL,KAAKK,EAAErD,EAAEyD,GAAG3C,EAAE,GAAGd,GAAGqD,EAAEL,IAAIA,EAAES,GAAGT,GAAG7J,EAAEmK,EAAED,GAAGC,EAAExC,EAAE,GAAGwC,GAAGnK,EAAE6J,IAAIK,EAAEL,GAAGlC,EAAE,GAAG3H,EAAE,MAAM8K,EAAEvD,EAAE,EAAE5K,EAAE,EAAEgL,EAAEtF,GAAGwH,GAAGQ,GAAGN,EAAES,GAAGV,GAAG5F,EAAEnE,EAAEyK,IAAItG,EAAEsG,MAAMP,EAAE3B,GAAG0B,GAAG9F,EAAEnE,EAAEuI,IAAIpE,EAAEoE,OAAO8B,EAAEI,EAAElC,GAAGwB,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKC,EAAEG,GAAGE,GAAGR,EAAEW,GAAGZ,GAAG5F,EAAEnE,EAAE2K,IAAIxG,EAAEwG,MAAMT,EAAEtJ,GAAGqJ,GAAG9F,EAAEnE,EAAEY,IAAIuD,EAAEvD,OAAO2J,EAAEI,EAAE/J,GAAGmJ,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKtC,EAAE,GAAG0C,GAAGH,EAAEL,IAAIA,EAAEU,GAAGV,GAAGhD,EAAEuD,IAAID,EAAEC,EAAEF,IAAIL,EAAEM,EAAEC,KAAKF,EAAEL,KAAKK,EAAErD,EAAEyD,GAAG3C,EAAE,GAAGd,GAAGqD,EAAEL,IAAIA,EAAES,GAAGT,GAAG7J,EAAEmK,EAAED,GAAGC,EAAExC,EAAE,GAAGwC,GAAGnK,EAAE6J,IAAIK,EAAEL,GAAGlC,EAAE,GAAG3H,EAAE,MAAMyF,EAAE8B,EAAEuD,EAAEzI,EAAE,EAAEsF,EAAE5M,GAAG8O,GAAGQ,GAAGN,EAAEN,GAAGK,GAAG5F,EAAEnE,EAAE0J,IAAIvF,EAAEuF,MAAMQ,EAAE3B,GAAG0B,GAAG9F,EAAEnE,EAAEuI,IAAIpE,EAAEoE,OAAO8B,EAAEX,EAAEnB,GAAGwB,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKC,EAAEG,GAAGE,GAAGR,EAAErL,GAAGoL,GAAG5F,EAAEnE,EAAErB,IAAIwF,EAAExF,MAAMuL,EAAEtJ,GAAGqJ,GAAG9F,EAAEnE,EAAEY,IAAIuD,EAAEvD,OAAO2J,EAAE5L,EAAEiC,GAAGmJ,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKtC,EAAE,GAAG0C,GAAGH,EAAEL,IAAIA,EAAEU,GAAGV,GAAGhD,EAAEuD,IAAID,EAAEC,EAAEF,IAAIL,EAAEM,EAAEC,KAAKF,EAAEL,KAAKK,EAAErD,EAAEyD,GAAG3C,EAAE,GAAGd,GAAGqD,EAAEL,IAAIA,EAAES,GAAGT,GAAG7J,EAAEmK,EAAED,GAAGC,EAAExC,EAAE,GAAGwC,GAAGnK,EAAE6J,IAAIK,EAAEL,GAAGlC,EAAE,GAAG3H,EAAE,MAAM+K,EAAExD,EAAE9B,EAAE1K,EAAE,EAAE4M,EAAE/K,GAAG,OAAOA,EAAEmO,EAAE,GAAhhD,CAAohDnM,EAAE8I,EAAE5N,EAAEuB,EAAEsD,EAAE6I,EAAEc,IAAI1J,EAAEoM,aAAa,SAASpM,EAAEmB,EAAE0H,EAAEF,EAAEG,EAAEG,GAAG,OAAO9H,EAAE8H,IAAIJ,EAAEC,IAAI9I,EAAE8I,IAAIH,EAAEM,IAAIoD,OAAOC,eAAetM,EAAE,aAAa,CAACuM,OAAM,IAA5mFpL,CAAEM,I,8ECCvD,MAAM+K,EACjBC,YAAYtO,EAAO,GAAIuO,EAAUC,GAK7B,GAJAtD,KAAKlL,KAAOA,EACZkL,KAAKpO,OAASoO,KAAKlL,KAAKlD,OACxBoO,KAAKqD,QAAUA,EAEXrD,KAAKpO,OAAS,EACd,IAAK,IAAID,GAAKqO,KAAKpO,QAAU,GAAK,EAAGD,GAAK,EAAGA,IAAKqO,KAAKuD,MAAM5R,GAIrEM,KAAKqD,GACD0K,KAAKlL,KAAK7C,KAAKqD,GACf0K,KAAKpO,SACLoO,KAAKwD,IAAIxD,KAAKpO,OAAS,GAG3BU,MACI,GAAoB,IAAhB0N,KAAKpO,OAAc,OAEvB,MAAMJ,EAAMwO,KAAKlL,KAAK,GAChBpD,EAASsO,KAAKlL,KAAKxC,MAQzB,OAPA0N,KAAKpO,SAEDoO,KAAKpO,OAAS,IACdoO,KAAKlL,KAAK,GAAKpD,EACfsO,KAAKuD,MAAM,IAGR/R,EAGX6D,OACI,OAAO2K,KAAKlL,KAAK,GAGrB0O,IAAIC,GACA,MAAM,KAAC3O,EAAI,QAAEuO,GAAWrD,KAClB1K,EAAOR,EAAK2O,GAElB,KAAOA,EAAM,GAAG,CACZ,MAAMC,EAAUD,EAAM,GAAM,EACtBE,EAAU7O,EAAK4O,GACrB,GAAIL,EAAQ/N,EAAMqO,IAAY,EAAG,MACjC7O,EAAK2O,GAAOE,EACZF,EAAMC,EAGV5O,EAAK2O,GAAOnO,EAGhBiO,MAAME,GACF,MAAM,KAAC3O,EAAI,QAAEuO,GAAWrD,KAClB4D,EAAa5D,KAAKpO,QAAU,EAC5B0D,EAAOR,EAAK2O,GAElB,KAAOA,EAAMG,GAAY,CACrB,IAAIrS,EAAoB,GAAZkS,GAAO,GACfI,EAAO/O,EAAKvD,GAChB,MAAME,EAAQF,EAAO,EAMrB,GAJIE,EAAQuO,KAAKpO,QAAUyR,EAAQvO,EAAKrD,GAAQoS,GAAQ,IACpDtS,EAAOE,EACPoS,EAAO/O,EAAKrD,IAEZ4R,EAAQQ,EAAMvO,IAAS,EAAG,MAE9BR,EAAK2O,GAAOI,EACZJ,EAAMlS,EAGVuD,EAAK2O,GAAOnO,GAIpB,SAASgO,EAAexQ,EAAGM,GACvB,OAAON,EAAIM,GAAK,EAAIN,EAAIM,EAAI,EAAI,KC5EhC0Q,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB3S,IAAjB4S,EACH,OAAOA,EAAa7L,QAGrB,IAAID,EAAS2L,EAAyBE,GAAY,CAGjD5L,QAAS,IAOV,OAHA8L,EAAoBF,GAAUG,KAAKhM,EAAOC,QAASD,EAAQA,EAAOC,QAAS2L,GAGpE5L,EAAOC,QCpBf2L,EAAoBvE,EAAI,SAASrH,GAChC,IAAIiM,EAASjM,GAAUA,EAAOkM,WAC7B,WAAa,OAAOlM,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADA4L,EAAoBpP,EAAEyP,EAAQ,CAAEtR,EAAGsR,IAC5BA,GCLRL,EAAoBpP,EAAI,SAASyD,EAASkM,GACzC,IAAI,IAAIC,KAAOD,EACXP,EAAoBtE,EAAE6E,EAAYC,KAASR,EAAoBtE,EAAErH,EAASmM,IAC5EvB,OAAOC,eAAe7K,EAASmM,EAAK,CAAEC,YAAY,EAAMC,IAAKH,EAAWC,MCJ3ER,EAAoBtE,EAAI,SAASiF,EAAKC,GAAQ,OAAO3B,OAAOzC,UAAUqE,eAAeT,KAAKO,EAAKC,ICC/FZ,EAAoBzE,EAAI,SAASlH,GACX,oBAAXyM,QAA0BA,OAAOC,aAC1C9B,OAAOC,eAAe7K,EAASyM,OAAOC,YAAa,CAAE5B,MAAO,WAE7DF,OAAOC,eAAe7K,EAAS,aAAc,CAAE8K,OAAO,K,qDCCvD,MAAM6B,EAAa/B,OAAOgC,OAAO,CAChCC,gBAAiB,EACjBC,iBAAkB,EAClBC,YAAa,EACbC,eAAgB,EAChBC,cAAe,EACfC,mBAAoB,EACpBC,oBAAqB,IAOtB,SAAS,EAASC,GAEjBtJ,QAAQyD,IAAI6F,GAOb,SAASC,KAAcC,GACtB,IAAIF,EAAM,GACV,IAAK,IAAI7T,EAAI,EAAGA,EAAI+T,EAAK9T,OAAQD,IAAK,CACrC,MAAMgU,EAAMD,EAAK/T,GACbgU,IACHH,GAAOG,GAGTzJ,QAAQ0J,MAAMJ,GA0Bf,SAASK,EAAQC,EAAYrP,EAAGC,GAC/B,MAAMqP,EAAOD,EAAWlU,OACxB,IAAID,EAAG+G,EAAGhE,GAAI,EAEd,IAAK/C,EAAI,EAAG+G,EAAIqN,EAAO,EAAGpU,EAAIoU,EAAMrN,EAAI/G,IAAK,CAC5C,MAAMwL,EAAK2I,EAAWnU,GAAIqU,EAAKF,EAAWpN,IAEnCyE,EAAGzG,GAAKA,GAAOA,EAAIsP,EAAGtP,GAC1BsP,EAAGtP,GAAKA,GAAOA,EAAIyG,EAAGzG,IACvBD,GAAKuP,EAAGvP,EAAI0G,EAAG1G,IAAMC,EAAIyG,EAAGzG,IAAMsP,EAAGtP,EAAIyG,EAAGzG,GAAKyG,EAAG1G,IAErD/B,GAAKA,GAEP,OAAOA,EAqBR,SAASuR,EAAoBjV,GAE5B,MAAMkV,EAASlV,EAAOmV,QAAO,CAACC,GAAO3P,EAAAA,EAAGC,EAAAA,MACvC0P,EAAI3P,GAAKA,EACT2P,EAAI1P,GAAKA,EACF0P,IACL,CAAE3P,EAAG,EAAGC,EAAG,IACdwP,EAAOzP,GAAKzF,EAAOY,OACnBsU,EAAOxP,GAAK1F,EAAOY,OAUnB,OAPqBZ,EAAOqV,KAAIxU,IAC/BA,EAAEyU,MAAqD,IAA7CnV,KAAKoV,MAAM1U,EAAE6E,EAAIwP,EAAOxP,EAAG7E,EAAE4E,EAAIyP,EAAOzP,GAAWtF,KAAKqV,GAC3D3U,KAI0BK,MAAK,CAACY,EAAGM,IAAMN,EAAEwT,MAAQlT,EAAEkT,QAe9D,MAAMG,EACLrD,cACC,MAAMsD,EAAQ,6BACd,IAA0BC,EACtBC,EAA6BC,EAD7BC,GAAe,EAMnB,GAJA9G,KAAK+G,KAAO,KAEZ/G,KAAKgH,aAAe,KAEhBC,MAAQA,KAAKC,UAAYD,KAAKC,SAASC,gBAAiB,CAC3D,MAAMC,EAAYF,SAASC,gBAAgBT,EAAO,OAClDI,EAAgC,OAAhBM,EAAU3Q,EAGvBqQ,GAEHF,EAA8B,SAAUS,GACvC,OAAOA,GACNC,KAAKtH,MACP6G,EAAkC,SAAUU,GAC3C,OAAQA,GACP,IAAK,SACL,IAAK,OACL,IAAK,WAGH,OADUL,SAASC,gBAAgBT,EAAOa,GAI5C,QACC,MAAM,IAAIC,MAAM,eAAeD,SAKlCX,EAA8B,WAC7B,MAAO,CACNa,WAAY,IAAIC,IAChB3S,SAAU,GACV4S,eAAgB,SAAUC,EAAUrD,EAAKsD,GACxC7H,KAAKyH,WAAWK,IAAIvD,EAAKsD,IAE1BE,YAAa,SAAUF,GACtB7H,KAAKjL,SAAS9C,KAAK4V,IAEpBG,YAAa,SAAUH,GACtB,MAAMI,EAAQjI,KAAKjL,SAASqK,QAAQyI,IACrB,IAAXI,GACHjI,KAAKjL,SAASkI,OAAOgL,EAAO,MAKhChB,KAAKiB,iBAAmB,WACvBlI,KAAKyH,WAAa,IAAIC,KAEvBQ,iBAAiB3H,UAAU4H,aAAe,SAAU5D,EAAKsD,GACxD7H,KAAKyH,WAAWK,IAAIvD,EAAKsD,IAE1BK,iBAAiB3H,UAAU6H,aAAe,SAAU7D,GACnD,OAAOvE,KAAKyH,WAAWhD,IAAIF,IAE5B2D,iBAAiB3H,UAAU8H,gBAAkB,SAAU9D,GACtDvE,KAAKyH,WAAWa,OAAO/D,IAGxB0C,KAAKsB,eAAiB,WACrBvI,KAAKyH,WAAa,IAAIC,KAEvBa,eAAehI,UAAU4H,aAAe,SAAU5D,EAAKsD,GACtD7H,KAAKyH,WAAWK,IAAIvD,EAAKsD,IAE1BU,eAAehI,UAAU6H,aAAe,SAAU7D,GACjD,OAAOvE,KAAKyH,WAAWhD,IAAIF,IAE5BgE,eAAehI,UAAU8H,gBAAkB,SAAU9D,GACpDvE,KAAKyH,WAAWa,OAAO/D,IAGxB0C,KAAKuB,mBAAqB,WACzBxI,KAAKyH,WAAa,IAAIC,KAEvBc,mBAAmBjI,UAAU4H,aAAe,SAAU5D,EAAKsD,GAC1D7H,KAAKyH,WAAWK,IAAIvD,EAAKsD,IAE1BW,mBAAmBjI,UAAU6H,aAAe,SAAU7D,GACrD,OAAOvE,KAAKyH,WAAWhD,IAAIF,IAE5BiE,mBAAmBjI,UAAU8H,gBAAkB,SAAU9D,GACxDvE,KAAKyH,WAAWa,OAAO/D,IAIxBsC,EAAkC,SAAUU,GAC3C,OAAQA,GACP,IAAK,SACJ,OAAO,IAAIW,iBACZ,IAAK,OACJ,OAAO,IAAIK,eACZ,IAAK,WACJ,OAAO,IAAIC,mBAEZ,QACC,MAAM,IAAIhB,MAAM,eAAeD,QAKnCW,iBAAiB3H,UAAUkI,KAAO,SAAUhS,EAAGC,EAAGgS,GACjD1I,KAAKmI,aAAa,KAAM1R,GACxBuJ,KAAKmI,aAAa,KAAMzR,GACxBsJ,KAAKmI,aAAa,IAAKO,IAExBR,iBAAiB3H,UAAUoI,eAAiB,WAAc,OAAO3I,KAAKoI,aAAa,WACnFF,iBAAiB3H,UAAUqI,eAAiB,SAAUC,GAAO7I,KAAKmI,aAAa,SAAUU,IACzFX,iBAAiB3H,UAAUuI,YAAc,WACxC,MAAO,CAAErS,EAAGsS,SAAS/I,KAAKoI,aAAa,OAAQ1R,EAAGqS,SAAS/I,KAAKoI,aAAa,SAE9EF,iBAAiB3H,UAAUyI,aAAe,WAAc,OAAOhJ,KAAKoI,aAAa,SACjFF,iBAAiB3H,UAAU0I,aAAe,SAAUJ,GAAO7I,KAAKmI,aAAa,OAAQU,IACrFX,iBAAiB3H,UAAU2I,UAAY,WACtC,OAAOzC,EAAO0C,mBAAmBnJ,KAAKoI,aAAa,iBAEpDF,iBAAiB3H,UAAU6I,UAAY,SAAUC,EAASC,GAAe,GACxE,GAAIA,EAAc,CACjB,MAAMC,EAAa9C,EAAO0C,mBAAmBnJ,KAAKoI,aAAa,gBAC/DpI,KAAKmI,aAAa,cAAe1B,EAAO+C,mBAAmBH,IACvDE,IAAexE,EAAWI,YAAcoE,IAAeF,GAC1DrJ,KAAKmI,aAAa,kBAAmB1B,EAAO+C,mBAAmBD,SAGhEvJ,KAAKmI,aAAa,cAAe1B,EAAO+C,mBAAmBH,KAG7DnB,iBAAiB3H,UAAUkJ,gBAAkB,WAC5C,MAAMF,EAAavJ,KAAKoI,aAAa,mBACrC,OAAImB,GACHvJ,KAAKqI,gBAAgB,mBACrBrI,KAAKmI,aAAa,cAAeoB,GAC1B9C,EAAO0C,mBAAmBI,KAE1B,GAETrB,iBAAiB3H,UAAUmJ,UAAY,WAAc,OAAO1J,KAAKoI,aAAa,YAC9EF,iBAAiB3H,UAAUoJ,UAAY,SAAU9B,GAAO7H,KAAKmI,aAAa,UAAWN,IACrFK,iBAAiB3H,UAAUqJ,KAAO,WAAc5J,KAAKmI,aAAa,aAAc,WAChFD,iBAAiB3H,UAAUsJ,KAAO,WAAc7J,KAAKmI,aAAa,aAAc,YAChFD,iBAAiB3H,UAAUuJ,aAAe,SAAUC,GAAM/J,KAAKmI,aAAa,eAAgB4B,IAC5F7B,iBAAiB3H,UAAUyJ,UAAY,WACtC,MAAM,EAAEvT,EAAC,EAAEC,GAAMsJ,KAAK8I,cAGtB,MAAO,CAAErS,EAAAA,EAAGC,EAAAA,EAAGuT,OAFAjK,KAAKkJ,YAEGgB,MADTlK,KAAKgJ,iBAIpBT,eAAehI,UAAUkI,KAAO,SAAU3R,EAAIC,EAAIC,EAAIC,GACrD+I,KAAKmI,aAAa,KAAMrR,GACxBkJ,KAAKmI,aAAa,KAAMpR,GACxBiJ,KAAKmI,aAAa,KAAMnR,GACxBgJ,KAAKmI,aAAa,KAAMlR,IAEzBsR,eAAehI,UAAU4J,SAAW,SAAU7K,EAAG4C,EAAG9O,GACnD4M,KAAKmI,aAAa,SAAU,OAAOhX,KAAKiZ,MAAM9K,MAAMnO,KAAKiZ,MAAMlI,MAAM/Q,KAAKiZ,MAAMhX,QAEjFmV,eAAehI,UAAU8J,SAAW,SAAUC,GAAStK,KAAKmI,aAAa,SAAUmC,IACnF/B,eAAehI,UAAUgK,YAAc,SAAUR,GAAM/J,KAAKmI,aAAa,eAAgB4B,EAAK,OAE9FvB,mBAAmBjI,UAAUiK,aAAe,SAAU/T,EAAGC,EAAG+T,EAAQ,EAAGC,EAAQ,GAC9E,MAAMC,EAAU3K,KAAKoI,aAAa,UAC5BwC,EAAMD,EAAQE,MAAM,KAE1B,IAAI,IAxNgBC,EAwNOF,EAvNtB,IAAKG,IAAID,GAAQE,OAASF,EAAMlZ,QAwNpC,OAAO,EAzNX,IAAuBkZ,EA2NpB,IAAIG,EACJ,GAAIL,EAAIhZ,QAAU,GAAuD,KAAjDqZ,EAAML,EAAIA,EAAIhZ,OAAS,GAAGiZ,MAAM,MAAMjZ,OAC7D,OAAO,EAER,MAAMsZ,EAASnC,SAASkC,EAAI,IAAKE,EAASpC,SAASkC,EAAI,IACjDG,EAASrC,SAAStS,GAAI4U,EAAStC,SAASrS,GAC9C,OAAMvF,KAAKkO,IAAI6L,EAASE,IAAWX,GAAStZ,KAAKkO,IAAI8L,EAASE,IAAWX,IAGzE1K,KAAKmI,aAAa,SAAUwC,EAAU,IAAIlU,KAAKC,MACxC,IAER8R,mBAAmBjI,UAAU+K,gBAAkB,WAC9C,MAAMC,EAASvL,KAAKoI,aAAa,UAAUoD,QAAQ,eAAgB,IAEnE,OADAxL,KAAKmI,aAAa,SAAUoD,GACrBA,GAER/C,mBAAmBjI,UAAUkL,cAAgB,SAAUhV,EAAGC,GACzD,MAAMgV,EAAW,IAAIC,OAAO,GAAGlV,KAAKC,IAAK,KAEzC,OADasJ,KAAKoI,aAAa,UAAUwD,MAAMF,IAAa,IAAI9Z,QAGjE4W,mBAAmBjI,UAAUsL,gBAAkB,WAC9C,OAAO7L,KAAKoI,aAAa,WAE1BI,mBAAmBjI,UAAUuL,eAAiB,WAE7C,OAAO9L,KAAKoI,aAAa,UAAUyC,MAAM,KAAKxE,KAAI,SAAU0F,GAC3D,MAAOtV,EAAGC,GAAKqV,EAAGlB,MAAM,KACxB,MAAO,CAAEpU,EAAGsS,SAAStS,GAAIC,EAAGqS,SAASrS,QAGvC8R,mBAAmBjI,UAAUyL,UAAY,SAAUC,GAClDjM,KAAKmI,aAAa,SAAU8D,IAE7BzD,mBAAmBjI,UAAU2L,YAAc,WAC1C,MAAMtB,EAAM5K,KAAKoI,aAAa,UAAUyC,MAAM,KAC9C,OAAOD,EAAI,KAAOA,EAAIA,EAAIhZ,OAAS,IAEpC4W,mBAAmBjI,UAAU4L,UAAY,WACxC,OAAOnM,KAAKoI,aAAa,UAAUyC,MAAM,KAAKjZ,QAE/C4W,mBAAmBjI,UAAU6L,iBAAmB,SAAUrC,EAAIlB,GAC7D7I,KAAKmI,aAAa,SAAUU,GAC5B7I,KAAKmI,aAAa,OAAQU,GAC1B7I,KAAKmI,aAAa,eAAgB4B,IAEnCvB,mBAAmBjI,UAAU8L,MAAQ,WAAc,OAAOtD,SAAS/I,KAAKoI,aAAa,aACrFI,mBAAmBjI,UAAU+L,MAAQ,SAAUC,GAAOvM,KAAKmI,aAAa,UAAWoE,IACnF/D,mBAAmBjI,UAAUyI,aAAe,WAAc,OAAOhJ,KAAKoI,aAAa,SACnFI,mBAAmBjI,UAAUyJ,UAAY,WAIxC,MAAO,CAAEwC,IAHExM,KAAKqM,QAGEnC,MAFJlK,KAAKgJ,eAEayD,eADpBzM,KAAK6L,oBAIlB7L,KAAK0M,aAAe,SAAUrF,EAAgBsF,EAAQC,GAAS,WAAEC,EAAU,YAAEC,GAAeC,GAc3F,OAbA/M,KAAK+G,KAAOH,EAA4BS,GACpCsF,GACH3M,KAAK+G,KAAKY,eAAe,KAAM,QAASgF,GACrCC,GACH5M,KAAK+G,KAAKY,eAAe,KAAM,SAAUiF,GACtCvF,SACgBhW,IAAfwb,QAA4Cxb,IAAhByb,GAC/B9M,KAAK+G,KAAKoB,aAAa,UAAW,OAAO0E,KAAcC,KAExD9M,KAAKgH,aAAehH,KAAK+G,KAAKiG,kBAE/BrG,EAAeoG,EAERjG,EAAe9G,KAAK+G,KAAO,MAEnC/G,KAAKiN,WAAa,SAAUpL,EAAGgH,EAAKqE,GACnC,MAAMzN,EAAIoH,EAAgC,QAQ1C,YAPqBxV,IAAjBsV,GACHlH,EAAE0I,aAAa,mBAAoC,IAAjBxB,EAAwB,OAAS,iBACpElH,EAAE0I,aAAa,eAAgBtG,EAAI,MAC/BgH,GAAKpJ,EAAE0I,aAAa,SAAUU,GAC9BqE,GAASzN,EAAE0I,aAAa,iBAAkB+E,GAE9ClN,KAAK+G,KAAKgB,YAAYtI,GACfA,GAERO,KAAKmN,eAAiB,SAAUC,EAAOpc,EAAQ6X,GAC9C,MAAMpJ,EAAIoH,EAAgC,YAa1C,YAZqBxV,IAAjBsV,GACHlH,EAAE0I,aAAa,mBAAoC,IAAjBxB,EAAwB,OAAS,iBACpElH,EAAE0I,aAAa,eAAgBiF,GAC3BvE,GAAKpJ,EAAE0I,aAAa,SAAUU,GAClCpJ,EAAE0I,aAAa,OAAQU,GACvBpJ,EAAE0I,aAAa,eAAgB,OAC3BnX,GAAQyO,EAAE0I,aAAa,SAAUnX,GACrCyO,EAAE0I,aAAa,iBAAkB,SACjC1I,EAAE0I,aAAa,kBAAmB,SAClC1I,EAAE0I,aAAa,UAAW,GAE1BnI,KAAK+G,KAAKgB,YAAYtI,GACfA,GAERO,KAAKqN,WAAa,SAAUC,GAC3B,MAAM7N,EAAIoH,EAAgC,UAU1C,YATqBxV,IAAjBsV,GACHlH,EAAE0I,aAAa,mBAAoC,IAAjBxB,EAAwB,OAAS,iBACpElH,EAAE0I,aAAa,eAAgB,GAC/B1I,EAAE0I,aAAa,IAAKmF,EAAO,GAE3B7N,EAAE0I,aAAa,cAAe1B,EAAO+C,mBAAmBzE,EAAWI,aAGnEnF,KAAK+G,KAAKgB,YAAYtI,GACfA,GAIT8N,WAAWC,GACVxN,KAAK+G,KAAKiB,YAAYwF,GAGvBC,eAAeC,GACd1N,KAAK+G,KAAKiB,YAAY0F,GAGvBC,gBAAgBC,EAAQlF,EAAS,GAChC,IAAI,EAAEjS,EAAC,EAAEC,EAAC,OAAEuT,EAAM,MAAEC,GAAU0D,EAC9BnX,EAAIsS,SAAStS,GACbC,EAAIqS,SAASrS,GACb,MAAM+I,EAAIO,KAAKqN,WAAW3E,GAK1B,OAJAjJ,EAAEgJ,KAAKhS,EAAGC,EAAGgS,GACbjJ,EAAEmJ,eAAesB,GACjBzK,EAAEwJ,aAAaiB,GACfzK,EAAE2J,UAAUa,GACLxK,EAGRoO,oBAAoBD,EAAQR,EAAQ,GACnC,MAAM,IAAEZ,EAAG,MAAEtC,EAAK,eAAEuC,GAAmBmB,EACjCnO,EAAIO,KAAKmN,eAAeC,EAAOX,EAAgBvC,GAErD,OADAzK,EAAE6M,MAAME,GACD/M,EAGRqO,0BAA0BC,GACzB,OAAQA,GACP,KAAKhJ,EAAWE,eACf,OAAOjC,OAAOgL,KAAKjJ,GAAY,GAChC,KAAKA,EAAWG,gBACf,OAAOlC,OAAOgL,KAAKjJ,GAAY,GAChC,KAAKA,EAAWI,WACf,OAAOnC,OAAOgL,KAAKjJ,GAAY,GAChC,KAAKA,EAAWK,eACf,OAAOpC,OAAOgL,KAAKjJ,GAAY,GAChC,KAAKA,EAAWM,cACf,OAAOrC,OAAOgL,KAAKjJ,GAAY,GAChC,KAAKA,EAAWO,mBACf,OAAOtC,OAAOgL,KAAKjJ,GAAY,GAChC,KAAKA,EAAWQ,oBACf,OAAOvC,OAAOgL,KAAKjJ,GAAY,GAEhC,QACC,MAAM,IAAIyC,MAAM,0BAInBsG,0BAA0BG,GACzB,OAAQA,EAAQC,eACf,KAAKlL,OAAOgL,KAAKjJ,GAAY,GAC5B,OAAOA,EAAWE,eACnB,KAAKjC,OAAOgL,KAAKjJ,GAAY,GAC5B,OAAOA,EAAWG,gBACnB,KAAKlC,OAAOgL,KAAKjJ,GAAY,GAC5B,OAAOA,EAAWI,WACnB,KAAKnC,OAAOgL,KAAKjJ,GAAY,GAC5B,OAAOA,EAAWK,eACnB,KAAKpC,OAAOgL,KAAKjJ,GAAY,GAC5B,OAAOA,EAAWM,cACnB,KAAKrC,OAAOgL,KAAKjJ,GAAY,GAC5B,OAAOA,EAAWO,mBACnB,KAAKtC,OAAOgL,KAAKjJ,GAAY,GAC5B,OAAOA,EAAWQ,oBAEnB,QACC,MAAM,IAAIiC,MAAM,2BAYnB2G,cAAcC,EAASC,GAEtBrO,KAAKgH,aAAavQ,EAAI2X,EAASpO,KAAKgH,aAAatQ,EAAI2X,EAGrD,OAFYrO,KAAKgH,aAAasH,gBAAgBtO,KAAK+G,KAAKwH,eAAeC,YC5ezE,MAAMC,EACLrL,YAAYyJ,EAAYC,EAAa4B,GACpC1O,KAAK2O,aAAe9B,EACpB7M,KAAK4O,cAAgB9B,EACrB9M,KAAK6O,SAAWH,EAChB1O,KAAKoF,eAAiBL,EAAWK,eACjCpF,KAAKqF,cAAgBN,EAAWM,cASjCyJ,kBAAiB,gBAChBC,EAAkBhK,EAAWG,gBAC7B8J,WAAYC,EAAe,QAExB,IACH,MAAMC,EAAe,GAAIC,EAAc,IAAIzH,IAErC0H,EAAmB,SAAUC,EAAoBtD,GACtD,MAAMuD,EAASvD,EAAG7C,YAElB,SAAImG,EAAmBE,SAASD,IAAWvD,EAAG/C,iBAAmBiG,IAK5DO,EAA2BV,eAAgBzW,EAAOoX,EAAMC,EAAMjZ,EAAGC,GACtE,GAAI+Y,GAAQ,GAAKA,EAAOzP,KAAK2O,cAAgBe,GAAQ,GAAKA,EAAO1P,KAAK4O,cAAe,CACpF,MAAM1a,QAAa8L,KAAK6O,SAASpK,IAAIiL,EAAO1P,KAAK2O,aAAec,GAChE,GAAIvb,IAAsD,IAA9Ckb,EAAiB,CAACL,GAAkB7a,KAEM,IAAjDib,EAAYQ,IAAI,GAAGlZ,KAAKC,KAAK+Y,KAAQC,OAAsE,IAAjDP,EAAYQ,IAAI,GAAGF,KAAQC,KAAQjZ,KAAKC,KAAgB,CAErH,MAAMkZ,EAAO,CACZxR,KAAM/F,EACNgG,GAAInK,GAUL,GAHAib,EAAYrH,IAAI,GAAGrR,KAAKC,KAAK+Y,KAAQC,IAAQE,IAGR,IAAjCV,EAAaK,SAASlX,GACzBA,EAAMwX,UAAY,CAAC3b,GACnBgb,EAAajd,KAAKoG,OACZ,CACN,MAAM0T,EAAKmD,EAAaY,MAAKrZ,GAAKA,IAAM4B,IACxC0T,EAAG8D,UAAU5d,KAAKiC,GAEnB,IAAoC,IAAhCgb,EAAaK,SAASrb,GACzBA,EAAK2b,UAAY,CAACxX,GAClB6W,EAAajd,KAAKiC,OACZ,CACN,MAAM6X,EAAKmD,EAAaY,MAAKrZ,GAAKA,IAAMvC,IACxC6X,EAAG8D,UAAU5d,KAAKoG,OAKrBiP,KAAKtH,MAEP,IAAK,MAAM3H,WAAe2H,KAAK6O,SAASkB,SACvC,GAAI1X,IAAiG,IAAxF+W,EAAiB,CAACL,EAAiB/O,KAAKoF,eAAgBpF,KAAKqF,eAAgBhN,GAAiB,CAC1G,MAAM,EAAE5B,EAAC,EAAEC,GAAM2B,EAAMyQ,oBAGjB0G,EAAyBnX,EAAO5B,EAAI,EAAGC,EAAGD,EAAGC,SAE7C8Y,EAAyBnX,EAAO5B,EAAI,EAAGC,EAAGD,EAAGC,SAE7C8Y,EAAyBnX,EAAO5B,EAAIC,EAAI,EAAID,EAAGC,SAE/C8Y,EAAyBnX,EAAO5B,EAAIC,EAAI,EAAID,EAAGC,SAE/C8Y,EAAyBnX,EAAO5B,EAAI,EAAIC,EAAI,EAAID,EAAGC,SAEnD8Y,EAAyBnX,EAAO5B,EAAI,EAAIC,EAAI,EAAID,EAAGC,SAEnD8Y,EAAyBnX,EAAO5B,EAAI,EAAIC,EAAI,EAAID,EAAGC,SAEnD8Y,EAAyBnX,EAAO5B,EAAI,EAAIC,EAAI,EAAID,EAAGC,GAI3D,MAAO,CAAEsZ,SAAUd,EAAc9Y,MAAO6C,MAAMmF,KAAK+Q,EAAYY,WAGhEjB,6BAA6BmB,EAAOxZ,EAAGC,GACtC,IAAK,MAAMwZ,KAAQD,EAAO,CAGzB,IAAI,IAAUpK,EAFCqK,EAAKpE,iBAEUrV,EAAGC,GAChC,OAAO,EAGT,OAAO,EAWRoY,oBAAoBqB,EAAOC,EAAYC,EAAaJ,GACnD,MAAMD,EAAWG,EAAMH,SACjBxS,EAAIwS,EAASpe,OACnB,IAAI0e,EAAS,IAAIrX,MAAMuE,GAEvB,MAAM+S,EAAO,IAAItX,MAAMuE,GAGjB8M,EAAQ,IAAIrR,MAAMuE,GAAIgT,EAAM,IAAIvX,MAAMuE,GAE5C,IAAK,IAAI7L,EAAI,EAAGA,EAAI6L,EAAG7L,IACtB4e,EAAK5e,GAAK,GAAI2e,EAAO3e,GAAK,GAG3B,MAAM8e,EAAY3B,eAAgBhP,EAAGjO,GAEpC,GAAiB,IAAbyY,EAAMxK,GACT,OAID,GAAiB,IAAbwK,EAAMxK,GAAU,CACnB4Q,IACA,IAAIC,EAAM9e,EAKV,IAJA0e,EAAKI,GAAK1e,KAAKye,GAIRC,IAAQ7Q,GACd6Q,EAAMH,EAAIG,GACVJ,EAAKI,GAAK1e,KAAKye,GAEhB,OAEDF,EAAI1Q,GAAKjO,EAGTyY,EAAMxK,GAAK,EACX,MAAM8Q,EAASZ,EAASlQ,GACxB,GAAI8Q,EAUH,IAAK,MAAMC,KAAOD,EAAOf,UAAW,CACnC,MAAM5T,EAAI+T,EAAS5Q,QAAQyR,GAEvB5U,IAAMuU,EAAI1Q,UAGR2Q,EAAUxU,EAAG6D,GAKrBwK,EAAMxK,GAAK,GAGNgR,EAAchC,eAAgB1Y,EAAOma,GAG1C,IAAK,IAAIzY,EAAI,EAAGA,EAAI1B,EAAO0B,IAAK,CAC/B,MAAMiZ,EAASR,EAAKzY,GACpB,QAAezG,IAAX0f,GAAwBA,EAAOnf,OAAS,EAC3C,IAAK,IAAIyO,EAAI,EAAGA,EAAI0Q,EAAOnf,OAAQyO,IAAK,CACvC,MAAM2Q,EAAUV,EAAOS,EAAO1Q,SACdhP,IAAZ2f,GACHA,EAAQ/e,KAAK6F,IAMjBwY,EAASA,EAAOW,QAAOvc,GAAKA,EAAE9C,QAAU,IAAGM,MAAK,CAACkB,EAAGN,IAAMA,EAAElB,OAASwB,EAAExB,SAGvE,MAAMsf,EAA2B,GACjC,IAAK,MAAMnF,WAAY/L,KAAK6O,SAASkB,SACpC,QAAW1e,IAAP0a,GAAoBA,EAAG/C,iBAAmBqH,GAAetL,EAAWE,iBAAmB8G,EAAG7C,YAAa,CAC1G,MAAM,EAAEzS,EAAC,EAAEC,GAAMqV,EAAGjD,cACpB,IAAI,UAAgB9I,KAAKmR,uBAAuBlB,EAAOxZ,EAAGC,GACzD,SAKDwa,EAAyBjf,KAAK,CAAEwE,EAAAA,EAAGC,EAAAA,IAOrC,IAAK,IAAI/E,EAAI,EAAGA,GAAK+e,EAAa/e,IAAK,CACtC,MAAMyf,EAAOd,EAAO3e,GACpB,GAAIyf,GAAQA,EAAKxf,OAAS,EAAG,CAM5B,MAIMyf,EAAkBpL,EAJHmL,EAAK/K,IAAI,SAAU3R,GACvC,OAAOsb,EAAStb,GAAGoU,eAClBxB,KAAKtH,QAGPsQ,EAAO3e,GAAK,CAAEyf,KAAAA,EAAMC,gBAAAA,IA6CP,MAAO,CAAEf,OAAAA,EAAQY,yBAAAA,EAA0BR,YAAAA,IACzDpJ,KAAKtH,MAGP,IAAI0Q,EAAc,EAAGta,EAAQoH,EAG7B,IAAK,IAAI8T,EAAO,EAAGA,EAAO9T,EAAG8T,UACtBb,EAAUa,EAAO,EAAGA,GAI3B,aAAaR,EAAY1a,EAAOma,IC5RlCgB,iBAAiB,WAAWzC,eAAgBhX,GAC3C,MAAM0Z,EAAS1Z,EAAEhD,KAEX2c,EAAS,IAAIhL,EAGnB,OAFAgL,EAAO/E,aAAa,KAAM,KAAM,KAAM8E,EAAOE,WAErCF,EAAOG,WACd,IAAK,cACJ,CAEC,MAAM1B,EAAQuB,EAAOI,MAAMvL,KAAIwL,GAAMJ,EAAO5D,oBAAoBgE,KAC1D7gB,EAAS,IAAI0W,IACnB8J,EAAOxgB,OAAO8gB,SAAS/F,IACtB/a,EAAO8W,IAAIiE,EAAGxH,IAAKkN,EAAO9D,gBAAgB5B,EAAG7I,WAG9C,EAAS,uBAAuB+M,EAAMre,gCAAgCZ,EAAOga,QAE7E,MAAM+G,EAAK,IAAItD,EAAQ+C,EAAOQ,MAAMnF,WAAY2E,EAAOQ,MAAMlF,YAAa9b,GACpEmf,QAAc4B,EAAGE,WAAW,CAAElD,gBAAiBhK,EAAWG,gBAAiB8J,WAAY,OAAQkD,SAAS,IAG9GC,YAAY,CAAER,UAAWH,EAAOG,UAAWH,OAAQrB,IAEpD,MAED,IAAK,aACJ,CACC,MAAMnf,EAAS,IAAI0W,IACnB8J,EAAOxgB,OAAO8gB,SAAS/F,IACtB/a,EAAO8W,IAAIiE,EAAGxH,IAAKkN,EAAO9D,gBAAgB5B,EAAG7I,WAE9C,MAAM6O,EAAK,IAAItD,EAAQ+C,EAAOQ,MAAMnF,WAAY2E,EAAOQ,MAAMlF,YAAa9b,GAIpEgf,SAHc+B,EAAGE,WAAW,CAAElD,gBAAiBhK,EAAWG,gBAAiB8J,WAAY,OAAQkD,SAAS,KAGvFlC,SAAS3J,KAAI,SAAU0F,GAC7C,MAAM,EAAEtV,EAAC,EAAEC,GAAMqV,EAAGjD,cACpB,MAAO,CAACrS,EAAGC,MAEN0b,EAAc,IAAWpC,EAAU,EAAK,GAGxCqB,EAAkBpL,EADHmM,EAAY/L,KAAI,EAAE5P,EAAGC,MAAO,CAAGD,EAAAA,EAAGC,EAAAA,OAGvDyb,YAAY,CAAER,UAAWH,EAAOG,UAAWS,YAAaA,EAAaf,gBAAiBA,IAEvF,MAED,IAAK,kBACJ,CACC,MAAMpB,EAAQuB,EAAOI,MAAMvL,KAAIwL,GAAMJ,EAAO5D,oBAAoBgE,KAC1D7gB,EAAS,IAAI0W,IACnB8J,EAAOxgB,OAAO8gB,SAAS/F,IACtB/a,EAAO8W,IAAIiE,EAAGxH,IAAKkN,EAAO9D,gBAAgB5B,EAAG7I,WAE9C,MAAM6O,EAAK,IAAItD,EAAQ+C,EAAOQ,MAAMnF,WAAY2E,EAAOQ,MAAMlF,YAAa9b,GACpEmf,QAAc4B,EAAGE,WAAW,CAAElD,gBAAiBhK,EAAWG,gBAAiB8J,WAAYwC,EAAOa,UAAWH,SAAS,IAClHlX,QAAe+W,EAAGO,cAAcnC,EAAOqB,EAAOa,UAAWb,EAAOe,SAAUtC,GAGhFkC,YAAY,CACXR,UAAWH,EAAOG,UAClBrB,OAAQtV,EAAOsV,OACfY,yBAA0BlW,EAAOkW,yBACjCR,YAAa1V,EAAO0V,cAGtB,MAED,QACCjL,EAAW,8BAA8B+L,EAAOG,iBAKnD,EAAS,iB","sources":["webpack:///./node_modules/concaveman/index.js","webpack:///./node_modules/point-in-polygon/flat.js","webpack:///./node_modules/point-in-polygon/index.js","webpack:///./node_modules/point-in-polygon/nested.js","webpack:///./node_modules/poly-decomp/src/index.js","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./node_modules/robust-predicates/umd/orient2d.min.js","webpack:///./node_modules/tinyqueue/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../InkBall/src/InkBall.Module/wwwroot/js/shared.js","webpack:///../InkBall/src/InkBall.Module/wwwroot/js/AISource.js","webpack:///../InkBall/src/InkBall.Module/wwwroot/js/AIWorker.js"],"sourcesContent":["'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nvar orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\n// Fix for require issue in webpack https://github.com/mapbox/concaveman/issues/18\nif (Queue.default) {\n    Queue = Queue.default;\n}\n\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = new RBush(16);\n    tree.toBBox = function (a) {\n        return {\n            minX: a[0],\n            minY: a[1],\n            maxX: a[0],\n            maxY: a[1]\n        };\n    };\n    tree.compareMinX = function (a, b) { return a[0] - b[0]; };\n    tree.compareMinY = function (a, b) { return a[1] - b[1]; };\n\n    tree.load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = new RBush(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new Queue([], compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\nfunction cross(p1, p2, p3) {\n    return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 &&\n        cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nfunction compareByX(a, b) {\n    return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\n\nfunction convexHull(points) {\n    points.sort(compareByX);\n\n    var lower = [];\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [];\n    for (var ii = points.length - 1; ii >= 0; ii--) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n            upper.pop();\n        }\n        upper.push(points[ii]);\n    }\n\n    upper.pop();\n    lower.pop();\n    return lower.concat(upper);\n}\n","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","module.exports = {\n    decomp: polygonDecomp,\n    quickDecomp: polygonQuickDecomp,\n    isSimple: polygonIsSimple,\n    removeCollinearPoints: polygonRemoveCollinearPoints,\n    removeDuplicatePoints: polygonRemoveDuplicatePoints,\n    makeCCW: polygonMakeCCW\n};\n\n/**\n * Compute the intersection between two lines.\n * @static\n * @method lineInt\n * @param  {Array}  l1          Line vector 1\n * @param  {Array}  l2          Line vector 2\n * @param  {Number} precision   Precision to use when checking if the lines are parallel\n * @return {Array}              The intersection point.\n */\nfunction lineInt(l1,l2,precision){\n    precision = precision || 0;\n    var i = [0,0]; // point\n    var a1, b1, c1, a2, b2, c2, det; // scalars\n    a1 = l1[1][1] - l1[0][1];\n    b1 = l1[0][0] - l1[1][0];\n    c1 = a1 * l1[0][0] + b1 * l1[0][1];\n    a2 = l2[1][1] - l2[0][1];\n    b2 = l2[0][0] - l2[1][0];\n    c2 = a2 * l2[0][0] + b2 * l2[0][1];\n    det = a1 * b2 - a2*b1;\n    if (!scalar_eq(det, 0, precision)) { // lines are not parallel\n        i[0] = (b2 * c1 - b1 * c2) / det;\n        i[1] = (a1 * c2 - a2 * c1) / det;\n    }\n    return i;\n}\n\n/**\n * Checks if two line segments intersects.\n * @method segmentsIntersect\n * @param {Array} p1 The start vertex of the first line segment.\n * @param {Array} p2 The end vertex of the first line segment.\n * @param {Array} q1 The start vertex of the second line segment.\n * @param {Array} q2 The end vertex of the second line segment.\n * @return {Boolean} True if the two line segments intersect\n */\nfunction lineSegmentsIntersect(p1, p2, q1, q2){\n\tvar dx = p2[0] - p1[0];\n\tvar dy = p2[1] - p1[1];\n\tvar da = q2[0] - q1[0];\n\tvar db = q2[1] - q1[1];\n\n\t// segments are parallel\n\tif((da*dy - db*dx) === 0){\n\t\treturn false;\n\t}\n\n\tvar s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);\n\tvar t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);\n\n\treturn (s>=0 && s<=1 && t>=0 && t<=1);\n}\n\n/**\n * Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.\n * @static\n * @method area\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @return {Number}\n */\nfunction triangleArea(a,b,c){\n    return (((b[0] - a[0])*(c[1] - a[1]))-((c[0] - a[0])*(b[1] - a[1])));\n}\n\nfunction isLeft(a,b,c){\n    return triangleArea(a,b,c) > 0;\n}\n\nfunction isLeftOn(a,b,c) {\n    return triangleArea(a, b, c) >= 0;\n}\n\nfunction isRight(a,b,c) {\n    return triangleArea(a, b, c) < 0;\n}\n\nfunction isRightOn(a,b,c) {\n    return triangleArea(a, b, c) <= 0;\n}\n\nvar tmpPoint1 = [],\n    tmpPoint2 = [];\n\n/**\n * Check if three points are collinear\n * @method collinear\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @param  {Number} [thresholdAngle=0] Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.\n * @return {Boolean}\n */\nfunction collinear(a,b,c,thresholdAngle) {\n    if(!thresholdAngle){\n        return triangleArea(a, b, c) === 0;\n    } else {\n        var ab = tmpPoint1,\n            bc = tmpPoint2;\n\n        ab[0] = b[0]-a[0];\n        ab[1] = b[1]-a[1];\n        bc[0] = c[0]-b[0];\n        bc[1] = c[1]-b[1];\n\n        var dot = ab[0]*bc[0] + ab[1]*bc[1],\n            magA = Math.sqrt(ab[0]*ab[0] + ab[1]*ab[1]),\n            magB = Math.sqrt(bc[0]*bc[0] + bc[1]*bc[1]),\n            angle = Math.acos(dot/(magA*magB));\n        return angle < thresholdAngle;\n    }\n}\n\nfunction sqdist(a,b){\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return dx * dx + dy * dy;\n}\n\n/**\n * Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.\n * @method at\n * @param  {Number} i\n * @return {Array}\n */\nfunction polygonAt(polygon, i){\n    var s = polygon.length;\n    return polygon[i < 0 ? i % s + s : i % s];\n}\n\n/**\n * Clear the polygon data\n * @method clear\n * @return {Array}\n */\nfunction polygonClear(polygon){\n    polygon.length = 0;\n}\n\n/**\n * Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.\n * @method append\n * @param {Polygon} poly The polygon to get points from.\n * @param {Number}  from The vertex index in \"poly\".\n * @param {Number}  to The end vertex index in \"poly\". Note that this vertex is NOT included when appending.\n * @return {Array}\n */\nfunction polygonAppend(polygon, poly, from, to){\n    for(var i=from; i<to; i++){\n        polygon.push(poly[i]);\n    }\n}\n\n/**\n * Make sure that the polygon vertices are ordered counter-clockwise.\n * @method makeCCW\n */\nfunction polygonMakeCCW(polygon){\n    var br = 0,\n        v = polygon;\n\n    // find bottom right point\n    for (var i = 1; i < polygon.length; ++i) {\n        if (v[i][1] < v[br][1] || (v[i][1] === v[br][1] && v[i][0] > v[br][0])) {\n            br = i;\n        }\n    }\n\n    // reverse poly if clockwise\n    if (!isLeft(polygonAt(polygon, br - 1), polygonAt(polygon, br), polygonAt(polygon, br + 1))) {\n        polygonReverse(polygon);\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Reverse the vertices in the polygon\n * @method reverse\n */\nfunction polygonReverse(polygon){\n    var tmp = [];\n    var N = polygon.length;\n    for(var i=0; i!==N; i++){\n        tmp.push(polygon.pop());\n    }\n    for(var i=0; i!==N; i++){\n\t\tpolygon[i] = tmp[i];\n    }\n}\n\n/**\n * Check if a point in the polygon is a reflex point\n * @method isReflex\n * @param  {Number}  i\n * @return {Boolean}\n */\nfunction polygonIsReflex(polygon, i){\n    return isRight(polygonAt(polygon, i - 1), polygonAt(polygon, i), polygonAt(polygon, i + 1));\n}\n\nvar tmpLine1=[],\n    tmpLine2=[];\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee(polygon, a,b) {\n    var p, dist, l1=tmpLine1, l2=tmpLine2;\n\n    if (isLeftOn(polygonAt(polygon, a + 1), polygonAt(polygon, a), polygonAt(polygon, b)) && isRightOn(polygonAt(polygon, a - 1), polygonAt(polygon, a), polygonAt(polygon, b))) {\n        return false;\n    }\n    dist = sqdist(polygonAt(polygon, a), polygonAt(polygon, b));\n    for (var i = 0; i !== polygon.length; ++i) { // for each edge\n        if ((i + 1) % polygon.length === a || i === a){ // ignore incident edges\n            continue;\n        }\n        if (isLeftOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i + 1)) && isRightOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i))) { // if diag intersects an edge\n            l1[0] = polygonAt(polygon, a);\n            l1[1] = polygonAt(polygon, b);\n            l2[0] = polygonAt(polygon, i);\n            l2[1] = polygonAt(polygon, i + 1);\n            p = lineInt(l1,l2);\n            if (sqdist(polygonAt(polygon, a), p) < dist) { // if edge is blocking visibility to b\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee2\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee2(polygon, a,b) {\n    // for each edge\n    for (var i = 0; i !== polygon.length; ++i) {\n        // ignore incident edges\n        if (i === a || i === b || (i + 1) % polygon.length === a || (i + 1) % polygon.length === b){\n            continue;\n        }\n        if( lineSegmentsIntersect(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i), polygonAt(polygon, i+1)) ){\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Copy the polygon from vertex i to vertex j.\n * @method copy\n * @param  {Number} i\n * @param  {Number} j\n * @param  {Polygon} [targetPoly]   Optional target polygon to save in.\n * @return {Polygon}                The resulting copy.\n */\nfunction polygonCopy(polygon, i,j,targetPoly){\n    var p = targetPoly || [];\n    polygonClear(p);\n    if (i < j) {\n        // Insert all vertices from i to j\n        for(var k=i; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n    } else {\n\n        // Insert vertices 0 to j\n        for(var k=0; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n        // Insert vertices i to end\n        for(var k=i; k<polygon.length; k++){\n            p.push(polygon[k]);\n        }\n    }\n\n    return p;\n}\n\n/**\n * Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\n * Note that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.\n * @method getCutEdges\n * @return {Array}\n */\nfunction polygonGetCutEdges(polygon) {\n    var min=[], tmp1=[], tmp2=[], tmpPoly = [];\n    var nDiags = Number.MAX_VALUE;\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(polygon, i)) {\n            for (var j = 0; j < polygon.length; ++j) {\n                if (polygonCanSee(polygon, i, j)) {\n                    tmp1 = polygonGetCutEdges(polygonCopy(polygon, i, j, tmpPoly));\n                    tmp2 = polygonGetCutEdges(polygonCopy(polygon, j, i, tmpPoly));\n\n                    for(var k=0; k<tmp2.length; k++){\n                        tmp1.push(tmp2[k]);\n                    }\n\n                    if (tmp1.length < nDiags) {\n                        min = tmp1;\n                        nDiags = tmp1.length;\n                        min.push([polygonAt(polygon, i), polygonAt(polygon, j)]);\n                    }\n                }\n            }\n        }\n    }\n\n    return min;\n}\n\n/**\n * Decomposes the polygon into one or more convex sub-Polygons.\n * @method decomp\n * @return {Array} An array or Polygon objects.\n */\nfunction polygonDecomp(polygon){\n    var edges = polygonGetCutEdges(polygon);\n    if(edges.length > 0){\n        return polygonSlice(polygon, edges);\n    } else {\n        return [polygon];\n    }\n}\n\n/**\n * Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.\n * @method slice\n * @param {Array} cutEdges A list of edges, as returned by .getCutEdges()\n * @return {Array}\n */\nfunction polygonSlice(polygon, cutEdges){\n    if(cutEdges.length === 0){\n\t\treturn [polygon];\n    }\n    if(cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length===2 && cutEdges[0][0] instanceof Array){\n\n        var polys = [polygon];\n\n        for(var i=0; i<cutEdges.length; i++){\n            var cutEdge = cutEdges[i];\n            // Cut all polys\n            for(var j=0; j<polys.length; j++){\n                var poly = polys[j];\n                var result = polygonSlice(poly, cutEdge);\n                if(result){\n                    // Found poly! Cut and quit\n                    polys.splice(j,1);\n                    polys.push(result[0],result[1]);\n                    break;\n                }\n            }\n        }\n\n        return polys;\n    } else {\n\n        // Was given one edge\n        var cutEdge = cutEdges;\n        var i = polygon.indexOf(cutEdge[0]);\n        var j = polygon.indexOf(cutEdge[1]);\n\n        if(i !== -1 && j !== -1){\n            return [polygonCopy(polygon, i,j),\n                    polygonCopy(polygon, j,i)];\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Checks that the line segments of this polygon do not intersect each other.\n * @method isSimple\n * @param  {Array} path An array of vertices e.g. [[0,0],[0,1],...]\n * @return {Boolean}\n * @todo Should it check all segments with all others?\n */\nfunction polygonIsSimple(polygon){\n    var path = polygon, i;\n    // Check\n    for(i=0; i<path.length-1; i++){\n        for(var j=0; j<i-1; j++){\n            if(lineSegmentsIntersect(path[i], path[i+1], path[j], path[j+1] )){\n                return false;\n            }\n        }\n    }\n\n    // Check the segment between the last and the first point to all others\n    for(i=1; i<path.length-2; i++){\n        if(lineSegmentsIntersect(path[0], path[path.length-1], path[i], path[i+1] )){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getIntersectionPoint(p1, p2, q1, q2, delta){\n\tdelta = delta || 0;\n\tvar a1 = p2[1] - p1[1];\n\tvar b1 = p1[0] - p2[0];\n\tvar c1 = (a1 * p1[0]) + (b1 * p1[1]);\n\tvar a2 = q2[1] - q1[1];\n\tvar b2 = q1[0] - q2[0];\n\tvar c2 = (a2 * q1[0]) + (b2 * q1[1]);\n\tvar det = (a1 * b2) - (a2 * b1);\n\n\tif(!scalar_eq(det,0,delta)){\n\t\treturn [((b2 * c1) - (b1 * c2)) / det, ((a1 * c2) - (a2 * c1)) / det];\n\t} else {\n\t\treturn [0,0];\n    }\n}\n\n/**\n * Quickly decompose the Polygon into convex sub-polygons.\n * @method quickDecomp\n * @param  {Array} result\n * @param  {Array} [reflexVertices]\n * @param  {Array} [steinerPoints]\n * @param  {Number} [delta]\n * @param  {Number} [maxlevel]\n * @param  {Number} [level]\n * @return {Array}\n */\nfunction polygonQuickDecomp(polygon, result,reflexVertices,steinerPoints,delta,maxlevel,level){\n    maxlevel = maxlevel || 100;\n    level = level || 0;\n    delta = delta || 25;\n    result = typeof(result)!==\"undefined\" ? result : [];\n    reflexVertices = reflexVertices || [];\n    steinerPoints = steinerPoints || [];\n\n    var upperInt=[0,0], lowerInt=[0,0], p=[0,0]; // Points\n    var upperDist=0, lowerDist=0, d=0, closestDist=0; // scalars\n    var upperIndex=0, lowerIndex=0, closestIndex=0; // Integers\n    var lowerPoly=[], upperPoly=[]; // polygons\n    var poly = polygon,\n        v = polygon;\n\n    if(v.length < 3){\n\t\treturn result;\n    }\n\n    level++;\n    if(level > maxlevel){\n        console.warn(\"quickDecomp: max level (\"+maxlevel+\") reached.\");\n        return result;\n    }\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(poly, i)) {\n            reflexVertices.push(poly[i]);\n            upperDist = lowerDist = Number.MAX_VALUE;\n\n\n            for (var j = 0; j < polygon.length; ++j) {\n                if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j - 1))) { // if line intersects with an edge\n                    p = getIntersectionPoint(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j - 1)); // find the point of intersection\n                    if (isRight(polygonAt(poly, i + 1), polygonAt(poly, i), p)) { // make sure it's inside the poly\n                        d = sqdist(poly[i], p);\n                        if (d < lowerDist) { // keep only the closest intersection\n                            lowerDist = d;\n                            lowerInt = p;\n                            lowerIndex = j;\n                        }\n                    }\n                }\n                if (isLeft(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j + 1)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                    p = getIntersectionPoint(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j + 1));\n                    if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), p)) {\n                        d = sqdist(poly[i], p);\n                        if (d < upperDist) {\n                            upperDist = d;\n                            upperInt = p;\n                            upperIndex = j;\n                        }\n                    }\n                }\n            }\n\n            // if there are no vertices to connect to, choose a point in the middle\n            if (lowerIndex === (upperIndex + 1) % polygon.length) {\n                //console.log(\"Case 1: Vertex(\"+i+\"), lowerIndex(\"+lowerIndex+\"), upperIndex(\"+upperIndex+\"), poly.size(\"+polygon.length+\")\");\n                p[0] = (lowerInt[0] + upperInt[0]) / 2;\n                p[1] = (lowerInt[1] + upperInt[1]) / 2;\n                steinerPoints.push(p);\n\n                if (i < upperIndex) {\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly, i, upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    if (lowerIndex !== 0){\n                        //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.end());\n                        polygonAppend(upperPoly, poly,lowerIndex,poly.length);\n                    }\n                    //upperPoly.insert(upperPoly.end(), poly.begin(), poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.end());\n                        polygonAppend(lowerPoly, poly,i,poly.length);\n                    }\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin(), poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly,0,upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,lowerIndex,i+1);\n                }\n            } else {\n                // connect to the closest point within the triangle\n                //console.log(\"Case 2: Vertex(\"+i+\"), closestIndex(\"+closestIndex+\"), poly.size(\"+polygon.length+\")\\n\");\n\n                if (lowerIndex > upperIndex) {\n                    upperIndex += polygon.length;\n                }\n                closestDist = Number.MAX_VALUE;\n\n                if(upperIndex < lowerIndex){\n                    return result;\n                }\n\n                for (var j = lowerIndex; j <= upperIndex; ++j) {\n                    if (\n                        isLeftOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) &&\n                        isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))\n                    ) {\n                        d = sqdist(polygonAt(poly, i), polygonAt(poly, j));\n                        if (d < closestDist && polygonCanSee2(poly, i, j)) {\n                            closestDist = d;\n                            closestIndex = j % polygon.length;\n                        }\n                    }\n                }\n\n                if (i < closestIndex) {\n                    polygonAppend(lowerPoly, poly,i,closestIndex+1);\n                    if (closestIndex !== 0){\n                        polygonAppend(upperPoly, poly,closestIndex,v.length);\n                    }\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        polygonAppend(lowerPoly, poly,i,v.length);\n                    }\n                    polygonAppend(lowerPoly, poly,0,closestIndex+1);\n                    polygonAppend(upperPoly, poly,closestIndex,i+1);\n                }\n            }\n\n            // solve smallest poly first\n            if (lowerPoly.length < upperPoly.length) {\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            } else {\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            }\n\n            return result;\n        }\n    }\n    result.push(polygon);\n\n    return result;\n}\n\n/**\n * Remove collinear points in the polygon.\n * @method removeCollinearPoints\n * @param  {Number} [precision] The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.\n * @return {Number}           The number of points removed\n */\nfunction polygonRemoveCollinearPoints(polygon, precision){\n    var num = 0;\n    for(var i=polygon.length-1; polygon.length>3 && i>=0; --i){\n        if(collinear(polygonAt(polygon, i-1),polygonAt(polygon, i),polygonAt(polygon, i+1),precision)){\n            // Remove the middle point\n            polygon.splice(i%polygon.length,1);\n            num++;\n        }\n    }\n    return num;\n}\n\n/**\n * Remove duplicate points in the polygon.\n * @method removeDuplicatePoints\n * @param  {Number} [precision] The threshold to use when determining whether two points are the same. Use zero for best precision.\n */\nfunction polygonRemoveDuplicatePoints(polygon, precision){\n    for(var i=polygon.length-1; i>=1; --i){\n        var pi = polygon[i];\n        for(var j=i-1; j>=0; --j){\n            if(points_eq(pi, polygon[j], precision)){\n                polygon.splice(i,1);\n                continue;\n            }\n        }\n    }\n}\n\n/**\n * Check if two scalars are equal\n * @static\n * @method eq\n * @param  {Number} a\n * @param  {Number} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction scalar_eq(a,b,precision){\n    precision = precision || 0;\n    return Math.abs(a-b) <= precision;\n}\n\n/**\n * Check if two points are equal\n * @static\n * @method points_eq\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction points_eq(a,b,precision){\n    return scalar_eq(a[0],b[0],precision) && scalar_eq(a[1],b[1],precision);\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).predicates={})}(this,function(t){\"use strict\";const e=134217729,n=33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const f=33306690738754716e-32,i=22204460492503146e-32,u=11093356479670487e-47,c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=f*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}(4,c),K=i*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=u*h+n*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,\"__esModule\",{value:!0})});\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"$\" }]*/\n\"use strict\";\n\n/**\n * Point status enum\n * */\nconst StatusEnum = Object.freeze({\n\tPOINT_FREE_RED: -3,\n\tPOINT_FREE_BLUE: -2,\n\tPOINT_FREE: -1,\n\tPOINT_STARTING: 0,\n\tPOINT_IN_PATH: 1,\n\tPOINT_OWNED_BY_RED: 2,\n\tPOINT_OWNED_BY_BLUE: 3\n});\n\n/**\n * Shared log function\n * @param {any} msg - object to log\n */\nfunction LocalLog(msg) {\n\t// eslint-disable-next-line no-console\n\tconsole.log(msg);\n}\n\n/**\n * Shared error log functoin\n * @param {...any} args - objects to log\n */\nfunction LocalError(...args) {\n\tlet msg = '';\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst str = args[i];\n\t\tif (str)\n\t\t\tmsg += str;\n\t}\n\t// eslint-disable-next-line no-console\n\tconsole.error(msg);\n}\n\n/**\n * Based on http://www.faqs.org/faqs/graphics/algorithms-faq/\n * but mainly on http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n * returns != 0 if point is inside path\n * @param {number} npol points count\n * @param {number} xp x point coordinates\n * @param {number} yp y point coordinates\n * @param {number} x point to check x coordinate\n * @param {number} y point to check y coordinate\n * @returns {boolean} if point lies inside the polygon\n */\nfunction pnpoly(npol, xp, yp, x, y) {\n\tlet i, j, c = false;\n\tfor (i = 0, j = npol - 1; i < npol; j = i++) {\n\t\tif ((((yp[i] <= y) && (y < yp[j])) ||\n\t\t\t((yp[j] <= y) && (y < yp[i]))) &&\n\t\t\t(x < (xp[j] - xp[i]) * (y - yp[i]) / (yp[j] - yp[i]) + xp[i]))\n\n\t\t\tc = !c;\n\t}\n\treturn c;\n}\n\nfunction pnpoly2(pathPoints, x, y) {\n\tconst npol = pathPoints.length;\n\tlet i, j, c = false;\n\n\tfor (i = 0, j = npol - 1; i < npol; j = i++) {\n\t\tconst pi = pathPoints[i], pj = pathPoints[j];\n\n\t\tif ((((pi.y <= y) && (y < pj.y)) ||\n\t\t\t((pj.y <= y) && (y < pi.y))) &&\n\t\t\t(x < (pj.x - pi.x) * (y - pi.y) / (pj.y - pi.y) + pi.x))\n\n\t\t\tc = !c;\n\t}\n\treturn c;\n}\n\n/**\n * Test for array uniquness using default object comparator\n * @param {array} array of objects that are tested againstn uniqenes\n * @returns {boolean} true - has duplicates\n */\nfunction hasDuplicates(array) {\n\treturn (new Set(array)).size !== array.length;\n}\n\nasync function Sleep(ms) {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Sorting point clockwise/anticlockwise\n * @param {array} points array of points to sort\n * @returns {array} of points\n */\nfunction sortPointsClockwise(points) {\n\t// Get the center (mean value) using reduce\n\tconst center = points.reduce((acc, { x, y }) => {\n\t\tacc.x += x;\n\t\tacc.y += y;\n\t\treturn acc;\n\t}, { x: 0, y: 0 });\n\tcenter.x /= points.length;\n\tcenter.y /= points.length;\n\n\t// Add an angle property to each point using tan(angle) = y/x\n\tconst added_angles = points.map(p => {\n\t\tp.angle = Math.atan2(p.y - center.y, p.x - center.x) * 180 / Math.PI;\n\t\treturn p;\n\t});\n\n\t// Sort your points by angle\n\tconst pointsSorted = added_angles.sort((a, b) => a.angle - b.angle);\n\treturn pointsSorted;\n}\n\n//////////////////////////////////////////////////////\n// SVG-VML mini graphic library \n// ==========================================\n// written by Gerard Ferrandez\n// initial version - June 28, 2006\n// modified - 2020 - Andrzej Pauli dropping vml - obsoleet and no support so why bother\n// modified - 2018-2020 - Andrzej Pauli polyline and oval functions & extensions\n// modified - July 21 - use object functions\n// modified - July 24 - debug\n// www.dhteumeuleu.com\n//////////////////////////////////////////////////////\nclass SvgVml {\n\tconstructor() {\n\t\tconst svgNS = \"http://www.w3.org/2000/svg\";\n\t\tlet svgAvailable = false, svgAntialias = undefined;\n\t\tlet documentCreateElementNS_SVG, documentCreateElementNS_Element;\n\t\tthis.cont = null;\n\t\t// Create an SVGPoint for future math\n\t\tthis.mathSVGPoint = null;\n\n\t\tif (self && self.document && self.document.createElementNS) {\n\t\t\tconst some_cont = document.createElementNS(svgNS, \"svg\");\n\t\t\tsvgAvailable = (some_cont.x !== null);\n\t\t}\n\n\t\tif (svgAvailable) {\n\t\t\t/* ============= displayable SVG ============== */\n\t\t\tdocumentCreateElementNS_SVG = function (contextElement) {\n\t\t\t\treturn contextElement;\n\t\t\t}.bind(this);\n\t\t\tdocumentCreateElementNS_Element = function (elemeName) {\n\t\t\t\tswitch (elemeName) {\n\t\t\t\t\tcase \"circle\":\n\t\t\t\t\tcase \"line\":\n\t\t\t\t\tcase \"polyline\":\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst o = document.createElementNS(svgNS, elemeName);\n\t\t\t\t\t\t\treturn o;\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`unknwn type ${elemeName}`);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\t/* ============= emulated SVG ============== */\n\t\t\tdocumentCreateElementNS_SVG = function () {\n\t\t\t\treturn {\n\t\t\t\t\tattributes: new Map(),\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tsetAttributeNS: function (_nullish, key, val) {\n\t\t\t\t\t\tthis.attributes.set(key, val);\n\t\t\t\t\t},\n\t\t\t\t\tappendChild: function (val) {\n\t\t\t\t\t\tthis.children.push(val);\n\t\t\t\t\t},\n\t\t\t\t\tremoveChild: function (val) {\n\t\t\t\t\t\tconst index = this.children.indexOf(val);\n\t\t\t\t\t\tif (index !== -1)\n\t\t\t\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t/////////////// Pollyfills start ///////////////\n\t\t\tself.SVGCircleElement = function () {\n\t\t\t\tthis.attributes = new Map();\n\t\t\t};\n\t\t\tSVGCircleElement.prototype.setAttribute = function (key, val) {\n\t\t\t\tthis.attributes.set(key, val);\n\t\t\t};\n\t\t\tSVGCircleElement.prototype.getAttribute = function (key) {\n\t\t\t\treturn this.attributes.get(key);\n\t\t\t};\n\t\t\tSVGCircleElement.prototype.removeAttribute = function (key) {\n\t\t\t\tthis.attributes.delete(key);\n\t\t\t};\n\n\t\t\tself.SVGLineElement = function () {\n\t\t\t\tthis.attributes = new Map();\n\t\t\t};\n\t\t\tSVGLineElement.prototype.setAttribute = function (key, val) {\n\t\t\t\tthis.attributes.set(key, val);\n\t\t\t};\n\t\t\tSVGLineElement.prototype.getAttribute = function (key) {\n\t\t\t\treturn this.attributes.get(key);\n\t\t\t};\n\t\t\tSVGLineElement.prototype.removeAttribute = function (key) {\n\t\t\t\tthis.attributes.delete(key);\n\t\t\t};\n\n\t\t\tself.SVGPolylineElement = function () {\n\t\t\t\tthis.attributes = new Map();\n\t\t\t};\n\t\t\tSVGPolylineElement.prototype.setAttribute = function (key, val) {\n\t\t\t\tthis.attributes.set(key, val);\n\t\t\t};\n\t\t\tSVGPolylineElement.prototype.getAttribute = function (key) {\n\t\t\t\treturn this.attributes.get(key);\n\t\t\t};\n\t\t\tSVGPolylineElement.prototype.removeAttribute = function (key) {\n\t\t\t\tthis.attributes.delete(key);\n\t\t\t};\n\t\t\t/////////////// Pollyfills end ///////////////\n\n\t\t\tdocumentCreateElementNS_Element = function (elemeName) {\n\t\t\t\tswitch (elemeName) {\n\t\t\t\t\tcase \"circle\":\n\t\t\t\t\t\treturn new SVGCircleElement();\n\t\t\t\t\tcase \"line\":\n\t\t\t\t\t\treturn new SVGLineElement();\n\t\t\t\t\tcase \"polyline\":\n\t\t\t\t\t\treturn new SVGPolylineElement();\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`unknwn type ${elemeName}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tSVGCircleElement.prototype.move = function (x, y, radius) {\n\t\t\tthis.setAttribute(\"cx\", x);\n\t\t\tthis.setAttribute(\"cy\", y);\n\t\t\tthis.setAttribute(\"r\", radius);\n\t\t};\n\t\tSVGCircleElement.prototype.GetStrokeColor = function () { return this.getAttribute(\"stroke\"); };\n\t\tSVGCircleElement.prototype.SetStrokeColor = function (col) { this.setAttribute(\"stroke\", col); };\n\t\tSVGCircleElement.prototype.GetPosition = function () {\n\t\t\treturn { x: parseInt(this.getAttribute(\"cx\")), y: parseInt(this.getAttribute(\"cy\")) };\n\t\t};\n\t\tSVGCircleElement.prototype.GetFillColor = function () { return this.getAttribute(\"fill\"); };\n\t\tSVGCircleElement.prototype.SetFillColor = function (col) { this.setAttribute(\"fill\", col); };\n\t\tSVGCircleElement.prototype.GetStatus = function () {\n\t\t\treturn SvgVml.StringToStatusEnum(this.getAttribute(\"data-status\"));\n\t\t};\n\t\tSVGCircleElement.prototype.SetStatus = function (iStatus, saveOldPoint = false) {\n\t\t\tif (saveOldPoint) {\n\t\t\t\tconst old_status = SvgVml.StringToStatusEnum(this.getAttribute(\"data-status\"));\n\t\t\t\tthis.setAttribute(\"data-status\", SvgVml.StatusEnumToString(iStatus));\n\t\t\t\tif (old_status !== StatusEnum.POINT_FREE && old_status !== iStatus)\n\t\t\t\t\tthis.setAttribute(\"data-old-status\", SvgVml.StatusEnumToString(old_status));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setAttribute(\"data-status\", SvgVml.StatusEnumToString(iStatus));\n\t\t\t}\n\t\t};\n\t\tSVGCircleElement.prototype.RevertOldStatus = function () {\n\t\t\tconst old_status = this.getAttribute(\"data-old-status\");\n\t\t\tif (old_status) {\n\t\t\t\tthis.removeAttribute(\"data-old-status\");\n\t\t\t\tthis.setAttribute(\"data-status\", old_status);\n\t\t\t\treturn SvgVml.StringToStatusEnum(old_status);\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\t\tSVGCircleElement.prototype.GetZIndex = function () { return this.getAttribute(\"z-index\"); };\n\t\tSVGCircleElement.prototype.SetZIndex = function (val) { this.setAttribute(\"z-index\", val); };\n\t\tSVGCircleElement.prototype.Hide = function () { this.setAttribute(\"visibility\", 'hidden'); };\n\t\tSVGCircleElement.prototype.Show = function () { this.setAttribute(\"visibility\", 'visible'); };\n\t\tSVGCircleElement.prototype.strokeWeight = function (sw) { this.setAttribute(\"stroke-width\", sw); };\n\t\tSVGCircleElement.prototype.Serialize = function () {\n\t\t\tconst { x, y } = this.GetPosition();\n\t\t\tconst Status = this.GetStatus();\n\t\t\tconst Color = this.GetFillColor();\n\t\t\treturn { x, y, Status, Color };\n\t\t};\n\n\t\tSVGLineElement.prototype.move = function (x1, y1, x2, y2) {\n\t\t\tthis.setAttribute(\"x1\", x1);\n\t\t\tthis.setAttribute(\"y1\", y1);\n\t\t\tthis.setAttribute(\"x2\", x2);\n\t\t\tthis.setAttribute(\"y2\", y2);\n\t\t};\n\t\tSVGLineElement.prototype.RGBcolor = function (r, g, b) {\n\t\t\tthis.setAttribute(\"stroke\", `rgb(${Math.round(r)},${Math.round(g)},${Math.round(b)})`);\n\t\t};\n\t\tSVGLineElement.prototype.SetColor = function (color) { this.setAttribute(\"stroke\", color); };\n\t\tSVGLineElement.prototype.strokeWidth = function (sw) { this.setAttribute(\"stroke-width\", sw + \"px\"); };\n\n\t\tSVGPolylineElement.prototype.AppendPoints = function (x, y, diffX = 1, diffY = 1) {\n\t\t\tconst pts_str = this.getAttribute(\"points\");\n\t\t\tconst pts = pts_str.split(\" \");\n\n\t\t\tif (true === hasDuplicates(pts))\n\t\t\t\treturn false;\n\n\t\t\tlet arr;//obtain last point coords\n\t\t\tif (pts.length <= 1 || (arr = pts[pts.length - 1].split(\",\")).length !== 2)\n\t\t\t\treturn false;\n\n\t\t\tconst last_x = parseInt(arr[0]), last_y = parseInt(arr[1]);\n\t\t\tconst x_diff = parseInt(x), y_diff = parseInt(y);\n\t\t\tif (!(Math.abs(last_x - x_diff) <= diffX && Math.abs(last_y - y_diff) <= diffY))\n\t\t\t\treturn false;\n\n\t\t\tthis.setAttribute(\"points\", pts_str + ` ${x},${y}`);\n\t\t\treturn true;\n\t\t};\n\t\tSVGPolylineElement.prototype.RemoveLastPoint = function () {\n\t\t\tconst newpts = this.getAttribute(\"points\").replace(/(\\s\\d+,\\d+)$/, \"\");\n\t\t\tthis.setAttribute(\"points\", newpts);\n\t\t\treturn newpts;\n\t\t};\n\t\tSVGPolylineElement.prototype.ContainsPoint = function (x, y) {\n\t\t\tconst regexstr = new RegExp(`${x},${y}`, 'g');\n\t\t\tconst cnt = (this.getAttribute(\"points\").match(regexstr) || []).length;\n\t\t\treturn cnt;\n\t\t};\n\t\tSVGPolylineElement.prototype.GetPointsString = function () {\n\t\t\treturn this.getAttribute(\"points\");\n\t\t};\n\t\tSVGPolylineElement.prototype.GetPointsArray = function () {\n\t\t\t//x0,y0 x1,y1 x2,y2\n\t\t\treturn this.getAttribute(\"points\").split(\" \").map(function (pt) {\n\t\t\t\tconst [x, y] = pt.split(',');\n\t\t\t\treturn { x: parseInt(x), y: parseInt(y) };\n\t\t\t});\n\t\t};\n\t\tSVGPolylineElement.prototype.SetPoints = function (sPoints) {\n\t\t\tthis.setAttribute(\"points\", sPoints);\n\t\t};\n\t\tSVGPolylineElement.prototype.GetIsClosed = function () {\n\t\t\tconst pts = this.getAttribute(\"points\").split(\" \");\n\t\t\treturn pts[0] === pts[pts.length - 1];\n\t\t};\n\t\tSVGPolylineElement.prototype.GetLength = function () {\n\t\t\treturn this.getAttribute(\"points\").split(\" \").length;\n\t\t};\n\t\tSVGPolylineElement.prototype.SetWidthAndColor = function (sw, col) {\n\t\t\tthis.setAttribute(\"stroke\", col);\n\t\t\tthis.setAttribute(\"fill\", col);\n\t\t\tthis.setAttribute(\"stroke-width\", sw);\n\t\t};\n\t\tSVGPolylineElement.prototype.GetID = function () { return parseInt(this.getAttribute(\"data-id\")); };\n\t\tSVGPolylineElement.prototype.SetID = function (iID) { this.setAttribute(\"data-id\", iID); };\n\t\tSVGPolylineElement.prototype.GetFillColor = function () { return this.getAttribute(\"fill\"); };\n\t\tSVGPolylineElement.prototype.Serialize = function () {\n\t\t\tconst id = this.GetID();\n\t\t\tconst color = this.GetFillColor();\n\t\t\tconst pts = this.GetPointsString();\n\t\t\treturn { iId: id, Color: color, PointsAsString: pts };\n\t\t};\n\n\t\tthis.CreateSVGVML = function (contextElement, iWidth, iHeight, { iGridWidth, iGridHeight }, antialias) {\n\t\t\tthis.cont = documentCreateElementNS_SVG(contextElement);\n\t\t\tif (iWidth)\n\t\t\t\tthis.cont.setAttributeNS(null, 'width', iWidth);\n\t\t\tif (iHeight)\n\t\t\t\tthis.cont.setAttributeNS(null, 'height', iHeight);\n\t\t\tif (contextElement) {\n\t\t\t\tif (iGridWidth !== undefined && iGridHeight !== undefined)\n\t\t\t\t\tthis.cont.setAttribute(\"viewBox\", `0 0 ${iGridWidth} ${iGridHeight}`);\n\n\t\t\t\tthis.mathSVGPoint = this.cont.createSVGPoint();\n\t\t\t}\n\t\t\tsvgAntialias = antialias;\n\n\t\t\treturn svgAvailable ? this.cont : null;\n\t\t};\n\t\tthis.CreateLine = function (w, col, linecap) {\n\t\t\tconst o = documentCreateElementNS_Element(\"line\");\n\t\t\tif (svgAntialias !== undefined)\n\t\t\t\to.setAttribute(\"shape-rendering\", svgAntialias === true ? \"auto\" : \"optimizeSpeed\");\n\t\t\to.setAttribute(\"stroke-width\", w + \"px\");\n\t\t\tif (col) o.setAttribute(\"stroke\", col);\n\t\t\tif (linecap) o.setAttribute(\"stroke-linecap\", linecap);\n\n\t\t\tthis.cont.appendChild(o);\n\t\t\treturn o;\n\t\t};\n\t\tthis.CreatePolyline = function (width, points, col) {\n\t\t\tconst o = documentCreateElementNS_Element(\"polyline\");\n\t\t\tif (svgAntialias !== undefined)\n\t\t\t\to.setAttribute(\"shape-rendering\", svgAntialias === true ? \"auto\" : \"optimizeSpeed\");\n\t\t\to.setAttribute(\"stroke-width\", width);\n\t\t\tif (col) o.setAttribute(\"stroke\", col);\n\t\t\to.setAttribute(\"fill\", col);\n\t\t\to.setAttribute(\"fill-opacity\", \"0.1\");\n\t\t\tif (points) o.setAttribute(\"points\", points);\n\t\t\to.setAttribute(\"stroke-linecap\", \"round\");\n\t\t\to.setAttribute(\"stroke-linejoin\", \"round\");\n\t\t\to.setAttribute(\"data-id\", 0);\n\n\t\t\tthis.cont.appendChild(o);\n\t\t\treturn o;\n\t\t};\n\t\tthis.CreateOval = function (diam) {\n\t\t\tconst o = documentCreateElementNS_Element(\"circle\");\n\t\t\tif (svgAntialias !== undefined)\n\t\t\t\to.setAttribute(\"shape-rendering\", svgAntialias === true ? \"auto\" : \"optimizeSpeed\");\n\t\t\to.setAttribute(\"stroke-width\", 0);\n\t\t\to.setAttribute(\"r\", diam / 2);\n\t\t\t//ch_commented o.style.cursor = \"pointer\";\n\t\t\to.setAttribute(\"data-status\", SvgVml.StatusEnumToString(StatusEnum.POINT_FREE));\n\t\t\t//o.setAttribute(\"data-old-status\", SvgVml.StatusEnumToString(StatusEnum.POINT_FREE));\n\n\t\t\tthis.cont.appendChild(o);\n\t\t\treturn o;\n\t\t};\n\t}\n\n\tRemoveOval(oval) {\n\t\tthis.cont.removeChild(oval);\n\t}\n\n\tRemovePolyline(polyline) {\n\t\tthis.cont.removeChild(polyline);\n\t}\n\n\tDeserializeOval(packed, radius = 4) {\n\t\tlet { x, y, Status, Color } = packed;\n\t\tx = parseInt(x);\n\t\ty = parseInt(y);\n\t\tconst o = this.CreateOval(radius);\n\t\to.move(x, y, radius);\n\t\to.SetStrokeColor(Color);\n\t\to.SetFillColor(Color);\n\t\to.SetStatus(Status);\n\t\treturn o;\n\t}\n\n\tDeserializePolyline(packed, width = 3) {\n\t\tconst { iId, Color, PointsAsString } = packed;\n\t\tconst o = this.CreatePolyline(width, PointsAsString, Color);\n\t\to.SetID(iId);\n\t\treturn o;\n\t}\n\n\tstatic StatusEnumToString(enumVal) {\n\t\tswitch (enumVal) {\n\t\t\tcase StatusEnum.POINT_FREE_RED:\n\t\t\t\treturn Object.keys(StatusEnum)[0];\n\t\t\tcase StatusEnum.POINT_FREE_BLUE:\n\t\t\t\treturn Object.keys(StatusEnum)[1];\n\t\t\tcase StatusEnum.POINT_FREE:\n\t\t\t\treturn Object.keys(StatusEnum)[2];\n\t\t\tcase StatusEnum.POINT_STARTING:\n\t\t\t\treturn Object.keys(StatusEnum)[3];\n\t\t\tcase StatusEnum.POINT_IN_PATH:\n\t\t\t\treturn Object.keys(StatusEnum)[4];\n\t\t\tcase StatusEnum.POINT_OWNED_BY_RED:\n\t\t\t\treturn Object.keys(StatusEnum)[5];\n\t\t\tcase StatusEnum.POINT_OWNED_BY_BLUE:\n\t\t\t\treturn Object.keys(StatusEnum)[6];\n\t\n\t\t\tdefault:\n\t\t\t\tthrow new Error('bad status enum value');\n\t\t}\n\t}\n\t\n\tstatic StringToStatusEnum(enumStr) {\n\t\tswitch (enumStr.toUpperCase()) {\n\t\t\tcase Object.keys(StatusEnum)[0]:\n\t\t\t\treturn StatusEnum.POINT_FREE_RED;\n\t\t\tcase Object.keys(StatusEnum)[1]:\n\t\t\t\treturn StatusEnum.POINT_FREE_BLUE;\n\t\t\tcase Object.keys(StatusEnum)[2]:\n\t\t\t\treturn StatusEnum.POINT_FREE;\n\t\t\tcase Object.keys(StatusEnum)[3]:\n\t\t\t\treturn StatusEnum.POINT_STARTING;\n\t\t\tcase Object.keys(StatusEnum)[4]:\n\t\t\t\treturn StatusEnum.POINT_IN_PATH;\n\t\t\tcase Object.keys(StatusEnum)[5]:\n\t\t\t\treturn StatusEnum.POINT_OWNED_BY_RED;\n\t\t\tcase Object.keys(StatusEnum)[6]:\n\t\t\t\treturn StatusEnum.POINT_OWNED_BY_BLUE;\n\t\n\t\t\tdefault:\n\t\t\t\tthrow new Error('bad status enum string');\n\t\t}\n\t}\n\n\t/**\n\t * Converts coordinates point from screen to scaled SVG as according to\n\t * https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/samples/hh535760(v=vs.85)?redirectedfrom=MSDN\n\t * https://stackoverflow.com/questions/22183727/how-do-you-convert-screen-coordinates-to-document-space-in-a-scaled-svg\n\t * @param {number} clientX X coordinate\n\t * @param {number} clientY Y coordinate\n\t * @returns {object} coordinate {x,y} point\n\t */\n\tToCursorPoint(clientX, clientY) {\n\t\t// Get point in global SVG space\n\t\tthis.mathSVGPoint.x = clientX; this.mathSVGPoint.y = clientY;\n\t\tconst loc = this.mathSVGPoint.matrixTransform(this.cont.getScreenCTM().inverse());\n\n\t\treturn loc;\n\t}\n}\n\nclass GameStateStore {\n\tconstructor(useIndexedDb, pointCreationCallbackFn = null, pathCreationCallbackFn = null, getGameStateFn = null, version = \"\") {\n\t\tif (useIndexedDb) {\n\t\t\tif (!('indexedDB' in self)) {\n\t\t\t\tLocalError(\"This browser doesn't support IndexedDB\");\n\t\t\t\tuseIndexedDb = false;\n\t\t\t}\n\t\t\telse\n\t\t\t\tuseIndexedDb = true;\n\t\t}\n\t\telse\n\t\t\tuseIndexedDb = false;\n\n\t\t/////////inner class definitions start/////////\n\t\t/////////https://stackoverflow.com/questions/28784375/nested-es6-classes/////////\n\t\tconst SimplePointStoreDefinition = class SimplePointStore {\n\t\t\tconstructor() {\n\t\t\t\tthis.store = new Map();\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\treturn true;//dummy\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync has(key) {\n\t\t\t\treturn this.store.has(key);\n\t\t\t}\n\n\t\t\tasync set(key, val) {\n\t\t\t\treturn this.store.set(key, val);\n\t\t\t}\n\n\t\t\tasync get(key) {\n\t\t\t\treturn this.store.get(key);\n\t\t\t}\n\n\t\t\tasync values() {\n\t\t\t\treturn this.store.values();\n\t\t\t}\n\n\t\t\tasync count() {\n\t\t\t\treturn this.store.size;\n\t\t\t}\n\t\t};\n\n\t\tconst SimplePathStoreDefinition = class SimplePathStore {\n\t\t\tconstructor() {\n\t\t\t\tthis.store = [];\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\treturn true;//dummy\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync push(obj) {\n\t\t\t\treturn this.store.push(obj);\n\t\t\t}\n\n\t\t\tasync all() {\n\t\t\t\treturn this.store;\n\t\t\t}\n\n\t\t\tasync count() {\n\t\t\t\treturn this.store.length;\n\t\t\t}\n\t\t};\n\n\t\tconst IDBPointStoreDefinition = class IDBPointStore extends SimplePointStoreDefinition {\n\t\t\tconstructor(mainGameStateStore, pointCreationCallbackFn, getGameStateFn) {\n\t\t\t\tsuper();\n\t\t\t\tthis.MainGameStateStore = mainGameStateStore;\n\t\t\t\tthis.GetPoint = mainGameStateStore.GetPoint.bind(this.MainGameStateStore);\n\t\t\t\tthis.StorePoint = mainGameStateStore.StorePoint.bind(this.MainGameStateStore);\n\t\t\t\tthis.GetAllPoints = mainGameStateStore.GetAllPoints.bind(this.MainGameStateStore);\n\t\t\t\tthis.UpdateState = mainGameStateStore.UpdateState.bind(this.MainGameStateStore);\n\t\t\t\tthis.PointCreationCallback = pointCreationCallbackFn;\n\t\t\t\tthis.GetGameStateCallback = getGameStateFn;\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\tif (this.PointCreationCallback && this.GetGameStateCallback) {\n\t\t\t\t\tconst points = await this.GetAllPoints();\n\t\t\t\t\tconst game_state = this.GetGameStateCallback();\n\n\t\t\t\t\t//loading points from indexeddb\n\t\t\t\t\tfor (const idb_pt of points) {\n\t\t\t\t\t\tconst pt = await this.PointCreationCallback(idb_pt.x, idb_pt.y, idb_pt.Status, idb_pt.Color);\n\t\t\t\t\t\tconst index = idb_pt.y * game_state.iGridWidth + idb_pt.x;\n\t\t\t\t\t\tthis.store.set(index, pt);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\tawait this.MainGameStateStore.BeginBulkStorage(this.MainGameStateStore.DB_POINT_STORE, 'readwrite');\n\n\t\t\t\tif (this.MainGameStateStore.pointBulkBuffer === null)\n\t\t\t\t\tthis.MainGameStateStore.pointBulkBuffer = new Map();\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\tawait this.MainGameStateStore.StoreAllPoints();\n\n\t\t\t\tawait this.MainGameStateStore.EndBulkStorage(this.MainGameStateStore.DB_POINT_STORE);\n\t\t\t}\n\n\t\t\tasync has(key) {\n\t\t\t\t//const pt = await GetPoint(key);\n\t\t\t\t//return pt !== undefined && pt !== null;\n\t\t\t\treturn this.store.has(key);\n\t\t\t}\n\n\t\t\tasync set(key, oval) {\n\t\t\t\tconst game_state = this.GetGameStateCallback();\n\n\t\t\t\tconst pos = oval.GetPosition();\n\t\t\t\tconst color = oval.GetFillColor();\n\t\t\t\tconst idb_pt = {\n\t\t\t\t\tx: pos.x,\n\t\t\t\t\ty: pos.y,\n\t\t\t\t\tStatus: oval.GetStatus(),\n\t\t\t\t\tColor: color\n\t\t\t\t};\n\n\t\t\t\tawait this.StorePoint(key, idb_pt);\n\n\t\t\t\tif (this.UpdateState) {\n\t\t\t\t\tif (game_state.bPointsAndPathsLoaded === true)\n\t\t\t\t\t\tawait this.UpdateState(game_state.iGameID, game_state);\n\t\t\t\t}\n\n\t\t\t\treturn this.store.set(key, oval);\n\t\t\t}\n\n\t\t\tasync get(key) {\n\t\t\t\tlet val = this.store.get(key);\n\t\t\t\t//if (!val) {\n\t\t\t\t//\tconst idb_pt = await this.GetPoint(key);\n\t\t\t\t//\tif (idb_pt && this.PointCreationCallback) {\n\t\t\t\t//\t\tval = this.PointCreationCallback(idb_pt.x, idb_pt.y, idb_pt.Status, idb_pt.Color);\n\t\t\t\t//\t\tthis.store.set(key, val);\n\t\t\t\t//\t\treturn val;\n\t\t\t\t//\t}\n\t\t\t\t//\telse\n\t\t\t\t//\t\treturn undefined;\n\t\t\t\t//}\n\t\t\t\treturn val;\n\t\t\t}\n\n\t\t\tasync values() {\n\t\t\t\tlet values = this.store.values();\n\t\t\t\tif (values)\n\t\t\t\t\treturn values;\n\t\t\t\tvalues = await this.GetAllPoints();\n\t\t\t\treturn values;\n\t\t\t}\n\t\t};\n\n\t\tconst IDBPathStoreDefinition = class IDBPathStore extends SimplePathStoreDefinition {\n\t\t\tconstructor(mainGameStateStore, pathCreationCallbackFn, getGameStateFn) {\n\t\t\t\tsuper();\n\t\t\t\tthis.MainGameStateStore = mainGameStateStore;\n\t\t\t\tthis.GetAllPaths = mainGameStateStore.GetAllPaths.bind(this.MainGameStateStore);\n\t\t\t\tthis.StorePath = mainGameStateStore.StorePath.bind(this.MainGameStateStore);\n\t\t\t\tthis.UpdateState = mainGameStateStore.UpdateState.bind(this.MainGameStateStore);\n\t\t\t\tthis.PathCreationCallback = pathCreationCallbackFn;\n\t\t\t\tthis.GetGameStateCallback = getGameStateFn;\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\tif (this.PathCreationCallback) {\n\t\t\t\t\tconst paths = await this.GetAllPaths();\n\t\t\t\t\t//loading paths from indexeddb\n\t\t\t\t\tfor (const idb_pa of paths) {\n\t\t\t\t\t\tconst pa = await this.PathCreationCallback(idb_pa.PointsAsString, idb_pa.Color, idb_pa.iId);\n\t\t\t\t\t\tthis.store.push(pa);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\tawait this.MainGameStateStore.BeginBulkStorage([this.MainGameStateStore.DB_POINT_STORE, this.MainGameStateStore.DB_PATH_STORE], 'readwrite');\n\n\t\t\t\tif (this.MainGameStateStore.pathBulkBuffer === null)\n\t\t\t\t\tthis.MainGameStateStore.pathBulkBuffer = new Map();\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\tawait this.MainGameStateStore.StoreAllPaths();\n\n\t\t\t\tawait this.MainGameStateStore.EndBulkStorage([this.MainGameStateStore.DB_POINT_STORE, this.MainGameStateStore.DB_PATH_STORE]);\n\t\t\t}\n\n\t\t\tasync push(val) {\n\t\t\t\tconst game_state = this.GetGameStateCallback();\n\n\t\t\t\tconst id_key = val.GetID();\n\t\t\t\tconst idb_path = {\n\t\t\t\t\tiId: id_key,\n\t\t\t\t\tColor: val.GetFillColor(),\n\t\t\t\t\tPointsAsString: val.GetPointsString().split(\" \").map((pt) => {\n\t\t\t\t\t\tconst tab = pt.split(',');\n\t\t\t\t\t\tconst x = parseInt(tab[0]), y = parseInt(tab[1]);\n\t\t\t\t\t\treturn `${x},${y}`;\n\t\t\t\t\t}).join(\" \")\n\t\t\t\t};\n\n\t\t\t\tawait this.StorePath(id_key, idb_path);\n\n\t\t\t\tif (this.UpdateState) {\n\t\t\t\t\tif (game_state.bPointsAndPathsLoaded === true)\n\t\t\t\t\t\tawait this.UpdateState(game_state.iGameID, game_state);\n\t\t\t\t}\n\n\t\t\t\treturn this.store.push(val);\n\t\t\t}\n\n\t\t\tasync all() {\n\t\t\t\tlet values = this.store;\n\t\t\t\tif (values)\n\t\t\t\t\treturn values;\n\t\t\t\tvalues = await this.GetAllPaths();\n\t\t\t\treturn values;\n\t\t\t}\n\t\t};\n\t\t/////////inner class definitions end/////////\n\n\t\tif (useIndexedDb === true) {\n\t\t\tthis.DB_NAME = 'InkballGame';\n\t\t\tthis.DB_POINT_STORE = 'points';\n\t\t\tthis.DB_PATH_STORE = 'paths';\n\t\t\tthis.DB_STATE_STORE = 'state';\n\t\t\tthis.g_DB = null;//main DB object\n\t\t\tthis.bulkStores = null;\n\t\t\tthis.pointBulkBuffer = null;\n\t\t\tthis.pathBulkBuffer = null;\n\n\t\t\t// Use a long long for this value (don't use a float)\n\t\t\tif (!version || version === \"\" || version.length <= 0)\n\t\t\t\tthis.DB_VERSION = null;\n\t\t\telse {\n\t\t\t\tthis.DB_VERSION = parseInt(version.split('.').reduce((acc, val) => {\n\t\t\t\t\tval = parseInt(val);\n\t\t\t\t\treturn acc * 10 + (isNaN(val) ? 0 : val);\n\t\t\t\t}, 0)) - 1010/*initial module versioning start number*/ + 4/*initial indexDB start number*/;\n\t\t\t}\n\n\t\t\tthis.PointStore = new IDBPointStoreDefinition(this, pointCreationCallbackFn, getGameStateFn);\n\t\t\tthis.PathStore = new IDBPathStoreDefinition(this, pathCreationCallbackFn, getGameStateFn);\n\t\t}\n\t\telse {\n\t\t\tthis.PointStore = new SimplePointStoreDefinition();\n\t\t\tthis.PathStore = new SimplePathStoreDefinition();\n\t\t}\n\t}\n\n\tGetPointStore() {\n\t\treturn this.PointStore;\n\t}\n\n\tGetPathStore() {\n\t\treturn this.PathStore;\n\t}\n\n\tasync OpenDb() {\n\t\tLocalLog(\"OpenDb ...\");\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet req;\n\t\t\tif (this.DB_VERSION !== null)\n\t\t\t\treq = indexedDB.open(this.DB_NAME, this.DB_VERSION);\n\t\t\telse\n\t\t\t\treq = indexedDB.open(this.DB_NAME);\n\n\t\t\treq.onsuccess = function (evt) {\n\t\t\t\t// Equal to: db = req.result;\n\t\t\t\tthis.g_DB = evt.currentTarget.result;\n\n\t\t\t\tLocalLog(\"OpenDb DONE\");\n\t\t\t\tresolve(evt.currentTarget.result);\n\t\t\t}.bind(this);\n\t\t\treq.onerror = function (evt) {\n\t\t\t\tLocalError(\"OpenDb:\", evt.target.errorCode || evt.target.error);\n\t\t\t\treject();\n\t\t\t}.bind(this);\n\t\t\treq.onupgradeneeded = function (evt) {\n\t\t\t\tLocalLog(`OpenDb.onupgradeneeded(version: ${this.DB_VERSION})`);\n\n\t\t\t\tconst store_list = Array.from(evt.currentTarget.result.objectStoreNames);\n\t\t\t\tif (store_list.includes(this.DB_POINT_STORE))\n\t\t\t\t\tevt.currentTarget.result.deleteObjectStore(this.DB_POINT_STORE);\n\t\t\t\tif (store_list.includes(this.DB_PATH_STORE))\n\t\t\t\t\tevt.currentTarget.result.deleteObjectStore(this.DB_PATH_STORE);\n\t\t\t\tif (store_list.includes(this.DB_STATE_STORE))\n\t\t\t\t\tevt.currentTarget.result.deleteObjectStore(this.DB_STATE_STORE);\n\n\t\t\t\tevt.currentTarget.result.createObjectStore(\n\t\t\t\t\tthis.DB_POINT_STORE, { /*keyPath: 'pos',*/ autoIncrement: false });\n\t\t\t\t//point_store.createIndex('Status', 'Status', { unique: false });\n\t\t\t\t//point_store.createIndex('Color', 'Color', { unique: false });\n\n\n\t\t\t\tevt.currentTarget.result.createObjectStore(\n\t\t\t\t\tthis.DB_PATH_STORE, { /*keyPath: 'iId',*/ autoIncrement: false });\n\t\t\t\t//path_store.createIndex('Color', 'Color', { unique: false });\n\n\t\t\t\tevt.currentTarget.result.createObjectStore(\n\t\t\t\t\tthis.DB_STATE_STORE, { /*keyPath: 'gameId',*/ autoIncrement: false });\n\t\t\t}.bind(this);\n\t\t});\n\t}\n\n\t/**\n\t  * @param {string} storeName is a store name\n\t  * @param {string} mode either \"readonly\" or \"readwrite\"\n\t  * @returns {object} store\n\t  */\n\tGetObjectStore(storeName, mode) {\n\t\tif (this.bulkStores !== null && this.bulkStores.has(storeName))\n\t\t\treturn this.bulkStores.get(storeName);\n\n\t\tconst tx = this.g_DB.transaction(storeName, mode);\n\t\treturn tx.objectStore(storeName);\n\t}\n\n\tasync ClearAllStores() {\n\t\tconst clearObjectStore = async function (storeName) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst store = this.GetObjectStore(storeName, 'readwrite');\n\t\t\t\tconst req = store.clear();\n\t\t\t\treq.onsuccess = function () {\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t\treq.onerror = function (evt) {\n\t\t\t\t\tLocalError(\"clearObjectStore:\", evt.target.errorCode);\n\t\t\t\t\treject();\n\t\t\t\t};\n\t\t\t});\n\t\t}.bind(this);\n\n\t\tawait Promise.all([\n\t\t\tclearObjectStore(this.DB_POINT_STORE),\n\t\t\tclearObjectStore(this.DB_PATH_STORE),\n\t\t\tclearObjectStore(this.DB_STATE_STORE)\n\t\t]);\n\t}\n\n\t/**\n\t  * @param {number} key is calculated inxed of point y * width + x, probably not usefull\n\t  */\n\tasync GetPoint(key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_POINT_STORE, 'readonly');\n\t\t\tconst req = store.get(key);\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetPoint => ' + event));\n\t\t\t};\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tresolve(event.target.result);\n\t\t\t};\n\t\t});\n\t}\n\n\tasync GetAllPoints() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_POINT_STORE, 'readonly');\n\t\t\tconst bucket = [];\n\t\t\tconst req = store.openCursor();\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tconst cursor = event.target.result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tbucket.push(cursor.value);\n\t\t\t\t\tcursor.continue();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tresolve(bucket);\n\t\t\t};\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetAllPoints => ' + event));\n\t\t\t};\n\t\t});\n\t}\n\n\tasync GetState(key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_STATE_STORE, 'readonly');\n\t\t\tconst req = store.get(key);\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetState => ' + event));\n\t\t\t};\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tresolve(event.target.result);\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is path Id\n\t  */\n\tasync GetPath(key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_PATH_STORE, 'readonly');\n\t\t\tconst req = store.get(key);\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetPath => ' + event));\n\t\t\t};\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tresolve(event.target.result);\n\t\t\t};\n\t\t});\n\t}\n\n\tasync GetAllPaths() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_PATH_STORE, 'readonly');\n\t\t\tconst bucket = [];\n\t\t\tconst req = store.openCursor();\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tconst cursor = event.target.result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tbucket.push(cursor.value);\n\t\t\t\t\tcursor.continue();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tresolve(bucket);\n\t\t\t};\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetAllPaths => ' + event));\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is calculated inxed of point y * width + x, probably not usefull\n\t  * @param {object} val is serialized, thin circle\n\t  */\n\tasync StorePoint(key, val) {\n\t\tif (this.bulkStores !== null && this.bulkStores.has(this.DB_POINT_STORE)) {\n\t\t\tif (this.pointBulkBuffer === null)\n\t\t\t\tthis.pointBulkBuffer = new Map();\n\t\t\tthis.pointBulkBuffer.set(key, val);\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_POINT_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\treq = store.put(val, key);//earlier was 'add'\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"StorePoint error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\tasync StoreAllPoints(values = null) {\n\t\tif (!values)\n\t\t\tvalues = this.pointBulkBuffer;\n\n\t\tif (!values || this.bulkStores === null)\n\t\t\treturn Promise.reject();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_POINT_STORE, 'readwrite');\n\t\t\ttry {\n\t\t\t\tvalues.forEach(function (v, key) {\n\t\t\t\t\tstore.add(v, key);\n\t\t\t\t});\n\n\t\t\t\tthis.pointBulkBuffer = null;\n\t\t\t\tresolve();\n\t\t\t} catch (e) {\n\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is GameID\n\t  * @param {object} gameState is InkBallGame state object\n\t  */\n\tasync StoreState(key, gameState) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_STATE_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\treq = store.add(gameState, key);\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"StoreState error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\tasync UpdateState(key, gameState) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_STATE_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\treq = store.put(gameState, key);\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"UpdateState error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is path Id\n\t  * @param {object} val is serialized thin path\n\t  */\n\tasync StorePath(key, val) {\n\t\tif (this.bulkStores !== null && this.bulkStores.has(this.DB_PATH_STORE)) {\n\t\t\tif (this.pathBulkBuffer === null)\n\t\t\t\tthis.pathBulkBuffer = new Map();\n\t\t\tthis.pathBulkBuffer.set(key, val);\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_PATH_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\treq = store.add(val, key);\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"StorePath error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\tasync StoreAllPaths(values = null) {\n\t\tif (!values)\n\t\t\tvalues = this.pathBulkBuffer;\n\n\t\tif (!values || this.bulkStores === null)\n\t\t\treturn Promise.reject();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.GetObjectStore(this.DB_PATH_STORE, 'readwrite');\n\t\t\ttry {\n\t\t\t\tvalues.forEach(function (v, key) {\n\t\t\t\t\tstore.add(v, key);\n\t\t\t\t});\n\n\t\t\t\tthis.pathBulkBuffer = null;\n\t\t\t\tresolve();\n\t\t\t} catch (e) {\n\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync PrepareStore() {\n\t\t//detecting if we have IndexedDb advanced store (only checking point-store); otherwise, there is no point in going further\n\t\tif (!this.PointStore.GetAllPoints) return false;\n\n\t\tif (this.g_DB === null)\n\t\t\tawait this.OpenDb();\n\t\telse\n\t\t\treturn false;//all initiated, just exit\n\n\t\tconst game_state = this.PointStore.GetGameStateCallback();\n\t\tconst idb_state = await this.GetState(game_state.iGameID);\n\t\tif (!idb_state) {\n\t\t\t//no state entry in db\n\t\t\tawait this.ClearAllStores();\n\n\t\t\tawait this.StoreState(game_state.iGameID, game_state);\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t//Verify date of last move and decide whether to need pull points from signalR\n\t\t\t//Both datetimes should be ISO UTC\n\t\t\tif (idb_state.sLastMoveGameTimeStamp !== game_state.sLastMoveGameTimeStamp) {\n\n\t\t\t\tawait this.ClearAllStores();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (game_state.bPointsAndPathsLoaded === false) {\n\t\t\t\t//db entry ok and ready for read\n\t\t\t\ttry {\n\t\t\t\t\tawait this.BeginBulkStorage([this.DB_POINT_STORE, this.DB_PATH_STORE], 'readonly');\n\n\t\t\t\t\tif ((await this.PointStore.PrepareStore()) !== true || (await this.PathStore.PrepareStore()) !== true) {\n\n\t\t\t\t\t\tawait this.ClearAllStores();\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t} finally {\n\t\t\t\t\tawait this.EndBulkStorage([this.DB_POINT_STORE, this.DB_PATH_STORE]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Load all needed stores upfront\n\t * @param {any} storeName array or string of store to load\n\t * @param {any} mode - readonly/readwrite\n\t */\n\tasync BeginBulkStorage(storeName, mode) {\n\t\tif (this.bulkStores === null)\n\t\t\tthis.bulkStores = new Map();\n\n\t\tconst keys = Array.isArray(storeName) ? storeName : [storeName];\n\t\tlet tx = null;\n\t\tfor (const key of keys) {\n\t\t\tif (!this.bulkStores.has(key)) {\n\t\t\t\tif (tx === null)\n\t\t\t\t\ttx = this.g_DB.transaction(keys, mode);\n\t\t\t\tthis.bulkStores.set(key, tx.objectStore(key));\n\t\t\t}\n\t\t}\n\t}\n\n\tasync EndBulkStorage(storeName) {\n\t\tif (this.bulkStores !== null) {\n\t\t\tconst keys = Array.isArray(storeName) ? storeName : [storeName];\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (this.bulkStores.has(key)) {\n\t\t\t\t\tthis.bulkStores.delete(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.bulkStores.size <= 0)\n\t\t\t\tthis.bulkStores = null;\n\t\t}\n\t}\n}\n\n\nexport {\n\tSvgVml, StatusEnum, pnpoly, pnpoly2, LocalLog, LocalError,\n\thasDuplicates, sortPointsClockwise, Sleep,\n\tGameStateStore\n};\n","import concaveman from \"concaveman\";\nimport decomp from \"poly-decomp\";\nimport { StatusEnum, LocalLog, sortPointsClockwise, /*Sleep,*/ pnpoly2 } from \"./shared.js\";\n\n\n/**\n * AI operations class\n * */\nclass GraphAI {\n\tconstructor(iGridWidth, iGridHeight, pointStore) {\n\t\tthis.m_iGridWidth = iGridWidth;\n\t\tthis.m_iGridHeight = iGridHeight;\n\t\tthis.m_Points = pointStore;\n\t\tthis.POINT_STARTING = StatusEnum.POINT_STARTING;\n\t\tthis.POINT_IN_PATH = StatusEnum.POINT_IN_PATH;\n\t}\n\n\t/**\n\t * Building graph of connected vertices and edges\n\t * @param {any} param0 is a optional object comprised of:\n\t *\tfreePointStatus - status of free point\n\t *\tcpuFillColor - CPU point color\n\t */\n\tasync BuildGraph({\n\t\tfreePointStatus = StatusEnum.POINT_FREE_BLUE,\n\t\tcpufillCol: cpuFillColor = 'blue'\n\t\t//, visuals: presentVisually = false\n\t} = {}) {\n\t\tconst graph_points = [], graph_edges = new Map();\n\n\t\tconst isPointOKForPath = function (freePointStatusArr, pt) {\n\t\t\tconst status = pt.GetStatus();\n\n\t\t\tif (freePointStatusArr.includes(status) && pt.GetFillColor() === cpuFillColor)\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t};\n\n\t\tconst addPointsAndEdgesToGraph = async function (point, to_x, to_y, x, y) {\n\t\t\tif (to_x >= 0 && to_x < this.m_iGridWidth && to_y >= 0 && to_y < this.m_iGridHeight) {\n\t\t\t\tconst next = await this.m_Points.get(to_y * this.m_iGridWidth + to_x);\n\t\t\t\tif (next && isPointOKForPath([freePointStatus], next) === true) {\n\n\t\t\t\t\tif (graph_edges.has(`${x},${y}_${to_x},${to_y}`) === false && graph_edges.has(`${to_x},${to_y}_${x},${y}`) === false) {\n\n\t\t\t\t\t\tconst edge = {\n\t\t\t\t\t\t\tfrom: point,\n\t\t\t\t\t\t\tto: next\n\t\t\t\t\t\t};\n\t\t\t\t\t\t//if (presentVisually === true) {\n\t\t\t\t\t\t//\tconst line = CreateLine(3, 'rgba(0, 255, 0, 0.3)');\n\t\t\t\t\t\t//\tline.move(x, y, next_pos.x, next_pos.y);\n\t\t\t\t\t\t//\tedge.line = line;\n\t\t\t\t\t\t//}\n\t\t\t\t\t\tgraph_edges.set(`${x},${y}_${to_x},${to_y}`, edge);\n\n\n\t\t\t\t\t\tif (graph_points.includes(point) === false) {\n\t\t\t\t\t\t\tpoint.adjacents = [next];\n\t\t\t\t\t\t\tgraph_points.push(point);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pt = graph_points.find(x => x === point);\n\t\t\t\t\t\t\tpt.adjacents.push(next);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (graph_points.includes(next) === false) {\n\t\t\t\t\t\t\tnext.adjacents = [point];\n\t\t\t\t\t\t\tgraph_points.push(next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pt = graph_points.find(x => x === next);\n\t\t\t\t\t\t\tpt.adjacents.push(point);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tfor (const point of await this.m_Points.values()) {\n\t\t\tif (point && isPointOKForPath([freePointStatus, this.POINT_STARTING, this.POINT_IN_PATH], point) === true) {\n\t\t\t\tconst { x, y } = point.GetPosition();\n\t\t\t\t//TODO: await all below promises\n\t\t\t\t//east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, y, x, y);\n\t\t\t\t//west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, y, x, y);\n\t\t\t\t//north\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x, (y - 1), x, y);\n\t\t\t\t//south\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x, (y + 1), x, y);\n\t\t\t\t//north_west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, (y - 1), x, y);\n\t\t\t\t//north_east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, (y - 1), x, y);\n\t\t\t\t//south_west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, (y + 1), x, y);\n\t\t\t\t//south_east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, (y + 1), x, y);\n\t\t\t}\n\t\t}\n\t\t//return graph\n\t\treturn { vertices: graph_points, edges: Array.from(graph_edges.values()) };\n\t}\n\n\tasync IsPointOutsideAllPaths(lines, x, y) {\n\t\tfor (const line of lines) {\n\t\t\tconst points = line.GetPointsArray();\n\n\t\t\tif (false !== pnpoly2(points, x, y))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Based on https://www.geeksforgeeks.org/print-all-the-cycles-in-an-undirected-graph/\n\t * @param {any} graph constructed earlier with BuildGraph\n\t * @param {string} COLOR_BLUE - cpu blue playing color\n\t * @param {string} sHumanColor - human red playing color\n\t * @param {object} lines - line array\n\t * @returns {array} of cycles\n\t */\n\tasync MarkAllCycles(graph, COLOR_BLUE, sHumanColor, lines) {\n\t\tconst vertices = graph.vertices;\n\t\tconst N = vertices.length;\n\t\tlet cycles = new Array(N);\n\t\t// mark with unique numbers\n\t\tconst mark = new Array(N);\n\t\t// arrays required to color the \n\t\t// graph, store the parent of node \n\t\tconst color = new Array(N), par = new Array(N);\n\n\t\tfor (let i = 0; i < N; i++) {\n\t\t\tmark[i] = []; cycles[i] = [];\n\t\t}\n\n\t\tconst dfs_cycle = async function (u, p) {\n\t\t\t// already (completely) visited vertex. \n\t\t\tif (color[u] === 2)\n\t\t\t\treturn;\n\n\t\t\t// seen vertex, but was not completely visited -> cycle detected. \n\t\t\t// backtrack based on parents to find the complete cycle. \n\t\t\tif (color[u] === 1) {\n\t\t\t\tcyclenumber++;\n\t\t\t\tlet cur = p;\n\t\t\t\tmark[cur].push(cyclenumber);\n\n\t\t\t\t// backtrack the vertex which are\n\t\t\t\t// in the current cycle thats found\n\t\t\t\twhile (cur !== u) {\n\t\t\t\t\tcur = par[cur];\n\t\t\t\t\tmark[cur].push(cyclenumber);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpar[u] = p;\n\n\t\t\t// partially visited.\n\t\t\tcolor[u] = 1;\n\t\t\tconst vertex = vertices[u];\n\t\t\tif (vertex) {\n\t\t\t\t\n\t\t\t\t//const x = vertex.attributes.get('cx'), y = vertex.attributes.get('cy');\n\t\t\t\t//vertex.SetStrokeColor('black');\n\t\t\t\t//vertex.SetFillColor('black');\n\t\t\t\t////vertex.setAttribute(\"r\", \"6\");\n\t\t\t\t//await Sleep(10);\n\n\n\t\t\t\t// simple dfs on graph\n\t\t\t\tfor (const adj of vertex.adjacents) {\n\t\t\t\t\tconst v = vertices.indexOf(adj);\n\t\t\t\t\t// if it has not been visited previously\n\t\t\t\t\tif (v === par[u])\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tawait dfs_cycle(v, u);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// completely visited. \n\t\t\tcolor[u] = 2;\n\t\t};\n\n\t\tconst printCycles = async function (edges, mark) {\n\t\t\t// push the edges that into the \n\t\t\t// cycle adjacency list \n\t\t\tfor (let e = 0; e < edges; e++) {\n\t\t\t\tconst mark_e = mark[e];\n\t\t\t\tif (mark_e !== undefined && mark_e.length > 0) {\n\t\t\t\t\tfor (let m = 0; m < mark_e.length; m++) {\n\t\t\t\t\t\tconst found_c = cycles[mark_e[m]];\n\t\t\t\t\t\tif (found_c !== undefined)\n\t\t\t\t\t\t\tfound_c.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//sort by point length(only cycles >= 4): first longest cycles, most points\n\t\t\tcycles = cycles.filter(c => c.length >= 4).sort((b, a) => a.length - b.length);\n\n\t\t\t//gather free human player points that could be intercepted.\n\t\t\tconst free_human_player_points = [];\n\t\t\tfor (const pt of await this.m_Points.values()) {\n\t\t\t\tif (pt !== undefined && pt.GetFillColor() === sHumanColor && StatusEnum.POINT_FREE_RED === pt.GetStatus()) {\n\t\t\t\t\tconst { x, y } = pt.GetPosition();\n\t\t\t\t\tif (false === await this.IsPointOutsideAllPaths(lines, x, y))\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t//check if really exists\n\t\t\t\t\t//const pt1 = document.querySelector(`svg > circle[cx=\"${x}\"][cy=\"${y}\"]`);\n\t\t\t\t\t//if (pt1)\n\t\t\t\t\tfree_human_player_points.push({ x, y });\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t//const tab = [];\n\t\t\t// traverse through all the vertices with same cycle\n\t\t\tfor (let i = 0; i <= cyclenumber; i++) {\n\t\t\t\tconst cycl = cycles[i];//get cycle\n\t\t\t\tif (cycl && cycl.length > 0) {\t//some checks\n\t\t\t\t\t// Print the i-th cycle\n\t\t\t\t\t//let str = (`Cycle Number ${i}: `), trailing_points = [];\n\t\t\t\t\t//const rand_color = 'var(--indigo)';\n\n\t\t\t\t\t//convert to logical space\n\t\t\t\t\tconst mapped_verts = cycl.map(function (c) {\n\t\t\t\t\t\treturn vertices[c].GetPosition();\n\t\t\t\t\t}.bind(this));\n\t\t\t\t\t//sort clockwise (https://stackoverflow.com/questions/45660743/sort-points-in-counter-clockwise-in-javascript)\n\t\t\t\t\tconst cw_sorted_verts = sortPointsClockwise(mapped_verts);\n\t\t\t\t\tcycles[i] = { cycl, cw_sorted_verts };\n\t\t\t\t\t////display which cycle we are dealing with\n\t\t\t\t\t//for (const vert of cw_sorted_verts) {\n\t\t\t\t\t//\tconst { x, y } = vert;\n\t\t\t\t\t//\tconst pt = document.querySelector(`svg > circle[cx=\"${x}\"][cy=\"${y}\"]`);\n\t\t\t\t\t//\tif (pt) {//again some basic checks\n\t\t\t\t\t//\t\tstr += (`(${x},${y})`);\n\n\t\t\t\t\t//\t\tpt.SetStrokeColor(rand_color);\n\t\t\t\t\t//\t\tpt.SetFillColor(rand_color);\n\t\t\t\t\t//\t\tpt.setAttribute(\"r\", \"6\");\n\t\t\t\t\t//\t}\n\t\t\t\t\t//\tawait Sleep(50);\n\t\t\t\t\t//}\n\n\t\t\t\t\t//find for all free_human_player_points which cycle might interepct it (surrounds)\n\t\t\t\t\t//only convex, NOT concave :-(\n\t\t\t\t\t//let tmp = '', comma = '';\n\t\t\t\t\t//for (const possible_intercept of free_human_player_points) {\n\t\t\t\t\t//\tif (false !== pnpoly2(cw_sorted_verts, possible_intercept.x, possible_intercept.y)) {\n\t\t\t\t\t//\t\ttmp += `${comma}(${possible_intercept.x},${possible_intercept.y})`;\n\n\t\t\t\t\t//\t\tconst pt1 = document.querySelector(`svg > circle[cx=\"${possible_intercept.x}\"][cy=\"${possible_intercept.y}\"]`);\n\t\t\t\t\t//\t\tif (pt1) {\n\t\t\t\t\t//\t\t\tpt1.SetStrokeColor('var(--yellow)');\n\t\t\t\t\t//\t\t\tpt1.SetFillColor('var(--yellow)');\n\t\t\t\t\t//\t\t\tpt1.setAttribute(\"r\", \"6\");\n\t\t\t\t\t//\t\t}\n\t\t\t\t\t//\t\tcomma = ',';\n\t\t\t\t\t//\t}\n\t\t\t\t\t//}\n\t\t\t\t\t////gaterhing of some data and console printing\n\t\t\t\t\t//trailing_points.unshift(str);\n\t\t\t\t\t//tab.push(trailing_points);\n\t\t\t\t\t////log...\n\t\t\t\t\t//LocalLog(str + (tmp !== '' ? ` possible intercepts: ${tmp}` : ''));\n\t\t\t\t\t////...and clear\n\t\t\t\t\t//const pts2reset = Array.from(document.querySelectorAll(`svg > circle[fill=\"${rand_color}\"][r=\"6\"]`));\n\t\t\t\t\t//pts2reset.forEach(pt => {\n\t\t\t\t\t//\tpt.SetStrokeColor(COLOR_BLUE);\n\t\t\t\t\t//\tpt.SetFillColor(COLOR_BLUE);\n\t\t\t\t\t//\tpt.setAttribute(\"r\", \"4\");\n\t\t\t\t\t//});\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*return tab;*/return { cycles, free_human_player_points, cyclenumber };\n\t\t}.bind(this);\n\n\t\t// store the numbers of cycle\n\t\tlet cyclenumber = 0, edges = N;\n\n\t\t// call DFS to mark the cycles\n\t\tfor (let vind = 0; vind < N; vind++) {\n\t\t\tawait dfs_cycle(vind + 1, vind);//, color, mark, par);\n\t\t}\n\n\t\t// function to print the cycles\n\t\treturn await printCycles(edges, mark);\n\t}\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction concavemanTesting() {\n\tconst precision_points = [[484, 480], [676, 363], [944, 342], [678, 41], [286, 237], [758, 215], [752, 117], [282, 492], [609, 262], [129, 252]];\n\tconst concavity = 2.0, lengthThreshold = 0.0;\n\tconst concaveman_output = concaveman(precision_points, concavity, lengthThreshold);\n\t//console.log('Hello concaveman. Simple test output points: \\n' + JSON.stringify(output));\n\n\n\t// Make sure the polygon has counter-clockwise winding. Skip this step if you know it's already counter-clockwise.\n\t//console.log(`decomp.makeCCW(concavePolygon) => ${decomp.makeCCW(precision_points)}`);\n\t//const convexPolygonsQuick = decomp.quickDecomp(precision_points);\n\t// ==> [  [[1,0],[1,1],[0.5,0.5]],  [[0.5,0.5],[-1,1],[-1,0],[1,0]]  ]\n\t//console.log(`decomp.quickDecomp => ${convexPolygons}`);\n\t// Decompose using the slow (but optimal) algorithm\n\tconst convexPolygons = decomp.decomp(precision_points);\n\t// ==> [  [[-1,1],[-1,0],[1,0],[0.5,0.5]],  [[1,0],[1,1],[0.5,0.5]]  ]\n\t//console.log(`decomp.decomp => ${convexPolygons}`);\n\tif (!concaveman_output || concaveman_output.length <= 0 ||\n\t\t//!convexPolygonsQuick || convexPolygonsQuick.length <= 0 || \n\t\t!convexPolygons || convexPolygons.length <= 0) {\n\t\tLocalLog('decomp or concaveman error');\n\t}\n}\n\nexport { concaveman, GraphAI };\n","﻿import { GraphAI, concaveman } from \"./AISource.js\";\nimport { SvgVml, StatusEnum, LocalLog, LocalError, sortPointsClockwise } from \"./shared.js\";\n\n\n// This is the entry point for our worker\naddEventListener('message', async function (e) {\n\tconst params = e.data;\n\n\tconst svgVml = new SvgVml();\n\tsvgVml.CreateSVGVML(null, null, null, params.boardSize);\n\n\tswitch (params.operation) {\n\t\tcase \"BUILD_GRAPH\":\n\t\t\t{\n\t\t\t\t//debugger;\n\t\t\t\tconst lines = params.paths.map(pa => svgVml.DeserializePolyline(pa));\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\n\t\t\t\tLocalLog(`lines.count = ${await lines.length}, points.count = ${await points.size}`);\n\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({ freePointStatus: StatusEnum.POINT_FREE_BLUE, cpufillCol: 'blue', visuals: false });\n\t\t\t\t//LocalLog(graph);\n\n\t\t\t\tpostMessage({ operation: params.operation, params: graph });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"CONCAVEMAN\":\n\t\t\t{\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({ freePointStatus: StatusEnum.POINT_FREE_BLUE, cpufillCol: 'blue', visuals: false });\n\n\n\t\t\t\tconst vertices = graph.vertices.map(function (pt) {\n\t\t\t\t\tconst { x, y } = pt.GetPosition();\n\t\t\t\t\treturn [x, y];\n\t\t\t\t});\n\t\t\t\tconst convex_hull = concaveman(vertices, 2.0, 0.0);\n\n\t\t\t\tconst mapped_verts = convex_hull.map(([x, y]) => ({ x, y }));\n\t\t\t\tconst cw_sorted_verts = sortPointsClockwise(mapped_verts);\n\n\t\t\t\tpostMessage({ operation: params.operation, convex_hull: convex_hull, cw_sorted_verts: cw_sorted_verts });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"MARK_ALL_CYCLES\":\n\t\t\t{\n\t\t\t\tconst lines = params.paths.map(pa => svgVml.DeserializePolyline(pa));\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({ freePointStatus: StatusEnum.POINT_FREE_BLUE, cpufillCol: params.colorBlue, visuals: false });\n\t\t\t\tconst result = await ai.MarkAllCycles(graph, params.colorBlue, params.colorRed, lines);\n\n\n\t\t\t\tpostMessage({\n\t\t\t\t\toperation: params.operation,\n\t\t\t\t\tcycles: result.cycles,\n\t\t\t\t\tfree_human_player_points: result.free_human_player_points,\n\t\t\t\t\tcyclenumber: result.cyclenumber\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tLocalError(`unknown params.operation = ${params.operation}`);\n\t\t\tbreak;\n\t}\n});\n\nLocalLog('Worker loaded');\n"],"names":["RBush","Queue","pointInPolygon","orient","concaveman","points","concavity","lengthThreshold","Math","max","undefined","hull","left","top","right","bottom","i","length","p","cull","filtered","slice","push","sort","compareByX","lower","cross","pop","upper","ii","concat","convexHull","fastConvexHull","tree","toBBox","a","minX","minY","maxX","maxY","compareMinX","b","compareMinY","load","last","queue","remove","insertNode","segTree","insert","updateBBox","sqConcavity","sqLenThreshold","node","shift","next","sqLen","getSqDist","maxSqLen","findCandidate","prev","min","concave","c","d","maxDist","compareDist","data","children","child","dist","leaf","sqSegDist","sqSegBoxDist","peek","item","d0","d1","noIntersections","bbox","inside","sqSegSegDist","d2","d3","d4","p1","q1","p2","q2","edges","search","p3","dx","dy","x","y","t","x0","y0","x1","y1","x2","y2","x3","y3","sc","sN","tc","tN","ux","uy","vx","vy","wx","wy","e","D","sD","tD","default","module","exports","point","vs","start","end","len","j","xi","yi","xj","yj","pointInPolygonFlat","pointInPolygonNested","Array","isArray","nested","flat","lineInt","l1","l2","precision","a1","b1","c1","a2","b2","c2","det","scalar_eq","lineSegmentsIntersect","da","db","s","triangleArea","isLeft","isLeftOn","isRight","isRightOn","decomp","polygon","polygonGetCutEdges","polygonSlice","quickDecomp","polygonQuickDecomp","result","reflexVertices","steinerPoints","delta","maxlevel","level","upperInt","lowerInt","upperDist","lowerDist","closestDist","upperIndex","lowerIndex","closestIndex","lowerPoly","upperPoly","poly","v","console","warn","polygonIsReflex","Number","MAX_VALUE","polygonAt","getIntersectionPoint","sqdist","polygonAppend","polygonCanSee2","isSimple","path","removeCollinearPoints","num","collinear","splice","removeDuplicatePoints","pi","points_eq","makeCCW","br","tmp","N","polygonReverse","tmpPoint1","tmpPoint2","thresholdAngle","ab","bc","dot","magA","sqrt","magB","acos","from","to","tmpLine1","tmpLine2","polygonCanSee","polygonCopy","targetPoly","polygonClear","k","tmp1","tmp2","tmpPoly","nDiags","cutEdges","polys","cutEdge","indexOf","abs","r","h","n","o","l","log","f","exp","u","floor","this","_maxEntries","_minEntries","ceil","clear","m","height","prototype","all","_all","collides","_build","_splitRoot","_insert","_condense","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","Float64Array","orient2d","_","w","A","F","O","P","g","q","z","B","C","E","G","H","I","J","K","L","Q","orient2dfast","Object","defineProperty","value","TinyQueue","constructor","compare","defaultCompare","_down","_up","pos","parent","current","halfLength","best","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","definition","key","enumerable","get","obj","prop","hasOwnProperty","Symbol","toStringTag","StatusEnum","freeze","POINT_FREE_RED","POINT_FREE_BLUE","POINT_FREE","POINT_STARTING","POINT_IN_PATH","POINT_OWNED_BY_RED","POINT_OWNED_BY_BLUE","msg","LocalError","args","str","error","pnpoly2","pathPoints","npol","pj","sortPointsClockwise","center","reduce","acc","map","angle","atan2","PI","SvgVml","svgNS","svgAntialias","documentCreateElementNS_SVG","documentCreateElementNS_Element","svgAvailable","cont","mathSVGPoint","self","document","createElementNS","some_cont","contextElement","bind","elemeName","Error","attributes","Map","setAttributeNS","_nullish","val","set","appendChild","removeChild","index","SVGCircleElement","setAttribute","getAttribute","removeAttribute","delete","SVGLineElement","SVGPolylineElement","move","radius","GetStrokeColor","SetStrokeColor","col","GetPosition","parseInt","GetFillColor","SetFillColor","GetStatus","StringToStatusEnum","SetStatus","iStatus","saveOldPoint","old_status","StatusEnumToString","RevertOldStatus","GetZIndex","SetZIndex","Hide","Show","strokeWeight","sw","Serialize","Status","Color","RGBcolor","round","SetColor","color","strokeWidth","AppendPoints","diffX","diffY","pts_str","pts","split","array","Set","size","arr","last_x","last_y","x_diff","y_diff","RemoveLastPoint","newpts","replace","ContainsPoint","regexstr","RegExp","match","GetPointsString","GetPointsArray","pt","SetPoints","sPoints","GetIsClosed","GetLength","SetWidthAndColor","GetID","SetID","iID","iId","PointsAsString","CreateSVGVML","iWidth","iHeight","iGridWidth","iGridHeight","antialias","createSVGPoint","CreateLine","linecap","CreatePolyline","width","CreateOval","diam","RemoveOval","oval","RemovePolyline","polyline","DeserializeOval","packed","DeserializePolyline","static","enumVal","keys","enumStr","toUpperCase","ToCursorPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","GraphAI","pointStore","m_iGridWidth","m_iGridHeight","m_Points","async","freePointStatus","cpufillCol","cpuFillColor","graph_points","graph_edges","isPointOKForPath","freePointStatusArr","status","includes","addPointsAndEdgesToGraph","to_x","to_y","has","edge","adjacents","find","values","vertices","lines","line","graph","COLOR_BLUE","sHumanColor","cycles","mark","par","dfs_cycle","cyclenumber","cur","vertex","adj","printCycles","mark_e","found_c","filter","free_human_player_points","IsPointOutsideAllPaths","cycl","cw_sorted_verts","vind","addEventListener","params","svgVml","boardSize","operation","paths","pa","forEach","ai","state","BuildGraph","visuals","postMessage","convex_hull","colorBlue","MarkAllCycles","colorRed"],"sourceRoot":""}