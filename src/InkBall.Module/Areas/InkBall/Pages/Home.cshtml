@page
@inject Microsoft.Extensions.Options.IOptions<InkBallOptions> commonUIConfigureOptions
@model HomeModel
@{
    ViewData["Title"] = "Home";

    HtmlHelpers.RenderHeaderSection(this, Url, commonUIConfigureOptions);
}

<p class="h6 inkhome px-3">Welcome <span>@Model.Player?.UserName</span></p>

<div class="alert alert-dismissible fade show inkhome" role="alert">
	<span></span>
	<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

<div class="container inkhome">
	<div class="row" role="group" aria-label="Game menu">
		<form method='post' class="col-sm-12 col-md-4 order-last order-md-first btn-group-vertical m-1 was-validated">
		</form>
		<div class="col-sm-12 col-md-auto m-1">
			<picture aria-label="home screen image">
				<source type="image/webp" srcset="../img/homescreen.webp" />
				<img src="../img/homescreen.jpg" alt="home screen" aria-label="home screen image" class="img-fluid" />
			</picture>
		</div>
	</div>
</div>

<script type='text/javascript'>
"use strict";
	const alert = document.querySelector(".alert.alert-dismissible.inkhome");
	const msg = "@Model.Message";
	if (msg !== "") {
		let addendum;
		if (msg.toLowerCase().indexOf('exception') !== -1)
			addendum = 'danger';
		else if (msg.toLowerCase().indexOf('error') !== -1)
			addendum = 'danger';
		else if (msg.toLowerCase().indexOf('warning') !== -1)
			addendum = 'warning';
		else
			addendum = 'success';

		const statusMessageClass = 'alert-' + addendum;
		alert.classList.add(statusMessageClass);
		const span = alert.querySelector("span");
		span.textContent = msg;
	}
	else
		alert.parentNode.removeChild(alert);


	const userName = document.querySelector("p.inkhome span").textContent;
	const bIsLoggedIn = userName !== '' ? true : false;
    const bIsCurrentGameOk = JSON.parse('@(Model.Game != null ? true : false)'.toLowerCase());

	const form = document.querySelector(".inkhome form");
	let innerForm = '';
	if (bIsLoggedIn)
    {
		if (bIsCurrentGameOk)
		{
			//continue
            innerForm += "<a href='Game' class='btn btn-primary btn-lg rounded-top'>Continue</a>";
		}
		else
		{
			//new game
			innerForm +=
				"<input type='submit' name='action' value='New game' class='btn btn-primary btn-lg rounded-top' />" +
				"<div class='w-100'><select name='GameType' id='GameType' class='form-select' required>" +
					"<option value='' selected='selected'>Choose game type</option>" +
					"<optgroup label='Game types'>" +
						"<option value='0'>First capture wins</option>" +
						"<option value='1'>First 5 captures wins</option>" +
						"<option value='2'>First 5 paths wins</option>" +
						"<option value='3'>Advantage of 5 paths wins</option>" +
					"</optgroup>" +
				"</select>" +
				"<div class='invalid-feedback'>Invalid game type</div></div>" +

				"<div class='w-100'><select name='BoardSize' id='BoardSize' class='form-select' required>" +
					"<option value='' selected='selected'>Choose board size</option>" +
					"<optgroup label='Board sizes'>" +
						"<option value='20'>20 x 26</option>" +
						"<option value='40'>40 x 52</option>" +
						"<option value='64'>64 x 64</option>" +
					"</optgroup>" +
				"</select>" +
				"<div class='invalid-feedback'>Invalid board size</div></div>" +

				"<div class='form-check form-switch w-100'>" +
					"<input type='checkbox' class='form-check-input form-control-input' name='CpuOponent' id='CpuOponent' />" +
					"<label class='form-check-label' for='CpuOponent'>Play against CPU</label>" +
				"</div>";
		}
		const logoutPath = '@commonUIConfigureOptions.Value.LogoutPath';

		innerForm +=
			"<a href='GamesList' class='btn btn-primary'>Games list</a>" +
			"<a href='Highscores' class='btn btn-primary'>Best</a>" +
			"<a href='Rules' class='btn btn-primary'>Game rules</a>" +
			(logoutPath ? "<input type='submit' name='action' value='Logout' class='btn btn-warning rounded-bottom' formnovalidate='formnovalidate' />" : "");
	}
	else
	{
		document.querySelector("p.inkhome").textContent = 'You are not logged in ... or allowed ðŸ˜…';

		//not logged or bad
		const loginPath = '@commonUIConfigureOptions.Value.LoginPath';
		const registerPath = '@commonUIConfigureOptions.Value.RegisterPath';

		innerForm +=
			"<a href='Rules' class='btn btn-primary rounded-top'>Game rules</a>" +
			(loginPath ? "<a href='" + loginPath + "' class='btn btn-primary'>Login</a>" : "") +
			(registerPath ? "<a href='" + registerPath + "' class='btn btn-primary rounded-bottom'>Register</a>" : "");
	}
	form.innerHTML += innerForm;

</script>