"use strict";function hasDuplicates(t){return new Set(t).size!==t.length}function sortPointsClockwise(t){const e=t.reduce(((t,{x:e,y:r})=>(t.x+=e,t.y+=r,t)),{x:0,y:0});e.x/=t.length,e.y/=t.length;return t.map((({x:t,y:r})=>({x:t,y:r,angle:180*Math.atan2(r-e.y,t-e.x)/Math.PI}))).sort(((t,e)=>t.angle-e.angle))}class SvgVml{constructor(){const t="http://www.w3.org/2000/svg";let e,r,s=!1,i=!1;this.cont=null,self&&self.document&&self.document.createElementNS&&(this.cont=document.createElementNS(t,"svg"),s=null!==this.cont.x),s?(e=function(){return this.cont}.bind(this),r=function(e){return document.createElementNS(t,e)}):(e=function(){return{attributes:new Map,children:[],setAttributeNS:function(t,e,r){this.attributes.set(e,r)},appendChild:function(t){this.children.push(t)},removeChild:function(t){const e=this.children.indexOf(t);-1!==e&&this.children.splice(e,1)}}},r=function(){return{attributes:new Map,setAttribute:function(t,e){this.attributes.set(t,e)},getAttribute:function(t){return this.attributes.get(t)},removeAttribute:function(t){this.attributes.delete(t)}}}),this.CreateSVGVML=function(t,r,n,o){return this.cont=e("svg"),r&&this.cont.setAttributeNS(null,"width",r),n&&this.cont.setAttributeNS(null,"height",n),t&&t.appendChild(this.cont),i=o,s?this.cont:null},this.CreateLine=function(t,e,s){const n=r("line");return n.setAttribute("shape-rendering",i?"auto":"optimizeSpeed"),n.setAttribute("stroke-width",Math.round(t)+"px"),e&&n.setAttribute("stroke",e),s&&n.setAttribute("stroke-linecap",s),n.move=function(t,e,r,s){this.setAttribute("x1",t),this.setAttribute("y1",e),this.setAttribute("x2",r),this.setAttribute("y2",s)},n.RGBcolor=function(t,e,r){this.setAttribute("stroke","rgb("+Math.round(t)+","+Math.round(e)+","+Math.round(r)+")")},n.SetColor=function(t){this.setAttribute("stroke",t)},n.strokeWidth=function(t){this.setAttribute("stroke-width",Math.round(t)+"px")},this.cont.appendChild(n),n},this.CreatePolyline=function(t,e,s){const n=r("polyline");return n.setAttribute("shape-rendering",i?"auto":"optimizeSpeed"),n.setAttribute("stroke-width",Math.round(t)),s&&n.setAttribute("stroke",s),n.setAttribute("fill",s),n.setAttribute("fill-opacity","0.1"),e&&n.setAttribute("points",e),n.setAttribute("stroke-linecap","round"),n.setAttribute("stroke-linejoin","round"),this.cont.appendChild(n),n.setAttribute("data-id",0),n.AppendPoints=function(t,e,r,s){const i=this.getAttribute("points"),n=i.split(" ");if(!0===hasDuplicates(n))return!1;let o;if(n.length<=1||2!==(o=n[n.length-1].split(",")).length)return!1;const a=parseInt(o[0]),h=parseInt(o[1]),u=parseInt(t),l=parseInt(e);return Math.abs(a-u)<=r&&Math.abs(h-l)<=s&&(this.setAttribute("points",i+` ${t},${e}`),!0)},n.RemoveLastPoint=function(){const t=this.getAttribute("points").replace(/(\s\d+,\d+)$/,"");return this.setAttribute("points",t),t},n.ContainsPoint=function(t,e){const r=new RegExp(`${t},${e}`,"g");return(this.getAttribute("points").match(r)||[]).length},n.GetPointsString=function(){return this.getAttribute("points")},n.GetPointsArray=function(){return this.getAttribute("points").split(" ").map((function(t){const e=t.split(",");return{x:parseInt(e[0]),y:parseInt(e[1])}}))},n.SetPoints=function(t){this.setAttribute("points",t)},n.GetIsClosed=function(){const t=this.getAttribute("points").split(" ");return t[0]===t[t.length-1]},n.GetLength=function(){return this.getAttribute("points").split(" ").length},n.SetWidthAndColor=function(t,e){this.setAttribute("stroke",e),this.setAttribute("fill",e),this.setAttribute("stroke-width",Math.round(t))},n.GetID=function(){return parseInt(this.getAttribute("data-id"))},n.SetID=function(t){this.setAttribute("data-id",t)},n.GetFillColor=function(){return this.getAttribute("fill")},n.Serialize=function(){return{iId:this.GetID(),Color:this.GetFillColor(),PointsAsString:this.GetPointsString()}},n},this.CreateOval=function(t){const e=r("circle");return e.setAttribute("shape-rendering",i?"auto":"optimizeSpeed"),e.setAttribute("stroke-width",0),e.setAttribute("r",Math.round(t>>1)),e.setAttribute("data-status",-1),e.move=function(t,e,r){this.setAttribute("cx",t),this.setAttribute("cy",e),this.setAttribute("r",Math.round(r))},e.GetStrokeColor=function(){return this.getAttribute("stroke")},e.SetStrokeColor=function(t){this.setAttribute("stroke",t)},e.GetPosition=function(){return{x:this.getAttribute("cx"),y:this.getAttribute("cy")}},e.GetFillColor=function(){return this.getAttribute("fill")},e.SetFillColor=function(t){this.setAttribute("fill",t)},e.GetStatus=function(){return parseInt(this.getAttribute("data-status"))},e.SetStatus=function(t,e=!1){if(e){const e=parseInt(this.getAttribute("data-status"));this.setAttribute("data-status",t),-1!==e&&e!==t&&this.setAttribute("data-old-status",e)}else this.setAttribute("data-status",t)},e.RevertOldStatus=function(){const t=this.getAttribute("data-old-status");return t?(this.removeAttribute("data-old-status"),this.setAttribute("data-status",t),parseInt(t)):-1},e.GetZIndex=function(){return this.getAttribute("z-index")},e.SetZIndex=function(t){this.setAttribute("z-index",t)},e.Hide=function(){this.setAttribute("visibility","hidden")},e.Show=function(){this.setAttribute("visibility","visible")},e.strokeWeight=function(t){this.setAttribute("stroke-width",t)},e.Serialize=function(){const{x:t,y:e}=this.GetPosition();return{x:t,y:e,Status:this.GetStatus(),Color:this.GetFillColor()}},this.cont.appendChild(e),e}}RemoveOval(t){this.cont.removeChild(t)}RemovePolyline(t){this.cont.removeChild(t)}DeserializeOval(t,e=4){const{x:r,y:s,Status:i,Color:n}=t,o=this.CreateOval(4);return o.move(r,s,e),o.SetStrokeColor(n),o.SetFillColor(n),o.SetStatus(i),o}DeserializePolyline(t,e=3){const{iId:r,Color:s,PointsAsString:i}=t,n=this.CreatePolyline(e,i,s);return n.SetID(r),n}}class GameStateStore{constructor(t,e=null,r=null,s=null,i,n,o=""){this.LocalLog=i,this.LocalError=n,t?"indexedDB"in self?t=!0:(this.LocalError("This browser doesn't support IndexedDB"),t=!1):t=!1;const a=class{constructor(){this.store=new Map}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async has(t){return this.store.has(t)}async set(t,e){return this.store.set(t,e)}async get(t){return this.store.get(t)}async values(){return this.store.values()}async count(){return this.store.size}},h=class{constructor(){this.store=[]}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async push(t){return this.store.push(t)}async all(){return this.store}async count(){return this.store.length}},u=class extends a{constructor(t,e,r){super(),this.MainGameStateStore=t,this.GetPoint=t.GetPoint.bind(this.MainGameStateStore),this.StorePoint=t.StorePoint.bind(this.MainGameStateStore),this.GetAllPoints=t.GetAllPoints.bind(this.MainGameStateStore),this.UpdateState=t.UpdateState.bind(this.MainGameStateStore),this.PointCreationCallback=e,this.GetGameStateCallback=r}async PrepareStore(){if(this.PointCreationCallback&&this.GetGameStateCallback){const t=await this.GetAllPoints(),e=this.GetGameStateCallback();for(const r of t){const t=await this.PointCreationCallback(r.x,r.y,r.Status,r.Color),s=r.y*e.iGridWidth+r.x;this.store.set(s,t)}}return!0}async BeginBulkStorage(){await this.MainGameStateStore.BeginBulkStorage(this.MainGameStateStore.DB_POINT_STORE,"readwrite")}async EndBulkStorage(){await this.MainGameStateStore.StoreAllPoints(),await this.MainGameStateStore.EndBulkStorage(this.MainGameStateStore.DB_POINT_STORE)}async has(t){return this.store.has(t)}async set(t,e){const r=this.GetGameStateCallback(),s=e.GetPosition(),i=e.GetFillColor(),n={x:parseInt(s.x)/r.iGridSizeX,y:parseInt(s.y)/r.iGridSizeY,Status:e.GetStatus(),Color:i};return await this.StorePoint(t,n),this.UpdateState&&!0===r.bPointsAndPathsLoaded&&await this.UpdateState(r.iGameID,r),this.store.set(t,e)}async get(t){let e=this.store.get(t);if(!e){const r=await this.GetPoint(t);return r&&this.PointCreationCallback?(e=this.PointCreationCallback(r.x,r.y,r.Status,r.Color),this.store.set(t,e),e):void 0}return e}async values(){let t=this.store.values();return t||(t=await this.GetAllPoints(),t)}},l=class extends h{constructor(t,e,r){super(),this.MainGameStateStore=t,this.GetAllPaths=t.GetAllPaths.bind(this.MainGameStateStore),this.StorePath=t.StorePath.bind(this.MainGameStateStore),this.UpdateState=t.UpdateState.bind(this.MainGameStateStore),this.PathCreationCallback=e,this.GetGameStateCallback=r}async PrepareStore(){if(this.PathCreationCallback){const t=await this.GetAllPaths();for(const e of t){const t=await this.PathCreationCallback(e.PointsAsString,e.Color,e.iId);this.store.push(t)}}return!0}async BeginBulkStorage(){await this.MainGameStateStore.BeginBulkStorage([this.MainGameStateStore.DB_POINT_STORE,this.MainGameStateStore.DB_PATH_STORE],"readwrite")}async EndBulkStorage(){await this.MainGameStateStore.EndBulkStorage([this.MainGameStateStore.DB_POINT_STORE,this.MainGameStateStore.DB_PATH_STORE])}async push(t){const e=t.GetID(),r={iId:e,Color:t.GetFillColor(),PointsAsString:t.GetPointsString()};if(await this.StorePath(e,r),this.UpdateState){const t=this.GetGameStateCallback();!0===t.bPointsAndPathsLoaded&&await this.UpdateState(t.iGameID,t)}return this.store.push(t)}async all(){let t=this.store;return t||(t=await this.GetAllPaths(),t)}};!0===t?(this.DB_NAME="InkballGame",this.DB_POINT_STORE="points",this.DB_PATH_STORE="paths",this.DB_STATE_STORE="state",!o||""===o||o.length<=0?this.DB_VERSION=null:this.DB_VERSION=parseInt(o.split(".").reduce(((t,e)=>(e=parseInt(e),10*t+(isNaN(e)?0:e))),0))-1010+4,this.g_DB,this.PointStore=new u(this,e,s),this.PathStore=new l(this,r,s)):(this.PointStore=new a,this.PathStore=new h)}GetPointStore(){return this.PointStore}GetPathStore(){return this.PathStore}async OpenDb(){return this.LocalLog("OpenDb ..."),new Promise(((t,e)=>{let r;r=null!==this.DB_VERSION?indexedDB.open(this.DB_NAME,this.DB_VERSION):indexedDB.open(this.DB_NAME),r.onsuccess=function(e){this.g_DB=e.currentTarget.result,this.LocalLog("OpenDb DONE"),t(e.currentTarget.result)}.bind(this),r.onerror=function(t){this.LocalError("OpenDb:",t.target.errorCode||t.target.error),e()},r.onupgradeneeded=function(t){this.LocalLog(`OpenDb.onupgradeneeded(version: ${this.DB_VERSION})`);const e=Array.from(t.currentTarget.result.objectStoreNames);e.includes(this.DB_POINT_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_POINT_STORE),e.includes(this.DB_PATH_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_PATH_STORE),e.includes(this.DB_STATE_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_STATE_STORE),t.currentTarget.result.createObjectStore(this.DB_POINT_STORE,{autoIncrement:!1}),t.currentTarget.result.createObjectStore(this.DB_PATH_STORE,{autoIncrement:!1}),t.currentTarget.result.createObjectStore(this.DB_STATE_STORE,{autoIncrement:!1})}.bind(this)}))}GetObjectStore(t,e){if(this.bulkStores&&this.bulkStores.has(t))return this.bulkStores.get(t);return this.g_DB.transaction(t,e).objectStore(t)}async ClearObjectStore(t){return new Promise(((e,r)=>{const s=this.GetObjectStore(t,"readwrite").clear();s.onsuccess=function(){e()},s.onerror=function(t){this.LocalError("clearObjectStore:",t.target.errorCode),r()}}))}async GetPoint(t){return new Promise(((e,r)=>{const s=this.GetObjectStore(this.DB_POINT_STORE,"readonly").get(t);s.onerror=function(t){r(new Error("GetPoint => "+t))},s.onsuccess=function(t){e(t.target.result)}}))}async GetAllPoints(){return new Promise(((t,e)=>{const r=this.GetObjectStore(this.DB_POINT_STORE,"readonly"),s=[],i=r.openCursor();i.onsuccess=function(e){const r=e.target.result;r?(s.push(r.value),r.continue()):t(s)},i.onerror=function(t){e(new Error("GetAllPoints => "+t))}}))}async GetState(t){return new Promise(((e,r)=>{const s=this.GetObjectStore(this.DB_STATE_STORE,"readonly").get(t);s.onerror=function(t){r(new Error("GetState => "+t))},s.onsuccess=function(t){e(t.target.result)}}))}async GetPath(t){return new Promise(((e,r)=>{const s=this.GetObjectStore(this.DB_PATH_STORE,"readonly").get(t);s.onerror=function(t){r(new Error("GetPath => "+t))},s.onsuccess=function(t){e(t.target.result)}}))}async GetAllPaths(){return new Promise(((t,e)=>{const r=this.GetObjectStore(this.DB_PATH_STORE,"readonly"),s=[],i=r.openCursor();i.onsuccess=function(e){const r=e.target.result;r?(s.push(r.value),r.continue()):t(s)},i.onerror=function(t){e(new Error("GetAllPaths => "+t))}}))}async StorePoint(t,e){return this.bulkStores&&this.bulkStores.has(this.DB_POINT_STORE)?(this.bulkBuffer||(this.bulkBuffer=new Map),this.bulkBuffer.set(t,e),Promise.resolve()):new Promise(((r,s)=>{const i=this.GetObjectStore(this.DB_POINT_STORE,"readwrite");let n;try{n=i.add(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}n.onsuccess=function(){r()},n.onerror=function(){this.LocalError("StorePoint error",this.error),s()}}))}async StoreAllPoints(t){return t||(t=this.bulkBuffer),t&&this.bulkStores?new Promise(((e,r)=>{const s=this.GetObjectStore(this.DB_POINT_STORE,"readwrite");try{t.forEach((function(t,e){s.add(t,e)})),this.bulkBuffer=null,e()}catch(t){this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),r(t)}})):Promise.reject()}async StoreState(t,e){return new Promise(((r,s)=>{const i=this.GetObjectStore(this.DB_STATE_STORE,"readwrite");let n;try{n=i.add(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}n.onsuccess=function(){r()},n.onerror=function(){this.LocalError("StoreState error",this.error),s()}}))}async UpdateState(t,e){return new Promise(((r,s)=>{const i=this.GetObjectStore(this.DB_STATE_STORE,"readwrite");let n;try{n=i.put(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}n.onsuccess=function(){r()},n.onerror=function(){this.LocalError("UpdateState error",this.error),s()}}))}async StorePath(t,e){return new Promise(((r,s)=>{const i=this.GetObjectStore(this.DB_PATH_STORE,"readwrite");let n;try{n=i.add(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}n.onsuccess=function(){r()},n.onerror=function(){this.LocalError("StorePath error",this.error),s()}}))}async PrepareStore(){if(!this.PointStore.GetAllPoints)return!1;if(this.g_DB)return!1;await this.OpenDb();const t=this.PointStore.GetGameStateCallback(),e=await this.GetState(t.iGameID);if(!e)return await Promise.all([this.ClearObjectStore(this.DB_POINT_STORE),this.ClearObjectStore(this.DB_PATH_STORE),this.ClearObjectStore(this.DB_STATE_STORE)]),await this.StoreState(t.iGameID,t),!1;if(e.sLastMoveGameTimeStamp!==t.sLastMoveGameTimeStamp)return await Promise.all([this.ClearObjectStore(this.DB_POINT_STORE),this.ClearObjectStore(this.DB_PATH_STORE),this.ClearObjectStore(this.DB_STATE_STORE)]),!1;if(!1===t.bPointsAndPathsLoaded)try{return await this.BeginBulkStorage([this.DB_POINT_STORE,this.DB_PATH_STORE],"readonly"),!0===await this.PointStore.PrepareStore()&&!0===await this.PathStore.PrepareStore()||(await Promise.all([this.ClearObjectStore(this.DB_POINT_STORE),this.ClearObjectStore(this.DB_PATH_STORE),this.ClearObjectStore(this.DB_STATE_STORE)]),!1)}finally{await this.EndBulkStorage([this.DB_POINT_STORE,this.DB_PATH_STORE])}}async BeginBulkStorage(t,e){this.bulkStores||(this.bulkStores=new Map);const r=t;if(!this.bulkStores.has(r)){const s=this.g_DB.transaction(t,e);Array.isArray(t)?(this.bulkStores.set(r[0],s.objectStore(t[0])),this.bulkStores.set(r[1],s.objectStore(t[1]))):this.bulkStores.set(r,s.objectStore(t))}}async EndBulkStorage(t){this.bulkStores&&(Array.isArray(t)?(this.bulkStores.delete(t[0]),this.bulkStores.delete(t[1])):this.bulkStores.delete(t),this.bulkStores.size<=0&&(this.bulkStores=null))}}export{SvgVml,hasDuplicates,sortPointsClockwise,GameStateStore};