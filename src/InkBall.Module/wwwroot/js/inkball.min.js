"use strict";const StatusEnum=Object.freeze({POINT_FREE_RED:-3,POINT_FREE_BLUE:-2,POINT_FREE:-1,POINT_STARTING:0,POINT_IN_PATH:1,POINT_OWNED_BY_RED:2,POINT_OWNED_BY_BLUE:3}),CommandKindEnum=Object.freeze({UNKNOWN:-1,PING:0,POINT:1,PATH:2,PLAYER_JOINING:3,PLAYER_SURRENDER:4,WIN:5,POINTS_AND_PATHS:6,USER_SETTINGS:7}),GameTypeEnum=Object.freeze({FIRST_CAPTURE:0,FIRST_5_CAPTURES:1,FIRST_5_PATHS:2,FIRST_5_ADVANTAGE_PATHS:3}),WinStatusEnum=Object.freeze({RED_WINS:0,GREEN_WINS:1,NO_WIN:2,DRAW_WIN:3});class DtoMsg{GetKind(){throw new Error("missing GetKind implementation!")}}class InkBallPointViewModel extends DtoMsg{constructor(t=0,i=0,e=0,s=0,n=0,o=StatusEnum.POINT_FREE,r=0){super(),this.iId=t,this.iGameId=i,this.iPlayerId=e,this.iX=s,this.iY=n,this.Status=o,this.iEnclosingPathId=r}GetKind(){return CommandKindEnum.POINT}static Format(t,i){let e="("+i.iX+","+i.iY+" - ";switch(i.Status){case StatusEnum.POINT_FREE_RED:e+="red";break;case StatusEnum.POINT_FREE_BLUE:e+="blue";break;case StatusEnum.POINT_FREE:e+="";break;case StatusEnum.POINT_STARTING:e+="starting";break;case StatusEnum.POINT_IN_PATH:e+="path";break;case StatusEnum.POINT_OWNED_BY_RED:e+="owned by red";break;case StatusEnum.POINT_OWNED_BY_BLUE:e+="owned by blue";break;default:throw new Error("Bad point type!")}return t+" places "+e+") point"}}class InkBallPathViewModel extends DtoMsg{constructor(t=0,i=0,e=0,s="",n=""){super(),this.iId=t,this.iGameId=i,this.iPlayerId=e,this.PointsAsString=s,this.OwnedPointsAsString=n}GetKind(){return CommandKindEnum.PATH}static Format(t,i){return`${t} places ${`(${i.PointsAsString}) [${i.OwnedPointsAsString}]`} path`}}class PlayerJoiningCommand extends DtoMsg{constructor(t,i,e){super(),this.OtherPlayerId=t,this.OtherPlayerName=i,this.Message=e}GetKind(){return CommandKindEnum.PLAYER_JOINING}static Format(t){return t.Message}}class PlayerSurrenderingCommand extends DtoMsg{constructor(t,i,e){super(),this.OtherPlayerId=t,this.thisOrOtherPlayerSurrenders=i,this.Message=e}GetKind(){return CommandKindEnum.PLAYER_SURRENDER}static Format(t){return t.Message}}class PingCommand extends DtoMsg{constructor(t=""){super(),this.Message=t}GetKind(){return CommandKindEnum.PING}static Format(t,i){return t+" says '"+i.Message+"'"}}class WinCommand extends DtoMsg{constructor(t=WinStatusEnum.NO_WIN,i=0,e="null"){super(),this.Status=t,this.WinningPlayerId=i,this.Message=e}GetKind(){return CommandKindEnum.WIN}static Format(t){let i="";switch(t.Status){case WinStatusEnum.RED_WINS:i="red.";break;case WinStatusEnum.GREEN_WINS:i="green.";break;case WinStatusEnum.NO_WIN:i="no one!";break;case WinStatusEnum.DRAW_WIN:i="draw!"}return"And the winner is... "+i}}class PlayerPointsAndPathsDTO extends DtoMsg{constructor(t=[],i=[]){super(),this.Points=t,this.Paths=i}GetKind(){return CommandKindEnum.POINTS_AND_PATHS}static Deserialize(t){const i='{ "Points": '+t.Points+', "Paths": '+t.Paths+" }";return JSON.parse(i)}}class ApplicationUserSettings extends DtoMsg{constructor(t=!1){super(),this.DesktopNotifications=t}GetKind(){return CommandKindEnum.USER_SETTINGS}static Serialize(t){return JSON.stringify(t)}static Deserialize(t){return JSON.parse(t)}}class CountdownTimer{constructor({countdownSeconds:t=60,labelSelector:i=null,initialStart:e=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.timerID=-1,this.label=null,this.countdownReachedHandler=s,i&&(this.label=document.querySelector(i)),e&&this.Start()}setTimeFunc(){--this.totalSeconds<=0?(this.Stop(),this.countdownReachedHandler&&this.countdownReachedHandler(this.label)):this.label&&(this.label.innerHTML=this.pad(parseInt(this.totalSeconds/60))+":"+this.pad(this.totalSeconds%60))}pad(t){const i=t+"";return i.length<2?"0"+i:i}Start(){this.Stop(),this.timerID=setInterval(this.setTimeFunc.bind(this),1e3)}Stop(){this.timerID>0&&clearInterval(this.timerID),this.label&&(this.label.innerHTML="")}Reset({countdownSeconds:t=60,labelSelector:i=null,initialStart:e=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.label=null,this.countdownReachedHandler=s,i&&(this.label=document.querySelector(i)),e&&this.Start()}}function CountPointsDebug(t){let i="";[{query:"circle:not([z-index])",display:"circles: %s, "},{query:"polyline",display:"lines: %s, "},{query:"circle[fill='#DC143C']",display:"intercepted(P1:%s, "},{query:"circle[fill='#8A2BE2']",display:"P2:%s)"}].forEach(function(t){const e=document.querySelectorAll(t.query);i+=t.display.replace("%s",e.length)}),document.querySelector(t).innerHTML="SVGs by tags: "+i}function LocalLog(t){console.log(t)}function LocalError(t){console.error(t)}class InkBallGame{constructor(t,i,e,s,n,o,r,a=!0,h=!0,l={width:32,height:32},m=!1,u=60,_=125){this.g_iGameID=null,this.g_iPlayerID=null,this.GameType=GameTypeEnum[r],this.iConnErrCount=0,this.iExponentialBackOffMillis=2e3,this.COLOR_RED="red",this.COLOR_BLUE="blue",this.COLOR_OWNED_RED="#DC143C",this.COLOR_OWNED_BLUE="#8A2BE2",this.m_bIsWon=!1,this.m_bPointsAndPathsLoaded=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=_,this.m_Timer=null,this.m_WaitStartTime=null,this.m_iSlowdownLevel=0,this.m_iGridSizeX=0,this.m_iGridSizeY=0,this.m_iGridWidth=0,this.m_iGridHeight=0,this.m_BoardSize=l,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_Screen=null,this.m_Debug=null,this.m_Player2Name=null,this.m_SurrenderButton=null,this.m_sMsgInputSel=null,this.m_sMsgSendButtonSel=null,this.m_CancelPath=null,this.m_StopAndDraw=null,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_bIsPlayingWithRed=a,this.m_bIsPlayerActive=h,this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.m_PointRadius=4,this.m_Line=null,this.m_Lines=[],this.m_Points=new Map,this.m_bViewOnly=m,this.m_MouseCursorOval=null,this.m_ApplicationUserSettings=null,this.m_TimerOpts={countdownSeconds:u,labelSelector:"#debug2",initialStart:!0,countdownReachedHandler:this.CountDownReachedHandler.bind(this)},null!==t&&""!==t&&(this.g_SignalRConnection=(new signalR.HubConnectionBuilder).withUrl(t,{transport:s,accessTokenFactory:o}).withHubProtocol(e).configureLogging(i).build(),this.g_SignalRConnection.serverTimeoutInMilliseconds=n,this.g_SignalRConnection.onclose(async t=>{null!=t&&(LocalError(t),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout(()=>this.Connect(),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5)))}))}async GetPlayerPointsAndPaths(){if(this.m_bPointsAndPathsLoaded)return!1;await this.g_SignalRConnection.invoke("GetPlayerPointsAndPaths",this.m_bViewOnly,this.g_iGameID).then(function(t){const i=PlayerPointsAndPathsDTO.Deserialize(t);return void 0!==i.Points&&this.SetAllPoints(i.Points),void 0!==i.Paths&&this.SetAllPaths2(i.Paths),this.m_bPointsAndPathsLoaded=!0,!0}.bind(this))}async Connect(){try{if(await this.g_SignalRConnection.start(),this.iConnErrCount=0,LocalLog("connected; iConnErrCount = "+this.iConnErrCount),!1===this.m_bViewOnly)if(null===sessionStorage.getItem("ApplicationUserSettings"))await this.g_SignalRConnection.invoke("GetUserSettings").then(function(t){if(LocalLog(t),t){t=ApplicationUserSettings.Deserialize(t);const i=ApplicationUserSettings.Serialize(t);sessionStorage.setItem("ApplicationUserSettings",i)}return t}.bind(this)).then(async function(t){return this.m_ApplicationUserSettings=new ApplicationUserSettings(t.DesktopNotifications),await this.GetPlayerPointsAndPaths()}.bind(this)).then(async function(){});else{const t=sessionStorage.getItem("ApplicationUserSettings"),i=ApplicationUserSettings.Deserialize(t);this.m_ApplicationUserSettings=new ApplicationUserSettings(i.DesktopNotifications)}this.m_bPointsAndPathsLoaded||await this.GetPlayerPointsAndPaths(),null!==this.m_ApplicationUserSettings&&!0===this.m_ApplicationUserSettings.DesktopNotifications&&this.SetupNotifications()}catch(t){LocalError(t+"; iConnErrCount = "+this.iConnErrCount),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout(()=>this.Connect(),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5))}}SetupNotifications(){return window.Notification?"granted"===Notification.permission||void Notification.requestPermission().then(function(t){return"granted"===t||(LocalLog("User blocked notifications."),!1)}).catch(function(t){return LocalError(t),!1}):(LocalLog("Browser does not support notifications."),!1)}NotifyBrowser(t="Hi there!",i="How are you doing?"){return!!document.hidden&&(window.Notification?"granted"===Notification.permission?(new Notification(t,{body:i,icon:"../img/homescreen.webp"}),!0):void Notification.requestPermission().then(function(e){return"granted"===e?(new Notification(t,{body:i,icon:"../img/homescreen.webp"}),!0):(LocalLog("User blocked notifications."),!1)}).catch(function(t){return LocalError(t),!1}):(LocalLog("Browser does not support notifications."),!1))}StartSignalRConnection(t,i,e,s,n,o){null!==this.g_SignalRConnection&&(this.g_iGameID=t,this.g_iPlayerID=i,this.m_sMsgInputSel=o,this.m_sMsgSendButtonSel=n,this.m_bPointsAndPathsLoaded=!e,this.g_SignalRConnection.on("ServerToClientPoint",function(t){const i=this.m_Player2Name.innerHTML;let e=InkBallPointViewModel.Format(i,t);const n=document.createElement("li");n.textContent=e,document.querySelector(s).appendChild(n),this.ReceivedPointProcessing(t),this.NotifyBrowser("New Point",e)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPath",function(t){if(Object.prototype.hasOwnProperty.call(t,"PointsAsString")){let i=t;const e=this.m_Player2Name.innerHTML;let n=InkBallPathViewModel.Format(e,i);const o=document.createElement("li");o.textContent=n,document.querySelector(s).appendChild(o),this.ReceivedPathProcessing(i),this.NotifyBrowser("New Path",n)}else{if(!Object.prototype.hasOwnProperty.call(t,"WinningPlayerId"))throw new Error("ServerToClientPath bad GetKind!");{let i=t,e=WinCommand.Format(i),n=document.createElement("li");n.textContent=e,document.querySelector(s).appendChild(n),this.ReceivedWinProcessing(i),this.NotifyBrowser("We have a winner",e)}}}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerJoin",function(t){let i=PlayerJoiningCommand.Format(t),e=document.createElement("li");e.textContent=i,document.querySelector(s).appendChild(e),null!==this.m_SurrenderButton&&""!==t.OtherPlayerName&&(this.m_Player2Name.innerHTML=t.OtherPlayerName,this.m_SurrenderButton.value="surrender",this.ShowMobileStatus("Your move")),this.NotifyBrowser("Player joininig",i),this.m_bHandlingEvent=!1}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerSurrender",function(t){let i=PlayerSurrenderingCommand.Format(t),e=document.createElement("li");e.textContent=i,document.querySelector(s).appendChild(e),this.m_bHandlingEvent=!1,i=""===i?"Game interrupted!":i,this.NotifyBrowser("Game interruption",i),alert(i),window.location.href="Games"}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerWin",function(t){let i=WinCommand.Format(t),e=document.createElement("li");e.textContent=i,document.querySelector(s).appendChild(e),this.ReceivedWinProcessing(t),this.NotifyBrowser("We have a winner",i)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPing",function(t){const i=this.m_Player2Name.innerHTML;let e=PingCommand.Format(i,t),n=document.createElement("li");n.textContent=e,document.querySelector(s).appendChild(n),this.NotifyBrowser("User Message",e)}.bind(this)),document.querySelector(this.m_sMsgSendButtonSel).addEventListener("click",function(t){t.preventDefault();let i=document.querySelector(this.m_sMsgInputSel).value.trim();if(""===i)return;let e=new PingCommand(i);this.SendAsyncData(e)}.bind(this),!1),document.querySelector(this.m_sMsgInputSel).addEventListener("keyup",function(t){t.preventDefault(),13===t.keyCode&&document.querySelector(this.m_sMsgSendButtonSel).click()}.bind(this),!1),this.Connect())}StopSignalRConnection(){null!==this.g_SignalRConnection&&(this.g_SignalRConnection.stop(),LocalLog("Stopped SignalR connection"))}Debug(...t){let i;switch(t.length){case 1:this.m_Debug.innerHTML=t[0];break;case 2:(i=document.getElementById("debug"+t[1])).innerHTML=t[0];break;default:for(let e=0;e<t.length;e++){const s=t[e];s&&(i=document.getElementById("debug"+e))&&(i.innerHTML=s)}}}DisableSelection(t){void 0!==typeof t.onselectstart?t.onselectstart=function(){return!1}:void 0!==typeof t.style.MozUserSelect?t.style.MozUserSelect="none":t.onmousedown=function(){return!1}}f_clientWidth(){return this.f_filterResults(window.innerWidth?window.innerWidth:0,document.documentElement?document.documentElement.clientWidth:0,document.body?document.body.clientWidth:0)}f_clientHeight(){return this.f_filterResults(window.innerHeight?window.innerHeight:0,document.documentElement?document.documentElement.clientHeight:0,document.body?document.body.clientHeight:0)}f_scrollLeft(){return this.f_filterResults(window.pageXOffset?window.pageXOffset:0,document.documentElement?document.documentElement.scrollLeft:0,document.body?document.body.scrollLeft:0)}f_scrollTop(){return this.f_filterResults(window.pageYOffset?window.pageYOffset:0,document.documentElement?document.documentElement.scrollTop:0,document.body?document.body.scrollTop:0)}f_filterResults(t,i,e){let s=t||0;return i&&(!s||s>i)&&(s=i),e&&(!s||s>e)?e:s}SetPoint(t,i,e){if(this.m_Points.has(i*this.m_iGridWidth+t))return;let s,n=t*this.m_iGridSizeX,o=i*this.m_iGridSizeY,r=$createOval(this.m_PointRadius,"true");switch(r.$move(n,o,this.m_PointRadius),e){case StatusEnum.POINT_FREE_RED:s=this.COLOR_RED,r.$SetStatus(StatusEnum.POINT_FREE);break;case StatusEnum.POINT_FREE_BLUE:s=this.COLOR_BLUE,r.$SetStatus(StatusEnum.POINT_FREE);break;case StatusEnum.POINT_FREE:s=this.m_sDotColor,r.$SetStatus(StatusEnum.POINT_FREE);break;case StatusEnum.POINT_STARTING:s=this.m_sDotColor,r.$SetStatus(StatusEnum.POINT_STARTING);break;case StatusEnum.POINT_IN_PATH:s=this.m_sDotColor,r.$SetStatus(e);break;case StatusEnum.POINT_OWNED_BY_RED:s=this.COLOR_OWNED_RED,r.$SetStatus(e);break;case StatusEnum.POINT_OWNED_BY_BLUE:s=this.COLOR_OWNED_BLUE,r.$SetStatus(e);break;default:alert("bad point")}r.$SetFillColor(s),r.$strokeColor(s),this.m_Points.set(i*this.m_iGridWidth+t,r)}SetAllPoints(t){t.forEach(t=>{if(t[3]===this.g_iPlayerID);else switch(t[2]){case StatusEnum.POINT_FREE:case StatusEnum.POINT_FREE_RED:case StatusEnum.POINT_FREE_BLUE:case StatusEnum.POINT_STARTING:case StatusEnum.POINT_OWNED_BY_RED:case StatusEnum.POINT_OWNED_BY_BLUE:break;case StatusEnum.POINT_IN_PATH:!0===this.m_bIsPlayingWithRed?t[2]=StatusEnum.POINT_FREE_BLUE:t[2]=StatusEnum.POINT_FREE_RED}this.SetPoint(t[0],t[1],t[2])})}SetPath(t,i,e){let s,n,o=t.split(" "),r="",a="",h=null,l=StatusEnum.POINT_STARTING;for(const t of o)h=t.split(","),s=parseInt(h[0]),n=parseInt(h[1]),a+=`${r}${s*=this.m_iGridSizeX},${n*=this.m_iGridSizeY}`,r=" ",null!=(h=this.m_Points.get(n*this.m_iGridWidth+s))&&(h.$SetStatus(l),l=StatusEnum.POINT_IN_PATH);h=o[0].split(","),s=parseInt(h[0]),n=parseInt(h[1]),a=a+r+(s*=this.m_iGridSizeX)+","+(n*=this.m_iGridSizeY),null!=(h=this.m_Points.get(n*this.m_iGridWidth+s))&&h.$SetStatus(l);let m=$createPolyline(3,a,e?this.m_sDotColor:i?this.COLOR_BLUE:this.COLOR_RED);this.m_Lines.push(m)}SetAllPaths(t){t.forEach(t=>{this.SetPath(t[0],this.m_bIsPlayingWithRed,t[1]===this.g_iPlayerID)})}SetAllPaths2(t){t.forEach(t=>{if(t.iGameId!==this.g_iGameID)throw new Error("Bad game from path!");this.SetPath(t.PointsAsString,this.m_bIsPlayingWithRed,t.iPlayerId===this.g_iPlayerID)})}IsPointBelongingToLine(t,i,e){for(const s of t){let t=s.split(","),n=t[0],o=t[1];if(n===i&&o===e)return!0}return!1}pnpoly(t,i,e,s,n){let o,r,a=!1;for(o=0,r=t-1;o<t;r=o++)(e[o]<=n&&n<e[r]||e[r]<=n&&n<e[o])&&s<(i[r]-i[o])*(n-e[o])/(e[r]-e[o])+i[o]&&(a=!a);return a}pnpoly2(t,i,e){let s,n,o=t.length,r=!1;for(s=0,n=o-1;s<o;n=s++){let o=t[s],a=t[n];(o.y<=e&&e<a.y||a.y<=e&&e<o.y)&&i<(a.x-o.x)*(e-o.y)/(a.y-o.y)+o.x&&(r=!r)}return r}SurroundOponentPoints(){let t=this.m_Line.$GetPointsArray(),i=new Set;if(t.slice(0,-1).some(function(t){return i.size===i.add(t.x+"_"+t.y).size})||t[0].x!==t[t.length-1].x||t[0].y!==t[t.length-1].y)return{OwnedPoints:void 0,owned:"",path:"",revertFillColor:void 0,revertStatus:void 0,revertStrokeColor:void 0};let e,s,n="",o="";for(const i of t)e=i.x,s=i.y,null!==e&&null!==s&&(n+=`${o}${e/=this.m_iGridSizeX},${s/=this.m_iGridSizeY}`,o=" ");const r=this.m_sDotColor===this.COLOR_RED?this.COLOR_BLUE:this.COLOR_RED,a=this.m_sDotColor===this.COLOR_RED?StatusEnum.POINT_OWNED_BY_RED:StatusEnum.POINT_OWNED_BY_BLUE,h=this.m_sDotColor===this.COLOR_RED?this.COLOR_OWNED_RED:this.COLOR_OWNED_BLUE;let l="",m=[];o="";for(const i of this.m_Points.values())if(void 0!==i&&i.$GetStatus()===StatusEnum.POINT_FREE&&i.$GetFillColor()===r){const n=i.$GetPosition();e=n.x,s=n.y,!1!==this.pnpoly2(t,e,s)&&(i.$SetStatus(a),i.$SetFillColor(h),i.$strokeColor(h),l+=o+(e/=this.m_iGridSizeX)+","+(s/=this.m_iGridSizeY),m.push(i),o=" ")}return{OwnedPoints:m,owned:l,path:n,revertFillColor:r,revertStatus:StatusEnum.POINT_FREE,revertStrokeColor:this.m_sDotColor===this.COLOR_RED?this.COLOR_OWNED_BLUE:this.COLOR_OWNED_RED}}IsPointOutsideAllPaths(t,i){for(const e of this.m_Lines){let s=e.$GetPointsArray();if(!1!==this.pnpoly2(s,t*this.m_iGridSizeX,i*this.m_iGridSizeY))return!1}return!0}CreateXMLWaitForPlayerRequest(){}CreateXMLPutPointRequest(t,i){return new InkBallPointViewModel(0,this.g_iGameID,this.g_iPlayerID,t,i,this.m_bIsPlayingWithRed?StatusEnum.POINT_FREE_RED:StatusEnum.POINT_FREE_BLUE,0)}CreateXMLPutPathRequest(t){return new InkBallPathViewModel(0,this.g_iGameID,this.g_iPlayerID,t.path,t.owned)}SendAsyncData(t,i){switch(t.GetKind()){case CommandKindEnum.POINT:LocalLog(InkBallPointViewModel.Format("some player",t)),this.m_bHandlingEvent=!0,this.g_SignalRConnection.invoke("ClientToServerPoint",t).then(function(t){this.ReceivedPointProcessing(t)}.bind(this)).catch(function(t){LocalError(t.toString()),void 0!==i&&i()}.bind(this));break;case CommandKindEnum.PATH:LocalLog(InkBallPathViewModel.Format("some player",t)),this.m_bHandlingEvent=!0,this.g_SignalRConnection.invoke("ClientToServerPath",t).then(function(t){if(Object.prototype.hasOwnProperty.call(t,"WinningPlayerId")){let i=t;this.ReceivedWinProcessing(i)}else{if(!Object.prototype.hasOwnProperty.call(t,"PointsAsString"))throw new Error("ClientToServerPath bad GetKind!");{let i=t;this.ReceivedPathProcessing(i)}}}.bind(this)).catch(function(t){LocalError(t.toString()),void 0!==i&&i()}.bind(this));break;case CommandKindEnum.PING:this.g_SignalRConnection.invoke("ClientToServerPing",t).then(function(){document.querySelector(this.m_sMsgInputSel).value="",document.querySelector(this.m_sMsgSendButtonSel).disabled="disabled"}.bind(this)).catch(function(t){LocalError(t.toString())});break;default:LocalError("unknown object")}}CountDownReachedHandler(t){t&&(t.innerHTML=""),this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled",this.m_Timer=null,this.m_bIsPlayerActive=!1}ReceivedPointProcessing(t){let i=t.iX,e=t.iY,s=t.Status;this.SetPoint(i,e,s),this.g_iPlayerID!==t.iPlayerId?(this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&this.OnCancelClick(),this.m_StopAndDraw.disabled="",this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)):(this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_CancelPath.disabled="disabled",this.m_StopAndDraw.disabled="",this.m_StopAndDraw.value="Stop and Draw",this.m_Timer?this.m_Timer.Reset(this.m_TimerOpts):this.m_Timer=new CountdownTimer(this.m_TimerOpts)),this.m_bHandlingEvent=!1}ReceivedPathProcessing(t){if(this.g_iPlayerID!==t.iPlayerId){let i=t.PointsAsString,e=t.OwnedPointsAsString;this.SetPath(i,this.m_sDotColor===this.COLOR_RED,!1);let s=e.split(" "),n=this.m_sDotColor===this.COLOR_RED?StatusEnum.POINT_OWNED_BY_RED:StatusEnum.POINT_OWNED_BY_BLUE,o=this.m_sDotColor===this.COLOR_RED?this.COLOR_OWNED_BLUE:this.COLOR_OWNED_RED;for(const t of s){let i=t.split(","),e=parseInt(i[0]),s=parseInt(i[1]);void 0!==(i=this.m_Points.get(s*this.m_iGridWidth+e))&&(i.$SetStatus(n),i.$SetFillColor(o),i.$strokeColor(o))}this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&this.OnCancelClick(),this.m_StopAndDraw.disabled=""}else{let t=this.m_Line.$GetPointsString(),i=0,e=t[i],s=t[i+1];e/=this.m_iGridSizeX,s/=this.m_iGridSizeY;let n=this.m_Points.get(s*this.m_iGridWidth+e);void 0!==n&&n.$SetStatus(StatusEnum.POINT_IN_PATH),this.m_Lines.push(this.m_Line),this.m_iLastX=this.m_iLastY=-1,this.m_Line=null,this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled"}this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_bHandlingEvent=!1,this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)}ReceivedWinProcessing(t){this.ShowMobileStatus("Win situation"),this.m_bHandlingEvent=!1;let i=WinCommand.Format(t);((t.Status===WinStatusEnum.RED_WINS||t.Status===WinStatusEnum.GREEN_WINS)&&t.WinningPlayerId>0||t.Status===WinStatusEnum.DRAW_WIN)&&(alert(""===i?"Game won!":i),window.location.href="Games")}Check4Win(t,i,e,s){let n,o,r;switch(this.GameType){case GameTypeEnum.FIRST_CAPTURE:return(n=t).length>0?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:(n=i).length>0?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:WinStatusEnum.NO_WIN;case GameTypeEnum.FIRST_5_CAPTURES:return r=0,(o=s).forEach(t=>{if(null!==t.iEnclosingPathId&&++r,r>=5)return this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS}),r=0,(o=e).forEach(t=>{if(null!==t.iEnclosingPathId&&++r,r>=5)return this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS}),WinStatusEnum.NO_WIN;case GameTypeEnum.FIRST_5_PATHS:return(n=t).length>=5?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:(n=i).length>=5?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:WinStatusEnum.NO_WIN;case GameTypeEnum.FIRST_5_ADVANTAGE_PATHS:{let e=i,s=t.length-e.length;if(s>=5)return this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS;if(s<=-5)return this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS}return WinStatusEnum.NO_WIN;default:throw new Error("Wrong game type")}}ShowMobileStatus(t=""){"???"===this.m_Player2Name.innerHTML?this.m_bIsPlayerActive?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayerActive?this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_GameStatus.style.color=this.COLOR_RED,null!==t&&""!==t?this.Debug(t,0):this.Debug("",0)}OnMouseMove(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return void(this.iConnErrCount<=0&&!this.m_bIsPlayerActive&&(this.m_Screen.style.cursor="wait"));let i=(t?t.clientX:window.event.clientX)-this.m_Screen.offsetLeft+this.f_scrollLeft()+.5*this.m_iGridSizeX,e=(t?t.clientY:window.event.clientY)-this.m_Screen.offsetTop+this.f_scrollTop()+.5*this.m_iGridSizeY;i=parseInt(i/this.m_iGridSizeX),e=parseInt(e/this.m_iGridSizeY);let s=i*this.m_iGridSizeX,n=e*this.m_iGridSizeY;if(this.m_MouseCursorOval.$move(s,n,this.m_PointRadius),this.m_MouseCursorOval.$Show(),this.Debug(`[${i},${e}]`,1),this.m_bDrawLines){if(null!==this.m_Line?this.m_Screen.style.cursor="move":this.m_Screen.style.cursor="crosshair",!0===this.m_bMouseDown&&(this.m_iLastX!==i||this.m_iLastY!==e)&&Math.abs(parseInt(this.m_iLastX-i))<=1&&Math.abs(parseInt(this.m_iLastY-e))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),o=this.m_Points.get(e*this.m_iGridWidth+i);if(void 0!==t&&void 0!==o&&o.$GetStatus()!==StatusEnum.POINT_IN_PATH&&t.$GetFillColor()===this.m_sDotColor&&o.$GetFillColor()===this.m_sDotColor){if(this.m_Line.$AppendPoints(s+","+n),this.m_CancelPath.disabled=this.m_Line.$GetLength()>=2?"":"disabled",o.$GetStatus()!==StatusEnum.POINT_STARTING)o.$SetStatus(StatusEnum.POINT_IN_PATH);else{let t=this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.SendAsyncData(this.CreateXMLPutPathRequest(t),()=>{this.OnCancelClick(),t.OwnedPoints.forEach(i=>{i.$SetStatus(t.revertStatus),i.$SetFillColor(t.revertFillColor),i.$strokeColor(t.revertStrokeColor)}),this.m_bHandlingEvent=!1})):this.Debug("Wrong path, cancell it or refresh page",0)}this.m_iLastX=i,this.m_iLastY=e}}else{let t=this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),o=this.m_Points.get(e*this.m_iGridWidth+i);if(void 0!==t&&void 0!==o&&t.$GetStatus()!==StatusEnum.POINT_IN_PATH&&o.$GetStatus()!==StatusEnum.POINT_IN_PATH&&t.$GetFillColor()===this.m_sDotColor&&o.$GetFillColor()===this.m_sDotColor){let r=this.m_iLastX*this.m_iGridSizeX,a=this.m_iLastY*this.m_iGridSizeY;this.m_Line=$createPolyline(3,r+","+a+" "+s+","+n,this.m_sDotColor),t.$GetStatus()!==StatusEnum.POINT_IN_PATH&&t.$SetStatus(StatusEnum.POINT_STARTING),o.$GetStatus()!==StatusEnum.POINT_IN_PATH&&o.$SetStatus(StatusEnum.POINT_IN_PATH),this.m_iLastX=i,this.m_iLastY=e}}}else this.m_Screen.style.cursor="crosshair"}OnMouseDown(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return;let i=(t?t.clientX:window.event.clientX)-this.m_Screen.offsetLeft+this.f_scrollLeft()+.5*this.m_iGridSizeX,e=(t?t.clientY:window.event.clientY)-this.m_Screen.offsetTop+this.f_scrollTop()+.5*this.m_iGridSizeY;if(i=this.m_iMouseX=parseInt(i/this.m_iGridSizeX),e=this.m_iMouseY=parseInt(e/this.m_iGridSizeY),this.m_bMouseDown=!0,this.m_bDrawLines){if((this.m_iLastX!==i||this.m_iLastY!==e)&&Math.abs(parseInt(this.m_iLastX-i))<=1&&Math.abs(parseInt(this.m_iLastY-e))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),s=this.m_Points.get(e*this.m_iGridWidth+i);if(void 0!==t&&void 0!==s&&s.$GetStatus()!==StatusEnum.POINT_IN_PATH&&t.$GetFillColor()===this.m_sDotColor&&s.$GetFillColor()===this.m_sDotColor){let t=i*this.m_iGridSizeX,n=e*this.m_iGridSizeY;if(this.m_Line.$AppendPoints(t+","+n),this.m_CancelPath.disabled=this.m_Line.$GetLength()>=2?"":"disabled",s.$GetStatus()!==StatusEnum.POINT_STARTING)s.$SetStatus(StatusEnum.POINT_IN_PATH);else{let t=this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.SendAsyncData(this.CreateXMLPutPathRequest(t),()=>{this.Debug("Wrong path",0),this.OnCancelClick(),t.OwnedPoints.forEach(i=>{i.$SetStatus(t.revertStatus),i.$SetFillColor(t.revertFillColor),i.$strokeColor(t.revertStrokeColor)}),this.m_bMouseDown=!1,this.m_bHandlingEvent=!1})):this.Debug("Wrong path, cancell it or refresh page",0)}this.m_iLastX=i,this.m_iLastY=e}}else{let t=this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),s=this.m_Points.get(e*this.m_iGridWidth+i);if(void 0!==t&&void 0!==s&&t.$GetStatus()!==StatusEnum.POINT_IN_PATH&&s.$GetStatus()!==StatusEnum.POINT_IN_PATH&&t.$GetFillColor()===this.m_sDotColor&&s.$GetFillColor()===this.m_sDotColor){let n=this.m_iLastX*this.m_iGridSizeX,o=this.m_iLastY*this.m_iGridSizeY,r=i*this.m_iGridSizeX,a=e*this.m_iGridSizeY;this.m_Line=$createPolyline(3,n+","+o+" "+r+","+a,this.m_sDotColor),t.$GetStatus()!==StatusEnum.POINT_IN_PATH&&t.$SetStatus(StatusEnum.POINT_STARTING),s.$GetStatus()!==StatusEnum.POINT_IN_PATH&&s.$SetStatus(StatusEnum.POINT_IN_PATH)}this.m_iLastX=i,this.m_iLastY=e}else if(this.m_iLastX<0||this.m_iLastY<0){let t=this.m_Points.get(e*this.m_iGridWidth+i);void 0!==t&&t.$GetStatus()===StatusEnum.POINT_FREE&&t.$GetFillColor()===this.m_sDotColor&&(this.m_iLastX=i,this.m_iLastY=e)}}else{this.m_iLastX=i,this.m_iLastY=e;let t=i,s=e;if(i=t*this.m_iGridSizeX,e=s*this.m_iGridSizeY,void 0!==this.m_Points.get(s*this.m_iGridWidth+t))return void this.Debug("Wrong point - already existing",0);if(!this.IsPointOutsideAllPaths(t,s))return void this.Debug("Wrong point, Point is not outside all paths",0);this.SendAsyncData(this.CreateXMLPutPointRequest(t,s),()=>{this.m_bMouseDown=!1,this.m_bHandlingEvent=!1})}}OnMouseUp(){this.m_bMouseDown=!1}OnMouseLeave(){this.m_MouseCursorOval.$Hide()}OnStopAndDraw(t){if(this.m_Timer)null===this.m_Line&&(this.m_bDrawLines=!0,this.m_iLastX=this.m_iLastY=-1,this.m_Line=null,this.m_bIsPlayerActive=!0,this.m_StopAndDraw.disabled="disabled");else{null!==this.m_Line&&this.OnCancelClick(),this.m_bDrawLines=!this.m_bDrawLines;const i=t.target;this.m_bDrawLines?i.value="Draw dot":i.value="Draw line",this.m_iLastX=this.m_iLastY=-1,this.m_Line=null}}OnCancelClick(){if(this.m_bDrawLines){if(null!==this.m_Line){let t=this.m_Line.$GetPointsArray();this.m_CancelPath.disabled="disabled";for(const i of t){let t=i.x,e=i.y;if(null===t||null===e)continue;t/=this.m_iGridSizeX,e/=this.m_iGridSizeY;let s=this.m_Points.get(e*this.m_iGridWidth+t);void 0!==s&&s.$SetStatus(StatusEnum.POINT_FREE)}$RemovePolyline(this.m_Line),this.m_Line=null}this.m_iLastX=this.m_iLastY=-1,this.m_Timer&&(this.m_StopAndDraw.disabled="")}}PrepareDrawing(t,i,e,s,n,o,r,a=125){if(this.m_bIsWon=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=a,this.m_Timer=null,this.m_WaitStartTime=null,this.m_iSlowdownLevel=0,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.m_Line=null,this.m_Lines=[],this.m_Points=new Map,this.m_Debug=document.getElementById("debug0"),this.m_Player2Name=document.querySelector(i),this.m_GameStatus=document.querySelector(e),this.m_SurrenderButton=document.querySelector(s),this.m_CancelPath=document.querySelector(n),this.m_StopAndDraw=document.querySelector(r),this.m_Screen=document.querySelector(t),!this.m_Screen)return void alert("no board");this.m_iPosX=this.m_Screen.offsetLeft,this.m_iPosY=this.m_Screen.offsetTop,this.m_Screen.style.width=`calc(1em * ${this.m_BoardSize.width})`,this.m_Screen.style.height=`calc(1em * ${this.m_BoardSize.height})`;let h=this.m_Screen.clientWidth,l=this.m_Screen.clientHeight;this.m_iGridSizeX=parseInt(Math.ceil(h/this.m_BoardSize.width)),this.m_iGridSizeY=parseInt(Math.ceil(l/this.m_BoardSize.height)),this.m_iGridWidth=parseInt(Math.ceil(h/this.m_iGridSizeX)),this.m_iGridHeight=parseInt(Math.ceil(l/this.m_iGridSizeY)),$createSVGVML(this.m_Screen,this.m_Screen.style.width,this.m_Screen.style.height,!0),this.DisableSelection(this.m_Screen),this.m_bViewOnly?document.querySelector(o).innerHTML="back to Game List":(null===this.m_MouseCursorOval&&(this.m_MouseCursorOval=$createOval(this.m_PointRadius,"true"),this.m_MouseCursorOval.$SetFillColor(this.m_sDotColor),this.m_MouseCursorOval.$strokeColor(this.m_sDotColor),this.m_MouseCursorOval.$SetZIndex(-1),this.m_MouseCursorOval.$Hide()),this.m_Screen.onmousedown=this.OnMouseDown.bind(this),this.m_Screen.onmousemove=this.OnMouseMove.bind(this),this.m_Screen.onmouseup=this.OnMouseUp.bind(this),this.m_Screen.onmouseleave=this.OnMouseLeave.bind(this),this.m_CancelPath.onclick=this.OnCancelClick.bind(this),this.m_StopAndDraw.onclick=this.OnStopAndDraw.bind(this),document.querySelector(this.m_sMsgInputSel).disabled="",this.m_SurrenderButton.disabled="","???"===this.m_Player2Name.innerHTML?(this.ShowMobileStatus("Waiting for other player to connect"),this.m_Screen.style.cursor="wait"):(this.m_SurrenderButton.value="surrender",this.m_bIsPlayerActive?(this.ShowMobileStatus("Your move"),this.m_Screen.style.cursor="crosshair",this.m_StopAndDraw.disabled=""):(this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait"),this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line"))}}