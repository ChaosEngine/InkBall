"use strict";let $createOval,$createPolyline,$RemovePolyline,$createSVGVML,$createLine,hasDuplicates,sortPointsClockwise,concavemanBundle;const StatusEnum=Object.freeze({POINT_FREE_RED:-3,POINT_FREE_BLUE:-2,POINT_FREE:-1,POINT_STARTING:0,POINT_IN_PATH:1,POINT_OWNED_BY_RED:2,POINT_OWNED_BY_BLUE:3}),CommandKindEnum=Object.freeze({UNKNOWN:-1,PING:0,POINT:1,PATH:2,PLAYER_JOINING:3,PLAYER_SURRENDER:4,WIN:5,POINTS_AND_PATHS:6,USER_SETTINGS:7,STOP_AND_DRAW:8}),GameTypeEnum=Object.freeze({FIRST_CAPTURE:0,FIRST_5_CAPTURES:1,FIRST_5_PATHS:2,FIRST_5_ADVANTAGE_PATHS:3}),WinStatusEnum=Object.freeze({RED_WINS:0,GREEN_WINS:1,NO_WIN:2,DRAW_WIN:3});class DtoMsg{GetKind(){throw new Error("missing GetKind implementation!")}}class InkBallPointViewModel extends DtoMsg{constructor(t=0,e=0,i=0,s=0,n=0,o=StatusEnum.POINT_FREE,r=0){super(),this.iId=t,this.iGameId=e,this.iPlayerId=i,this.iX=s,this.iY=n,this.Status=o,this.iEnclosingPathId=r}GetKind(){return CommandKindEnum.POINT}static Format(t,e){let i="("+e.iX+","+e.iY+" - ";switch(void 0!==e.Status?e.Status:e.status){case StatusEnum.POINT_FREE_RED:i+="red";break;case StatusEnum.POINT_FREE_BLUE:i+="blue";break;case StatusEnum.POINT_FREE:i+="";break;case StatusEnum.POINT_STARTING:i+="starting";break;case StatusEnum.POINT_IN_PATH:i+="path";break;case StatusEnum.POINT_OWNED_BY_RED:i+="owned by red";break;case StatusEnum.POINT_OWNED_BY_BLUE:i+="owned by blue";break;default:throw new Error("Bad point type!")}return t+" places "+i+") point"}}class InkBallPathViewModel extends DtoMsg{constructor(t=0,e=0,i=0,s="",n=""){super(),this.iId=t,this.iGameId=e,this.iPlayerId=i,this.PointsAsString=s,this.OwnedPointsAsString=n}GetKind(){return CommandKindEnum.PATH}static Format(t,e){return`${t} places ${`(${e.PointsAsString||e.pointsAsString}) [${e.OwnedPointsAsString||e.ownedPointsAsString}]`} path`}}class PlayerJoiningCommand extends DtoMsg{constructor(t,e,i){super(),this.OtherPlayerId=t,this.OtherPlayerName=e,this.Message=i}GetKind(){return CommandKindEnum.PLAYER_JOINING}static Format(t){return t.Message||t.message}}class PlayerSurrenderingCommand extends DtoMsg{constructor(t,e,i){super(),this.OtherPlayerId=t,this.thisOrOtherPlayerSurrenders=e,this.Message=i}GetKind(){return CommandKindEnum.PLAYER_SURRENDER}static Format(t){return t.Message||t.message}}class PingCommand extends DtoMsg{constructor(t=""){super(),this.Message=t}GetKind(){return CommandKindEnum.PING}static Format(t,e){return t+" says '"+(e.Message||e.message)+"'"}}class WinCommand extends DtoMsg{constructor(t=WinStatusEnum.NO_WIN,e=0,i="null"){super(),this.Status=t,this.WinningPlayerId=e,this.Message=i}GetKind(){return CommandKindEnum.WIN}static Format(t){let e="";switch(void 0!==t.Status?t.Status:t.status){case WinStatusEnum.RED_WINS:e="red.";break;case WinStatusEnum.GREEN_WINS:e="blue.";break;case WinStatusEnum.NO_WIN:e="no one!";break;case WinStatusEnum.DRAW_WIN:e="draw!"}return"And the winner is... "+e}}class StopAndDrawCommand extends DtoMsg{constructor(){super()}GetKind(){return CommandKindEnum.STOP_AND_DRAW}static Format(t){return"User "+t+" started to draw path"}}class PlayerPointsAndPathsDTO extends DtoMsg{constructor(t=[],e=[]){super(),this.Points=t,this.Paths=e}GetKind(){return CommandKindEnum.POINTS_AND_PATHS}static Deserialize(t){const e=`{ "Points": ${t.Points||t.points}, "Paths": ${t.Paths||t.paths} }`;return JSON.parse(e)}}class ApplicationUserSettings extends DtoMsg{constructor(t=!1){super(),this.DesktopNotifications=t}GetKind(){return CommandKindEnum.USER_SETTINGS}static Serialize(t){return JSON.stringify(t)}static Deserialize(t){return JSON.parse(t)}}class CountdownTimer{constructor({countdownSeconds:t=60,labelSelector:e=null,initialStart:i=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.timerID=-1,this.label=null,this.countdownReachedHandler=s,e&&(this.label=document.querySelector(e)),i&&this.Start()}setTimeFunc(){--this.totalSeconds<=0?(this.Stop(),this.countdownReachedHandler&&this.countdownReachedHandler(this.label)):this.label&&(this.label.innerHTML=this.pad(parseInt(this.totalSeconds/60))+":"+this.pad(this.totalSeconds%60))}pad(t){const e=t+"";return e.length<2?"0"+e:e}Start(){this.Stop(),this.timerID=setInterval(this.setTimeFunc.bind(this),1e3)}Stop(){this.timerID>0&&clearInterval(this.timerID),this.label&&(this.label.innerHTML="")}Reset({countdownSeconds:t=60,labelSelector:e=null,initialStart:i=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.label=null,this.countdownReachedHandler=s,e&&(this.label=document.querySelector(e)),i&&this.Start()}}class GameStateStore{constructor(t=!0,e,i,s){this.DB_NAME="InkballGame",this.DB_POINT_STORE="points",this.DB_PATH_STORE="paths",this.DB_STATE_STORE="state",this.DB_VERSION=3,this.g_DB,t?"indexedDB"in window?t=!0:(LocalLog("This browser doesn't support IndexedDB"),t=!1):t=!1;const n=class{constructor(){this.store=new Map}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async has(t){return this.store.has(t)}async set(t,e){return this.store.set(t,e)}async get(t){return this.store.get(t)}async values(){return this.store.values()}},o=class{constructor(){this.store=[]}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async push(t){return this.store.push(t)}async all(){return this.store}},r=class extends n{constructor(t,e,i){super(),this.MainGameStateStore=t,this.GetPoint=t.GetPoint.bind(this.MainGameStateStore),this.StorePoint=t.StorePoint.bind(this.MainGameStateStore),this.GetAllPoints=t.GetAllPoints.bind(this.MainGameStateStore),this.UpdateState=t.UpdateState.bind(this.MainGameStateStore),this.PointCreationCallback=e,this.GetGameStateCallback=i}async PrepareStore(){if(this.PointCreationCallback&&this.GetGameStateCallback){const t=await this.GetAllPoints(),e=this.GetGameStateCallback();for(const i of t){const t=await this.PointCreationCallback(i.x,i.y,i.Status,i.Color),s=i.y*e.iGridWidth+i.x;this.store.set(s,t)}return!0}}async BeginBulkStorage(){await this.MainGameStateStore.BeginBulkStorage(this.MainGameStateStore.DB_POINT_STORE,"readwrite")}async EndBulkStorage(){await this.MainGameStateStore.StoreAllPoints(),await this.MainGameStateStore.EndBulkStorage(this.MainGameStateStore.DB_POINT_STORE)}async has(t){return this.store.has(t)}async set(t,e){const i=this.GetGameStateCallback(),s=e.$GetPosition(),n=e.$GetFillColor(),o={x:parseInt(s.x)/i.iGridSizeX,y:parseInt(s.y)/i.iGridSizeY,Status:e.$GetStatus(),Color:n};return await this.StorePoint(t,o),this.UpdateState&&!0===i.bPointsAndPathsLoaded&&await this.UpdateState(i.iGameID,i),this.store.set(t,e)}async get(t){let e=this.store.get(t);if(!e){const i=await this.GetPoint(t);return i&&this.PointCreationCallback?(e=this.PointCreationCallback(i.x,i.y,i.Status,i.Color),this.store.set(t,e),e):void 0}return e}async values(){let t=this.store.values();return t||(t=await this.GetAllPoints(),t)}},a=class extends o{constructor(t,e,i){super(),this.MainGameStateStore=t,this.GetAllPaths=t.GetAllPaths.bind(this.MainGameStateStore),this.StorePath=t.StorePath.bind(this.MainGameStateStore),this.UpdateState=t.UpdateState.bind(this.MainGameStateStore),this.PathCreationCallback=e,this.GetGameStateCallback=i}async PrepareStore(){if(this.PathCreationCallback){const t=await this.GetAllPaths();for(const e of t){const t=await this.PathCreationCallback(e.PointsAsString,e.Color,e.iId);this.store.push(t)}}return!0}async BeginBulkStorage(){await this.MainGameStateStore.BeginBulkStorage([this.MainGameStateStore.DB_POINT_STORE,this.MainGameStateStore.DB_PATH_STORE],"readwrite")}async EndBulkStorage(){await this.MainGameStateStore.EndBulkStorage([this.MainGameStateStore.DB_POINT_STORE,this.MainGameStateStore.DB_PATH_STORE])}async push(t){const e=t.$GetID(),i={iId:e,Color:t.$GetFillColor(),PointsAsString:t.$GetPointsString()};if(await this.StorePath(e,i),this.UpdateState){const t=this.GetGameStateCallback();!0===t.bPointsAndPathsLoaded&&await this.UpdateState(t.iGameID,t)}return this.store.push(t)}async all(){let t=this.store;return t||(t=await this.GetAllPaths(),t)}};!0===t?(this.PointStore=new r(this,e,s),this.PathStore=new a(this,i,s)):(this.PointStore=new n,this.PathStore=new o)}GetPointStore(){return this.PointStore}GetPathStore(){return this.PathStore}async OpenDb(){return LocalLog("OpenDb ..."),new Promise(((t,e)=>{const i=indexedDB.open(this.DB_NAME,this.DB_VERSION);i.onsuccess=function(e){this.g_DB=e.currentTarget.result,LocalLog("OpenDb DONE"),t(e.currentTarget.result)}.bind(this),i.onerror=function(t){LocalError("OpenDb:",t.target.errorCode),e()},i.onupgradeneeded=function(t){LocalLog("OpenDb.onupgradeneeded");const e=Array.from(t.currentTarget.result.objectStoreNames);e.includes(this.DB_POINT_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_POINT_STORE),e.includes(this.DB_PATH_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_PATH_STORE),e.includes(this.DB_STATE_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_STATE_STORE),t.currentTarget.result.createObjectStore(this.DB_POINT_STORE,{autoIncrement:!1}),t.currentTarget.result.createObjectStore(this.DB_PATH_STORE,{autoIncrement:!1}),t.currentTarget.result.createObjectStore(this.DB_STATE_STORE,{autoIncrement:!1})}.bind(this)}))}GetObjectStore(t,e){if(this.bulkStores&&this.bulkStores.has(t))return this.bulkStores.get(t);return this.g_DB.transaction(t,e).objectStore(t)}async ClearObjectStore(t){return new Promise(((e,i)=>{const s=this.GetObjectStore(t,"readwrite").clear();s.onsuccess=function(){e()},s.onerror=function(t){LocalError("clearObjectStore:",t.target.errorCode),i()}}))}async GetPoint(t){return new Promise(((e,i)=>{const s=this.GetObjectStore(this.DB_POINT_STORE,"readonly").get(t);s.onerror=function(t){i(new Error("GetPoint => "+t))},s.onsuccess=function(t){e(t.target.result)}}))}async GetAllPoints(){return new Promise(((t,e)=>{const i=this.GetObjectStore(this.DB_POINT_STORE,"readonly"),s=[],n=i.openCursor();n.onsuccess=function(e){const i=e.target.result;i?(s.push(i.value),i.continue()):t(s)},n.onerror=function(t){e(new Error("GetAllPoints => "+t))}}))}async GetState(t){return new Promise(((e,i)=>{const s=this.GetObjectStore(this.DB_STATE_STORE,"readonly").get(t);s.onerror=function(t){i(new Error("GetState => "+t))},s.onsuccess=function(t){e(t.target.result)}}))}async GetPath(t){return new Promise(((e,i)=>{const s=this.GetObjectStore(this.DB_PATH_STORE,"readonly").get(t);s.onerror=function(t){i(new Error("GetPath => "+t))},s.onsuccess=function(t){e(t.target.result)}}))}async GetAllPaths(){return new Promise(((t,e)=>{const i=this.GetObjectStore(this.DB_PATH_STORE,"readonly"),s=[],n=i.openCursor();n.onsuccess=function(e){const i=e.target.result;i?(s.push(i.value),i.continue()):t(s)},n.onerror=function(t){e(new Error("GetAllPaths => "+t))}}))}async StorePoint(t,e){return this.bulkStores&&this.bulkStores.has(this.DB_POINT_STORE)?(this.bulkBuffer||(this.bulkBuffer=new Map),this.bulkBuffer.set(t,e),Promise.resolve()):new Promise(((i,s)=>{const n=this.GetObjectStore(this.DB_POINT_STORE,"readwrite");let o;try{o=n.add(e,t)}catch(t){throw"DataCloneError"===t.name&&LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}o.onsuccess=function(){i()},o.onerror=function(){LocalError("StorePoint error",this.error),s()}}))}async StoreAllPoints(t){return t||(t=this.bulkBuffer),t&&this.bulkStores?new Promise(((e,i)=>{const s=this.GetObjectStore(this.DB_POINT_STORE,"readwrite");try{t.forEach((function(t,e){s.add(t,e)})),this.bulkBuffer=null,e()}catch(t){LocalError("This engine doesn't know how to clone a Blob, use Firefox"),i(t)}})):Promise.reject()}async StoreState(t,e){return new Promise(((i,s)=>{const n=this.GetObjectStore(this.DB_STATE_STORE,"readwrite");let o;try{o=n.add(e,t)}catch(t){throw"DataCloneError"===t.name&&LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}o.onsuccess=function(){i()},o.onerror=function(){LocalError("StoreState error",this.error),s()}}))}async UpdateState(t,e){return new Promise(((i,s)=>{const n=this.GetObjectStore(this.DB_STATE_STORE,"readwrite");let o;try{o=n.put(e,t)}catch(t){throw"DataCloneError"===t.name&&LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}o.onsuccess=function(){i()},o.onerror=function(){LocalError("UpdateState error",this.error),s()}}))}async StorePath(t,e){return new Promise(((i,s)=>{const n=this.GetObjectStore(this.DB_PATH_STORE,"readwrite");let o;try{o=n.add(e,t)}catch(t){throw"DataCloneError"===t.name&&LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}o.onsuccess=function(){i()},o.onerror=function(){LocalError("StorePath error",this.error),s()}}))}async PrepareStore(){if(!this.PointStore.GetAllPoints)return!1;if(this.g_DB)return!1;await this.OpenDb();const t=this.PointStore.GetGameStateCallback(),e=await this.GetState(t.iGameID);if(!e)return await Promise.all([this.ClearObjectStore(this.DB_POINT_STORE),this.ClearObjectStore(this.DB_PATH_STORE),this.ClearObjectStore(this.DB_STATE_STORE)]),await this.StoreState(t.iGameID,t),!1;if(e.sLastMoveGameTimeStamp!==t.sLastMoveGameTimeStamp)return await Promise.all([this.ClearObjectStore(this.DB_POINT_STORE),this.ClearObjectStore(this.DB_PATH_STORE),this.ClearObjectStore(this.DB_STATE_STORE)]),!1;if(!1===t.bPointsAndPathsLoaded)try{return await this.BeginBulkStorage([this.DB_POINT_STORE,this.DB_PATH_STORE],"readonly"),!0===await this.PointStore.PrepareStore()&&!0===await this.PathStore.PrepareStore()||(await Promise.all([this.ClearObjectStore(this.DB_POINT_STORE),this.ClearObjectStore(this.DB_PATH_STORE),this.ClearObjectStore(this.DB_STATE_STORE)]),!1)}finally{await this.EndBulkStorage([this.DB_POINT_STORE,this.DB_PATH_STORE])}}async BeginBulkStorage(t,e){this.bulkStores||(this.bulkStores=new Map);const i=t;if(!this.bulkStores.has(i)){const s=this.g_DB.transaction(t,e);Array.isArray(t)?(this.bulkStores.set(i[0],s.objectStore(t[0])),this.bulkStores.set(i[1],s.objectStore(t[1]))):this.bulkStores.set(i,s.objectStore(t))}}async EndBulkStorage(t){this.bulkStores&&(Array.isArray(t)?(this.bulkStores.delete(t[0]),this.bulkStores.delete(t[1])):this.bulkStores.delete(t),this.bulkStores.size<=0&&(this.bulkStores=null))}}async function importAllModulesAsync(t){let e;e=-1!==Array.prototype.slice.call(document.getElementsByTagName("script")).map((t=>t.src)).find((t=>-1!==t.indexOf("inkball"))).split("/").pop().indexOf("min")?await import("./svgvml.min.js"):await import("./svgvml.js"),$createOval=e.$createOval,$createPolyline=e.$createPolyline,$RemovePolyline=e.$RemovePolyline,$createSVGVML=e.$createSVGVML,$createLine=e.$createLine,hasDuplicates=e.hasDuplicates,sortPointsClockwise=e.sortPointsClockwise,-1===t.iOtherPlayerID&&(e=await import("./concavemanBundle.js"),concavemanBundle=e)}function LocalLog(t){console.log(t)}function LocalError(...t){let e="";for(let i=0;i<t.length;i++){const s=t[i];s&&(e+=s)}console.error(e)}function RandomColor(){return"var(--orange)"}async function Sleep(t){return new Promise((e=>setTimeout(e,t)))}class InkBallGame{constructor(t,e,i,s,n,o,r,a,l,h=!0,c=!0,m=!1,u=60,d=125){this.g_iGameID=t,this.g_iPlayerID=e,this.m_iOtherPlayerId=i,this.m_bIsCPUGame=-1===this.m_iOtherPlayerId,this.GameType=GameTypeEnum[l],this.iConnErrCount=0,this.iExponentialBackOffMillis=2e3,this.COLOR_RED="red",this.COLOR_BLUE="blue",this.COLOR_OWNED_RED="#DC143C",this.COLOR_OWNED_BLUE="#8A2BE2",this.DRAWING_PATH_COLOR="black",this.m_bIsWon=!1,this.m_bPointsAndPathsLoaded=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=d,this.m_Timer=null,this.m_ReconnectTimer=null,this.m_WaitStartTime=null,this.m_TimerOpts={countdownSeconds:u,labelSelector:"#debug2",initialStart:!0,countdownReachedHandler:this.CountDownReachedHandler.bind(this)},this.m_iSlowdownLevel=0,this.m_iGridSizeX=0,this.m_iGridSizeY=0,this.m_iGridWidth=0,this.m_iGridHeight=0,this.m_BoardSize=null,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_Screen=null,this.m_Debug=null,this.m_Player2Name=null,this.m_SurrenderButton=null,this.m_sMsgInputSel=null,this.m_sMsgSendButtonSel=null,this.m_sMsgListSel=null,this.m_CancelPath=null,this.m_StopAndDraw=null,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_bIsPlayingWithRed=h,this.m_bIsPlayerActive=c,this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.m_PointRadius=4,this.m_Line=null,this.m_Lines=null,this.m_Points=null,this.m_bViewOnly=m,this.m_MouseCursorOval=null,this.m_ApplicationUserSettings=null,this.m_sLastMoveGameTimeStamp=null,null!==s&&""!==s&&(this.g_SignalRConnection=(new signalR.HubConnectionBuilder).withUrl(s,{transport:r,accessTokenFactory:function(){return`iGameID=${this.g_iGameID}&iPlayerID=${this.g_iPlayerID}`}.bind(this)}).withHubProtocol(o).configureLogging(n).build(),this.g_SignalRConnection.serverTimeoutInMilliseconds=a,this.g_SignalRConnection.onclose((async t=>{null!=t&&(LocalError(t),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout((()=>this.Connect()),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5)))})))}async GetPlayerPointsAndPaths(){if(!1===this.m_bPointsAndPathsLoaded){const t=await this.g_SignalRConnection.invoke("GetPlayerPointsAndPaths",this.m_bViewOnly,this.g_iGameID),e=PlayerPointsAndPathsDTO.Deserialize(t);return void 0!==e.Points&&await this.SetAllPoints(e.Points),void 0!==e.Paths&&await this.SetAllPaths(e.Paths),this.m_bPointsAndPathsLoaded=!0,!0}return!1}async Connect(){try{if(await this.g_SignalRConnection.start(),this.iConnErrCount=0,LocalLog("connected; iConnErrCount = "+this.iConnErrCount),!1===this.m_bViewOnly)if(null===sessionStorage.getItem("ApplicationUserSettings")){let t=await this.g_SignalRConnection.invoke("GetUserSettings");if(t){LocalLog(t),t=ApplicationUserSettings.Deserialize(t);const e=ApplicationUserSettings.Serialize(t);sessionStorage.setItem("ApplicationUserSettings",e)}this.m_ApplicationUserSettings=new ApplicationUserSettings(t.DesktopNotifications),await this.GetPlayerPointsAndPaths()}else{const t=sessionStorage.getItem("ApplicationUserSettings"),e=ApplicationUserSettings.Deserialize(t);this.m_ApplicationUserSettings=new ApplicationUserSettings(e.DesktopNotifications)}!1===this.m_bPointsAndPathsLoaded&&await this.GetPlayerPointsAndPaths(),null!==this.m_ApplicationUserSettings&&!0===this.m_ApplicationUserSettings.DesktopNotifications&&this.SetupNotifications(),!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()}catch(t){LocalError(t+"; iConnErrCount = "+this.iConnErrCount),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout((()=>this.Connect()),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5))}}SetupNotifications(){return window.Notification?"granted"===Notification.permission||void Notification.requestPermission().then((function(t){return"granted"===t||(LocalLog("User blocked notifications."),!1)})).catch((function(t){return LocalError(t),!1})):(LocalLog("Browser does not support notifications."),!1)}NotifyBrowser(t="Hi there!",e="How are you doing?"){return!!document.hidden&&(window.Notification?"granted"===Notification.permission?(new Notification(t,{body:e,icon:"../img/homescreen.webp"}),!0):void Notification.requestPermission().then((function(i){return"granted"===i?(new Notification(t,{body:e,icon:"../img/homescreen.webp"}),!0):(LocalLog("User blocked notifications."),!1)})).catch((function(t){return LocalError(t),!1})):(LocalLog("Browser does not support notifications."),!1))}async StartSignalRConnection(t){return null===this.g_SignalRConnection?Promise.reject(new Error("signalr conn is null")):(!1===this.m_bPointsAndPathsLoaded&&(this.m_bPointsAndPathsLoaded=!t),this.g_SignalRConnection.on("ServerToClientPoint",async function(t){if(this.g_iPlayerID!==t.iPlayerId){const e=this.m_Player2Name.innerHTML;let i=InkBallPointViewModel.Format(e,t);const s=document.createElement("li");s.textContent=i,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("New Point",i)}await this.ReceivedPointProcessing(t)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPath",function(t){if(Object.prototype.hasOwnProperty.call(t,"PointsAsString")||Object.prototype.hasOwnProperty.call(t,"pointsAsString")){let e=t;if(this.g_iPlayerID!==e.iPlayerId){const t=this.m_Player2Name.innerHTML;let i=InkBallPathViewModel.Format(t,e);const s=document.createElement("li");s.textContent=i,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("New Path",i)}this.ReceivedPathProcessing(e)}else{if(!Object.prototype.hasOwnProperty.call(t,"WinningPlayerId")&&!Object.prototype.hasOwnProperty.call(t,"winningPlayerId"))throw new Error("ServerToClientPath bad GetKind!");{let e=t,i=WinCommand.Format(e),s=document.createElement("li");s.textContent=i,document.querySelector(this.m_sMsgListSel).appendChild(s),this.ReceivedWinProcessing(e),this.NotifyBrowser("We have a winner",i)}}}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerJoin",function(t){const e=t.OtherPlayerId||t.otherPlayerId;this.m_iOtherPlayerId=e;const i=PlayerJoiningCommand.Format(t);let s=document.createElement("li");s.innerHTML=`<strong class="text-primary">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(s),null!==this.m_SurrenderButton&&""!==t.OtherPlayerName&&(this.m_Player2Name.innerHTML=t.OtherPlayerName||t.otherPlayerName,this.m_SurrenderButton.value="surrender",this.ShowMobileStatus("Your move")),this.NotifyBrowser("Player joininig",i),this.m_bHandlingEvent=!1}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerSurrender",function(t){let e=PlayerSurrenderingCommand.Format(t),i=document.createElement("li");i.innerHTML=`<strong class="text-warning">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(i),this.m_bHandlingEvent=!1,e=""===e?"Game interrupted!":e,this.NotifyBrowser("Game interruption",e),alert(e),window.location.href="GamesList"}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerWin",function(t){let e=WinCommand.Format(t),i=document.createElement("li");i.innerHTML=`<strong class="text-warning">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(i),this.ReceivedWinProcessing(t),this.NotifyBrowser("We have a winner",e)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPing",function(t){const e=this.m_Player2Name.innerHTML;let i=PingCommand.Format(e,t),s=document.createElement("li");s.textContent=i,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("User Message",i)}.bind(this)),this.g_SignalRConnection.on("ServerToClientOtherPlayerDisconnected",function(t){const e={countdownSeconds:5,initialStart:!0,countdownReachedHandler:function(){let e=t,i=document.createElement("li");i.innerHTML=`<strong class="text-warning">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(i),this.NotifyBrowser("User disconnected",e),this.m_ReconnectTimer=null}.bind(this)};this.m_ReconnectTimer?this.m_ReconnectTimer.Reset(e):this.m_ReconnectTimer=new CountdownTimer(e)}.bind(this)),this.g_SignalRConnection.on("ServerToClientOtherPlayerConnected",function(t){if(this.m_ReconnectTimer)this.m_ReconnectTimer.Stop(),this.m_ReconnectTimer=null;else{let e=t,i=document.createElement("li");i.innerHTML=`<strong class="text-primary">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(i),this.NotifyBrowser("User disconnected",e),this.m_ReconnectTimer=null}}.bind(this)),this.g_SignalRConnection.on("ServerToClientStopAndDraw",function(t){if(!t)return;const e=this.m_Player2Name.innerHTML;let i=StopAndDrawCommand.Format(e),s=document.createElement("li");s.innerHTML=`<strong class="text-info">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("User "+e+" started drawing new path",i)}.bind(this)),!1===this.m_bIsCPUGame&&(document.querySelector(this.m_sMsgSendButtonSel).addEventListener("click",async function(t){t.preventDefault();let e=document.querySelector(this.m_sMsgInputSel).value.trim();if(""===e)return;let i=new PingCommand(e);await this.SendAsyncData(i)}.bind(this),!1),document.querySelector(this.m_sMsgInputSel).addEventListener("keyup",function(t){t.preventDefault(),13===t.keyCode&&document.querySelector(this.m_sMsgSendButtonSel).click()}.bind(this),!1)),this.Connect())}StopSignalRConnection(){null!==this.g_SignalRConnection&&(this.g_SignalRConnection.stop(),this.m_ReconnectTimer&&this.m_ReconnectTimer.Stop(),this.m_Timer&&this.m_Timer.Stop(),LocalLog("Stopped SignalR connection"))}Debug(...t){switch(t.length){case 1:this.m_Debug.innerHTML=t[0];break;case 2:document.getElementById("debug"+t[1]).innerHTML=t[0];break;default:for(let e=0;e<t.length;e++){const i=t[e];if(i){const t=document.getElementById("debug"+e);t&&(t.innerHTML=i)}}}}DisableSelection(t){void 0!==typeof t.onselectstart?t.onselectstart=function(){return!1}:void 0!==typeof t.style.MozUserSelect?t.style.MozUserSelect="none":t.onmousedown=function(){return!1}}f_clientWidth(){return this.f_filterResults(window.innerWidth?window.innerWidth:0,document.documentElement?document.documentElement.clientWidth:0,document.body?document.body.clientWidth:0)}f_clientHeight(){return this.f_filterResults(window.innerHeight?window.innerHeight:0,document.documentElement?document.documentElement.clientHeight:0,document.body?document.body.clientHeight:0)}f_scrollLeft(){return this.f_filterResults(window.pageXOffset?window.pageXOffset:0,document.documentElement?document.documentElement.scrollLeft:0,document.body?document.body.scrollLeft:0)}f_scrollTop(){return this.f_filterResults(window.pageYOffset?window.pageYOffset:0,document.documentElement?document.documentElement.scrollTop:0,document.body?document.body.scrollTop:0)}f_filterResults(t,e,i){let s=t||0;return e&&(!s||s>e)&&(s=e),i&&(!s||s>i)?i:s}async SetPoint(t,e,i,s){if(await this.m_Points.has(e*this.m_iGridWidth+t))return;const n=t*this.m_iGridSizeX,o=e*this.m_iGridSizeY,r=$createOval(this.m_PointRadius,"true");let a;switch(r.$move(n,o,this.m_PointRadius),i){case StatusEnum.POINT_FREE_RED:a=this.COLOR_RED,r.$SetStatus(i);break;case StatusEnum.POINT_FREE_BLUE:a=this.COLOR_BLUE,r.$SetStatus(i);break;case StatusEnum.POINT_FREE:case StatusEnum.POINT_STARTING:a=this.m_sDotColor,r.$SetStatus(i);break;case StatusEnum.POINT_IN_PATH:a=this.g_iPlayerID===s?!0===this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE:!0===this.m_bIsPlayingWithRed?this.COLOR_BLUE:this.COLOR_RED,r.$SetStatus(i);break;case StatusEnum.POINT_OWNED_BY_RED:a=this.COLOR_OWNED_RED,r.$SetStatus(i);break;case StatusEnum.POINT_OWNED_BY_BLUE:a=this.COLOR_OWNED_BLUE,r.$SetStatus(i);break;default:alert("bad point")}r.$SetFillColor(a),r.$SetStrokeColor(a),await this.m_Points.set(e*this.m_iGridWidth+t,r)}GetGameStateForIndexedDb(){return{iGameID:this.g_iGameID,iPlayerID:this.g_iPlayerID,iOtherPlayerId:this.m_iOtherPlayerId,sLastMoveGameTimeStamp:this.m_sLastMoveGameTimeStamp,bPointsAndPathsLoaded:this.m_bPointsAndPathsLoaded,iGridWidth:this.m_iGridWidth,iGridSizeX:this.m_iGridSizeX,iGridSizeY:this.m_iGridSizeY}}CreateScreenPointFromIndexedDb(t,e,i,s){const n=t*this.m_iGridSizeX,o=e*this.m_iGridSizeY,r=$createOval(this.m_PointRadius,"true");let a;switch(r.$move(n,o,this.m_PointRadius),i){case StatusEnum.POINT_FREE_RED:a=this.COLOR_RED,r.$SetStatus(i);break;case StatusEnum.POINT_FREE_BLUE:a=this.COLOR_BLUE,r.$SetStatus(i);break;case StatusEnum.POINT_FREE:case StatusEnum.POINT_STARTING:a=this.m_sDotColor,r.$SetStatus(i);break;case StatusEnum.POINT_IN_PATH:a=s,r.$SetStatus(i);break;case StatusEnum.POINT_OWNED_BY_RED:a=this.COLOR_OWNED_RED,r.$SetStatus(i);break;case StatusEnum.POINT_OWNED_BY_BLUE:a=this.COLOR_OWNED_BLUE,r.$SetStatus(i);break;default:alert("bad point")}return r.$SetFillColor(a),r.$SetStrokeColor(a),r}async SetAllPoints(t){try{await this.m_Points.BeginBulkStorage();for(const s of t)await this.SetPoint(s[0],s[1],(i=s[2],i-3),(e=s[3],e-1))}finally{await this.m_Points.EndBulkStorage()}var e,i}async SetPath(t,e,i,s=0){const n=t.split(" ");let o,r,a="",l="",h=null,c=StatusEnum.POINT_STARTING;for(const t of n)h=t.split(","),o=parseInt(h[0]),r=parseInt(h[1]),h=await this.m_Points.get(r*this.m_iGridWidth+o),null!=h&&(h.$SetStatus(c),c=StatusEnum.POINT_IN_PATH),o*=this.m_iGridSizeX,r*=this.m_iGridSizeY,l+=`${a}${o},${r}`,a=" ";h=n[0].split(","),o=parseInt(h[0]),r=parseInt(h[1]),h=await this.m_Points.get(r*this.m_iGridWidth+o),null!=h&&h.$SetStatus(c),o*=this.m_iGridSizeX,r*=this.m_iGridSizeY,l+=`${a}${o},${r}`;const m=$createPolyline(3,l,i?this.m_sDotColor:e?this.COLOR_BLUE:this.COLOR_RED);m.$SetID(s),await this.m_Lines.push(m)}async CreateScreenPathFromIndexedDb(t,e,i){const s=t.split(" ");let n,o,r="",a="",l=null,h=StatusEnum.POINT_STARTING;for(const t of s)l=t.split(","),n=parseInt(l[0]),o=parseInt(l[1]),l=await this.m_Points.get(o*this.m_iGridWidth+n),null!=l&&(l.$SetStatus(h),h=StatusEnum.POINT_IN_PATH),a+=`${r}${n},${o}`,r=" ";l=s[0].split(","),n=parseInt(l[0]),o=parseInt(l[1]),l=await this.m_Points.get(o*this.m_iGridWidth+n),null!=l&&l.$SetStatus(h),a+=`${r}${n},${o}`;const c=$createPolyline(3,a,e);return c.$SetID(i),c}async SetAllPaths(t){try{await this.m_Lines.BeginBulkStorage();for(const e of t){if(e.iGameId!==this.g_iGameID)throw new Error("Bad game from path!");await this.SetPath(e.PointsAsString,this.m_bIsPlayingWithRed,e.iPlayerId===this.g_iPlayerID,e.iId)}}finally{await this.m_Lines.EndBulkStorage()}}IsPointBelongingToLine(t,e,i){for(const s of t){const t=s.split(","),n=t[0],o=t[1];if(n===e&&o===i)return!0}return!1}pnpoly(t,e,i,s,n){let o,r,a=!1;for(o=0,r=t-1;o<t;r=o++)(i[o]<=n&&n<i[r]||i[r]<=n&&n<i[o])&&s<(e[r]-e[o])*(n-i[o])/(i[r]-i[o])+e[o]&&(a=!a);return a}pnpoly2(t,e,i){const s=t.length;let n,o,r=!1;for(n=0,o=s-1;n<s;o=n++){const s=t[n],a=t[o];(s.y<=i&&i<a.y||a.y<=i&&i<s.y)&&e<(a.x-s.x)*(i-s.y)/(a.y-s.y)+s.x&&(r=!r)}return r}async SurroundOponentPoints(){const t=this.m_Line.$GetPointsArray();if(hasDuplicates(t.slice(0,-1).map((t=>t.x+"_"+t.y)))||t[0].x!==t[t.length-1].x||t[0].y!==t[t.length-1].y)return{OwnedPoints:void 0,owned:"",path:"",errorDesc:"Points not unique"};let e,i,s;this.m_sDotColor===this.COLOR_RED?(e=this.COLOR_BLUE,i=StatusEnum.POINT_OWNED_BY_RED,s=this.COLOR_OWNED_RED):(e=this.COLOR_RED,i=StatusEnum.POINT_OWNED_BY_BLUE,s=this.COLOR_OWNED_BLUE);let n="",o="",r="",a=[];const l=await this.m_Points.values();for(const n of l)if(void 0!==n&&n.$GetFillColor()===e&&[StatusEnum.POINT_FREE_BLUE,StatusEnum.POINT_FREE_RED].includes(n.$GetStatus())){let{x:e,y:l}=n.$GetPosition();!1!==this.pnpoly2(t,e,l)&&(e/=this.m_iGridSizeX,l/=this.m_iGridSizeY,o+=`${r}${e},${l}`,r=" ",a.push({point:n,revertStatus:n.$GetStatus(),revertFillColor:n.$GetFillColor(),revertStrokeColor:n.$GetStrokeColor()}),n.$SetStatus(i,!0),n.$SetFillColor(s),n.$SetStrokeColor(s))}return""!==o&&(n=t.map(function(t){let e=t.x,i=t.y;return null===e||null===i?"":(e/=this.m_iGridSizeX,i/=this.m_iGridSizeY,`${e},${i}`)}.bind(this)).join(" ")),{OwnedPoints:a,owned:o,PathPoints:[],path:n,errorDesc:"No surrounded points"}}async IsPointOutsideAllPaths(t,e){const i=t*this.m_iGridSizeX,s=e*this.m_iGridSizeY,n=await this.m_Lines.all();for(const t of n){const e=t.$GetPointsArray();if(!1!==this.pnpoly2(e,i,s))return!1}return!0}CreateXMLWaitForPlayerRequest(){}CreateXMLPutPointRequest(t,e){return new InkBallPointViewModel(0,this.g_iGameID,this.g_iPlayerID,t,e,this.m_bIsPlayingWithRed?StatusEnum.POINT_FREE_RED:StatusEnum.POINT_FREE_BLUE,0)}CreateXMLPutPathRequest(t){return new InkBallPathViewModel(0,this.g_iGameID,this.g_iPlayerID,t.path,t.owned)}async SendAsyncData(t,e){switch(t.GetKind()){case CommandKindEnum.POINT:LocalLog(InkBallPointViewModel.Format("some player",t)),this.m_bHandlingEvent=!0;try{const e=await this.g_SignalRConnection.invoke("ClientToServerPoint",t);await this.ReceivedPointProcessing(e)}catch(t){LocalError(t.toString()),void 0!==e&&e()}break;case CommandKindEnum.PATH:LocalLog(InkBallPathViewModel.Format("some player",t)),this.m_bHandlingEvent=!0;try{const e=await this.g_SignalRConnection.invoke("ClientToServerPath",t);if(Object.prototype.hasOwnProperty.call(e,"WinningPlayerId")||Object.prototype.hasOwnProperty.call(e,"winningPlayerId")){let t=e;this.ReceivedWinProcessing(t)}else{if(!Object.prototype.hasOwnProperty.call(e,"PointsAsString")&&!Object.prototype.hasOwnProperty.call(e,"pointsAsString"))throw new Error("ClientToServerPath bad GetKind!");{let t=e;await this.ReceivedPathProcessing(t)}}}catch(t){LocalError(t.toString()),void 0!==e&&e()}break;case CommandKindEnum.PING:try{await this.g_SignalRConnection.invoke("ClientToServerPing",t),document.querySelector(this.m_sMsgInputSel).value="",document.querySelector(this.m_sMsgSendButtonSel).disabled="disabled"}catch(t){LocalError(t.toString())}break;case CommandKindEnum.STOP_AND_DRAW:try{await this.g_SignalRConnection.invoke("ClientToServerStopAndDraw",t),this.m_bDrawLines=!0,this.m_iLastX=this.m_iLastY=-1,this.m_Line=null,this.m_bIsPlayerActive=!0,this.m_StopAndDraw.disabled="disabled"}catch(t){LocalError(t.toString())}break;default:LocalError("unknown object")}}CountDownReachedHandler(t){t&&(t.innerHTML=""),this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled",this.m_Timer=null,this.m_bIsPlayerActive=!1}async ReceivedPointProcessing(t){const e=t.iX,i=t.iY,s=void 0!==t.Status?t.Status:t.status;this.m_sLastMoveGameTimeStamp=(void 0!==t.TimeStamp?t.TimeStamp:new Date(t.timeStamp)).toISOString(),await this.SetPoint(e,i,s,t.iPlayerId),this.g_iPlayerID!==t.iPlayerId?(this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&await this.OnCancelClick(),this.m_StopAndDraw.disabled="",this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)):(this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_CancelPath.disabled="disabled",this.m_StopAndDraw.disabled="",this.m_StopAndDraw.value="Stop and Draw",this.m_Timer?this.m_Timer.Reset(this.m_TimerOpts):this.m_Timer=new CountdownTimer(this.m_TimerOpts),!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()),this.m_bHandlingEvent=!1}async ReceivedPathProcessing(t){if(this.m_sLastMoveGameTimeStamp=(void 0!==t.TimeStamp?t.TimeStamp:new Date(t.timeStamp)).toISOString(),this.g_iPlayerID!==t.iPlayerId){const e=t.PointsAsString||t.pointsAsString,i=t.OwnedPointsAsString||t.ownedPointsAsString;await this.SetPath(e,this.m_sDotColor===this.COLOR_RED,!1,t.iId);const s=i.split(" "),n=this.m_sDotColor===this.COLOR_RED?StatusEnum.POINT_OWNED_BY_RED:StatusEnum.POINT_OWNED_BY_BLUE,o=this.m_sDotColor===this.COLOR_RED?this.COLOR_OWNED_RED:this.COLOR_OWNED_BLUE;for(const t of s){let e=t.split(",");const i=parseInt(e[0]),s=parseInt(e[1]);e=await this.m_Points.get(s*this.m_iGridWidth+i),void 0!==e&&(e.$SetStatus(n),e.$SetFillColor(o),e.$SetStrokeColor(o))}this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&await this.OnCancelClick(),this.m_StopAndDraw.disabled=""}else{const e=this.m_Line.$GetPointsArray();let i=e[0].x,s=e[0].y;i/=this.m_iGridSizeX,s/=this.m_iGridSizeY;const n=await this.m_Points.get(s*this.m_iGridWidth+i);void 0!==n&&n.$SetStatus(StatusEnum.POINT_IN_PATH),this.m_Line.$SetWidthAndColor(3,this.m_sDotColor),this.m_Line.$SetID(t.iId),await this.m_Lines.push(this.m_Line),this.m_iLastX=this.m_iLastY=-1,this.m_Line=null,this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled",!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()}this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_bHandlingEvent=!1,this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)}ReceivedWinProcessing(t){this.ShowMobileStatus("Win situation"),this.m_bHandlingEvent=!1;let e=WinCommand.Format(t);const i=void 0!==t.Status?t.Status:t.status,s=t.WinningPlayerId||t.winningPlayerId;((i===WinStatusEnum.RED_WINS||i===WinStatusEnum.GREEN_WINS)&&s>0||i===WinStatusEnum.DRAW_WIN)&&(alert(""===e?"Game won!":e),window.location.href="GamesList")}Check4Win(t,e,i,s){let n,o;switch(this.GameType){case GameTypeEnum.FIRST_CAPTURE:return t.length>0?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:e.length>0?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:WinStatusEnum.NO_WIN;case GameTypeEnum.FIRST_5_CAPTURES:return n=this.m_bIsPlayingWithRed?StatusEnum.POINT_OWNED_BY_BLUE:StatusEnum.POINT_OWNED_BY_RED,o=s.filter((function(t){return null!==t.iEnclosingPathId&&t.$GetStatus()===n})).length,o>=5?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:(n=this.m_bIsPlayingWithRed?StatusEnum.POINT_OWNED_BY_RED:StatusEnum.POINT_OWNED_BY_BLUE,o=i.filter((function(t){return null!==t.iEnclosingPathId&&t.$GetStatus()===n})).length,o>=5?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:WinStatusEnum.NO_WIN);case GameTypeEnum.FIRST_5_PATHS:return e.length>=5?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:t.length>=5?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:WinStatusEnum.NO_WIN;case GameTypeEnum.FIRST_5_ADVANTAGE_PATHS:{const i=t.length-e.length;if(i>=5)return this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS;if(i<=-5)return this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS}return WinStatusEnum.NO_WIN;default:throw new Error("Wrong game type")}}ShowMobileStatus(t=""){"???"===this.m_Player2Name.innerHTML?this.m_bIsPlayerActive?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayerActive?this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_GameStatus.style.color=this.COLOR_RED,null!==t&&""!==t?this.Debug(t,0):this.Debug("",0)}async OnMouseMove(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return void(this.iConnErrCount<=0&&!this.m_bIsPlayerActive&&(this.m_Screen.style.cursor="wait"));let e=(t?t.clientX:window.event.clientX)-this.m_Screen.offsetLeft+this.f_scrollLeft()+.5*this.m_iGridSizeX,i=(t?t.clientY:window.event.clientY)-this.m_Screen.offsetTop+this.f_scrollTop()+.5*this.m_iGridSizeY;e=parseInt(e/this.m_iGridSizeX),i=parseInt(i/this.m_iGridSizeY);let s=e*this.m_iGridSizeX,n=i*this.m_iGridSizeY;if(this.m_MouseCursorOval.$move(s,n,this.m_PointRadius),this.m_MouseCursorOval.$Show(),this.Debug(`[${e},${i}]`,1),this.m_bDrawLines){if(null!==this.m_Line?this.m_Screen.style.cursor="move":this.m_Screen.style.cursor="crosshair",!0===this.m_bMouseDown&&(this.m_iLastX!==e||this.m_iLastY!==i)&&Math.abs(parseInt(this.m_iLastX-e))<=1&&Math.abs(parseInt(this.m_iLastY-i))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),o=await this.m_Points.get(i*this.m_iGridWidth+e);if(this.m_CancelPath.disabled=this.m_Line.$GetLength()>=2?"":"disabled",void 0!==t&&void 0!==o&&t.$GetFillColor()===this.m_sDotColor&&o.$GetFillColor()===this.m_sDotColor){const r=this.m_Line.$ContainsPoint(s,n);if(r<1&&o.$GetStatus()!==StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(s,n,this.m_iGridSizeX,this.m_iGridSizeY))o.$SetStatus(StatusEnum.POINT_IN_PATH,!0),this.m_iLastX=e,this.m_iLastY=i;else if(1===r&&o.$GetStatus()===StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(s,n,this.m_iGridSizeX,this.m_iGridSizeY)){const t=await this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPathRequest(t),(async()=>{await this.OnCancelClick(),t.OwnedPoints.forEach((t=>{const e=t.point,i=t.revertFillColor,s=t.revertStrokeColor;e.$RevertOldStatus(),e.$SetFillColor(i),e.$SetStrokeColor(s)})),this.m_bHandlingEvent=!1}))):this.Debug((t.errorDesc?t.errorDesc:"Wrong path")+", cancell it or refresh page",0),this.m_iLastX=e,this.m_iLastY=i}else r>=1&&t.$GetStatus()===StatusEnum.POINT_IN_PATH&&this.m_Line.$GetPointsString().endsWith(`${this.m_iLastX*this.m_iGridSizeX},${this.m_iLastY*this.m_iGridSizeY}`)&&(this.m_Line.$GetLength()>2?(t.$RevertOldStatus(),this.m_Line.$RemoveLastPoint(),this.m_iLastX=e,this.m_iLastY=i):await this.OnCancelClick())}}else{let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),o=await this.m_Points.get(i*this.m_iGridWidth+e);if(void 0!==t&&void 0!==o&&t.$GetFillColor()===this.m_sDotColor&&o.$GetFillColor()===this.m_sDotColor){const r=this.m_iLastX*this.m_iGridSizeX,a=this.m_iLastY*this.m_iGridSizeY;this.m_Line=$createPolyline(6,r+","+a+" "+s+","+n,this.DRAWING_PATH_COLOR),this.m_CancelPath.disabled="",t.$SetStatus(StatusEnum.POINT_STARTING,!0),o.$SetStatus(StatusEnum.POINT_IN_PATH,!0),this.m_iLastX=e,this.m_iLastY=i}}}else this.m_Screen.style.cursor="crosshair"}async OnMouseDown(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return;let e=(t?t.clientX:window.event.clientX)-this.m_Screen.offsetLeft+this.f_scrollLeft()+.5*this.m_iGridSizeX,i=(t?t.clientY:window.event.clientY)-this.m_Screen.offsetTop+this.f_scrollTop()+.5*this.m_iGridSizeY;if(e=this.m_iMouseX=parseInt(e/this.m_iGridSizeX),i=this.m_iMouseY=parseInt(i/this.m_iGridSizeY),this.m_bMouseDown=!0,this.m_bDrawLines){if((this.m_iLastX!==e||this.m_iLastY!==i)&&Math.abs(parseInt(this.m_iLastX-e))<=1&&Math.abs(parseInt(this.m_iLastY-i))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),s=await this.m_Points.get(i*this.m_iGridWidth+e);if(this.m_CancelPath.disabled=this.m_Line.$GetLength()>=2?"":"disabled",void 0!==t&&void 0!==s&&t.$GetFillColor()===this.m_sDotColor&&s.$GetFillColor()===this.m_sDotColor){const n=e*this.m_iGridSizeX,o=i*this.m_iGridSizeY,r=this.m_Line.$ContainsPoint(n,o);if(r<1&&s.$GetStatus()!==StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(n,o,this.m_iGridSizeX,this.m_iGridSizeY))s.$SetStatus(StatusEnum.POINT_IN_PATH,!0),this.m_iLastX=e,this.m_iLastY=i;else if(1===r&&s.$GetStatus()===StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(n,o,this.m_iGridSizeX,this.m_iGridSizeY)){const t=await this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPathRequest(t),(async()=>{await this.OnCancelClick(),t.OwnedPoints.forEach((t=>{const e=t.point,i=t.revertFillColor,s=t.revertStrokeColor;e.$RevertOldStatus(),e.$SetFillColor(i),e.$SetStrokeColor(s)})),this.m_bMouseDown=!1,this.m_bHandlingEvent=!1}))):this.Debug((t.errorDesc?t.errorDesc:"Wrong path")+", cancell it or refresh page",0),this.m_iLastX=e,this.m_iLastY=i}else r>=1&&t.$GetStatus()===StatusEnum.POINT_IN_PATH&&this.m_Line.$GetPointsString().endsWith(`${this.m_iLastX*this.m_iGridSizeX},${this.m_iLastY*this.m_iGridSizeY}`)&&(this.m_Line.$GetLength()>2?(t.$RevertOldStatus(),this.m_Line.$RemoveLastPoint(),this.m_iLastX=e,this.m_iLastY=i):await this.OnCancelClick())}}else{let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),s=await this.m_Points.get(i*this.m_iGridWidth+e);if(void 0!==t&&void 0!==s&&t.$GetFillColor()===this.m_sDotColor&&s.$GetFillColor()===this.m_sDotColor){const n=this.m_iLastX*this.m_iGridSizeX,o=this.m_iLastY*this.m_iGridSizeY,r=e*this.m_iGridSizeX,a=i*this.m_iGridSizeY;this.m_Line=$createPolyline(6,n+","+o+" "+r+","+a,this.DRAWING_PATH_COLOR),this.m_CancelPath.disabled="",t.$SetStatus(StatusEnum.POINT_STARTING,!0),s.$SetStatus(StatusEnum.POINT_IN_PATH,!0)}this.m_iLastX=e,this.m_iLastY=i}else if(this.m_iLastX<0||this.m_iLastY<0){let t=await this.m_Points.get(i*this.m_iGridWidth+e);void 0!==t&&t.$GetFillColor()===this.m_sDotColor&&(this.m_iLastX=e,this.m_iLastY=i)}}else{this.m_iLastX=e,this.m_iLastY=i;const t=e,s=i;if(e=t*this.m_iGridSizeX,i=s*this.m_iGridSizeY,void 0!==await this.m_Points.get(s*this.m_iGridWidth+t))return void this.Debug("Wrong point - already existing",0);if(!await this.IsPointOutsideAllPaths(t,s))return void this.Debug("Wrong point, Point is not outside all paths",0);this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPointRequest(t,s),(()=>{this.m_bMouseDown=!1,this.m_bHandlingEvent=!1}))}}OnMouseUp(){this.m_bMouseDown=!1}OnMouseLeave(){this.m_MouseCursorOval.$Hide()}async OnStopAndDraw(t){if(this.m_Timer)null===this.m_Line&&await this.SendAsyncData(new StopAndDrawCommand);else{null!==this.m_Line&&await this.OnCancelClick(),this.m_bDrawLines=!this.m_bDrawLines;const e=t.target;this.m_bDrawLines?e.value="Draw dot":e.value="Draw line",this.m_iLastX=this.m_iLastY=-1,this.m_Line=null}}async OnCancelClick(){if(this.m_bDrawLines){if(null!==this.m_Line){const t=this.m_Line.$GetPointsArray();this.m_CancelPath.disabled="disabled";for(const e of t){let t=e.x,i=e.y;if(null===t||null===i)continue;t/=this.m_iGridSizeX,i/=this.m_iGridSizeY;const s=await this.m_Points.get(i*this.m_iGridWidth+t);void 0!==s&&s.$RevertOldStatus()}$RemovePolyline(this.m_Line),this.m_Line=null}this.m_iLastX=this.m_iLastY=-1,this.m_Timer&&(this.m_StopAndDraw.disabled="disabled"),this.Debug("",0)}}CountPointsDebug(t){let e="";[{query:"circle:not([z-index])",display:"circles: %s, "},{query:"polyline",display:"lines: %s, "},{query:"circle[data-status='2']",display:"intercepted(P1:%s, "},{query:"circle[data-status='3']",display:"P2:%s)"}].forEach((function(t){const i=document.querySelectorAll(t.query);e+=t.display.replace("%s",i.length)})),document.querySelector(t).innerHTML="SVGs by tags: "+e}async OnTestBuildCurrentGraph(t){t.preventDefault(),LocalLog(await this.BuildGraph())}async OnTestConcaveman(t){t.preventDefault();const e=(await this.BuildGraph()).vertices.map(function(t){const e=t.$GetPosition();return[e.x/this.m_iGridSizeX,e.y/this.m_iGridSizeX]}.bind(this));if(e&&e.length>0){const t=concavemanBundle.concaveman(e,2,0);$createPolyline(6,t.map(function(t){return parseInt(t[0])*this.m_iGridSizeX+","+parseInt(t[1])*this.m_iGridSizeY}.bind(this)).join(" "),"green"),LocalLog("convex_hull = "+t);const i=t.map(function(t){return{x:t[0],y:t[1]}}.bind(this)),s=sortPointsClockwise(i),n=RandomColor();for(const t of s){const{x:e,y:i}=t,s=e*this.m_iGridSizeX,o=i*this.m_iGridSizeY,r=document.querySelector(`svg > circle[cx="${s}"][cy="${o}"]`);r&&(r.$SetStrokeColor(n),r.$SetFillColor(n),r.$SetZIndex(100),r.setAttribute("r","6")),await Sleep(50)}}}async OnTestMarkAllCycles(t){t.preventDefault(),LocalLog(await this.MarkAllCycles(await this.BuildGraph({visuals:!0})))}async OnTestGroupPoints(t){t.preventDefault(),$createPolyline(6,(await this.GroupPointsRecurse([],await this.m_Points.get(9*this.m_iGridWidth+26))).map((function(t){const e=t.$GetPosition();return e.x+","+e.y})).join(" "),"green"),LocalLog("game.lastCycle = "+this.lastCycle)}async OnTestFindFullSurroundedPoints(t){t.preventDefault();const e=this.COLOR_RED,i=RandomColor(),s=await this.m_Points.values();for(const t of s)if(void 0!==t&&t.$GetFillColor()===e&&StatusEnum.POINT_FREE_RED===t.$GetStatus()){const{x:e,y:s}=t.$GetPosition(),n=e/this.m_iGridSizeX,o=s/this.m_iGridSizeY;if(!1===await this.IsPointOutsideAllPaths(n,o))continue;const r=document.querySelector(`svg > circle[cx="${e}"][cy="${s}"]`);r&&(r.$SetStrokeColor(i),r.$SetFillColor(i),r.setAttribute("r","6"))}}async PrepareDrawing(t,e,i,s,n,o,r,a,l,h,c,m,u,d=125){if(this.m_bIsWon=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=d,this.m_Timer=null,this.m_WaitStartTime=null,this.m_iSlowdownLevel=0,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.m_Line=null,this.m_Debug=document.getElementById("debug0"),this.m_Player2Name=document.querySelector(e),this.m_GameStatus=document.querySelector(i),this.m_SurrenderButton=document.querySelector(s),this.m_CancelPath=document.querySelector(n),this.m_StopAndDraw=document.querySelector(r),this.m_sMsgInputSel=a,this.m_sMsgListSel=l,this.m_sMsgSendButtonSel=h,this.m_Screen=document.querySelector(t),!this.m_Screen)return void alert("no board");this.m_iPosX=this.m_Screen.offsetLeft,this.m_iPosY=this.m_Screen.offsetTop;const _=Array.from(this.m_Screen.classList).find((t=>t.startsWith("boardsize"))).split("-")[1].split("x");this.m_BoardSize={width:parseInt(_[0]),height:parseInt(_[1])};let S=this.m_Screen.clientWidth,P=this.m_Screen.clientHeight,g=null;P<=0&&(P=16*this.m_BoardSize.height,this.m_Screen.style.height=P+"px",g="100%"),this.m_iGridSizeX=parseInt(Math.ceil(S/this.m_BoardSize.width)),this.m_iGridSizeY=parseInt(Math.ceil(P/this.m_BoardSize.height)),this.m_iGridWidth=parseInt(Math.ceil(S/this.m_iGridSizeX)),this.m_iGridHeight=parseInt(Math.ceil(P/this.m_iGridSizeY)),this.m_sLastMoveGameTimeStamp=c,this.rAF_StartTimestamp=null,this.rAF_FrameID=null,this.lastCycle=[],$createSVGVML(this.m_Screen,g,g,!0),this.DisableSelection(this.m_Screen);const E=new GameStateStore(m,this.CreateScreenPointFromIndexedDb.bind(this),this.CreateScreenPathFromIndexedDb.bind(this),this.GetGameStateForIndexedDb.bind(this));if(this.m_Lines=E.GetPathStore(),this.m_Points=E.GetPointStore(),this.m_bPointsAndPathsLoaded=await E.PrepareStore(this),!1===this.m_bViewOnly){if(null===this.m_MouseCursorOval&&(this.m_MouseCursorOval=$createOval(this.m_PointRadius,"true"),this.m_MouseCursorOval.$SetFillColor(this.m_sDotColor),this.m_MouseCursorOval.$SetStrokeColor(this.m_sDotColor),this.m_MouseCursorOval.$SetZIndex(-1),this.m_MouseCursorOval.$Hide()),this.m_Screen.onmousedown=this.OnMouseDown.bind(this),this.m_Screen.onmousemove=this.OnMouseMove.bind(this),this.m_Screen.onmouseup=this.OnMouseUp.bind(this),this.m_Screen.onmouseleave=this.OnMouseLeave.bind(this),this.m_CancelPath.onclick=this.OnCancelClick.bind(this),this.m_StopAndDraw.onclick=this.OnStopAndDraw.bind(this),!1===this.m_bIsCPUGame)document.querySelector(this.m_sMsgInputSel).disabled="",document.getElementById("testArea").textContent="";else{let t=0;u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestBuildCurrentGraph.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestConcaveman.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestMarkAllCycles.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestGroupPoints.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestFindFullSurroundedPoints.bind(this));const e=document.getElementById("chatSection");for(;e.lastElementChild;)e.removeChild(e.lastElementChild)}this.m_SurrenderButton.disabled="","???"===this.m_Player2Name.innerHTML?(this.ShowMobileStatus("Waiting for other player to connect"),this.m_Screen.style.cursor="wait"):(this.m_SurrenderButton.value="surrender",this.m_bIsPlayerActive?(this.ShowMobileStatus("Your move"),this.m_Screen.style.cursor="crosshair",this.m_StopAndDraw.disabled=""):(this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait"),this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line")}else document.querySelector(o).innerHTML="back to Game List"}GetRandomInt(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t))+t}async FindRandomCPUPoint(){let t,e,i=100;for(;--i>0&&(t=this.GetRandomInt(0,this.m_iGridWidth),e=this.GetRandomInt(0,this.m_iGridHeight),await this.m_Points.has(e*this.m_iGridWidth+t)||!await this.IsPointOutsideAllPaths(t,e)););return new InkBallPointViewModel(0,this.g_iGameID,-1,t,e,StatusEnum.POINT_FREE_BLUE,0)}async CalculateCPUCentroid(){let t,e,i=0,s=0,n=0;const o=this.COLOR_RED,r=await this.m_Points.values();for(const a of r)if(void 0!==a&&a.$GetFillColor()===o&&a.$GetStatus()===StatusEnum.POINT_FREE_RED){const o=a.$GetPosition();t=o.x,e=o.y,t/=this.m_iGridSizeX,e/=this.m_iGridSizeY,i+=t,s+=e,n++}if(n<=0)return null;t=i/n,e=s/n,t*=this.m_iGridSizeX,e*=this.m_iGridSizeY;const a=parseInt(t/this.m_iGridSizeX),l=parseInt(e/this.m_iGridSizeY);t=a,e=l;let h=20;for(;--h>0&&(this.m_Points.has(e*this.m_iGridWidth+t)||!await this.IsPointOutsideAllPaths(t,e));)t=this.GetRandomInt(a-2,a+3),e=this.GetRandomInt(l-2,l+3);if(h<=0)return null;return new InkBallPointViewModel(0,this.g_iGameID,-1,t,e,StatusEnum.POINT_FREE_BLUE,0)}async BuildGraph({freeStat:t=StatusEnum.POINT_FREE_BLUE,fillCol:e=this.COLOR_BLUE,visuals:i=!0}={}){const s=[],n=new Map,o=function(t,i){const s=i.$GetStatus();return!(!t.includes(s)||i.$GetFillColor()!==e)},r=async function(e,r,a,l,h,c,m){if(r>=0&&r<this.m_iGridWidth&&a>=0&&a<this.m_iGridHeight){const u=await this.m_Points.get(a*this.m_iGridWidth+r);if(u&&!0===o([t],u)){const t=u.$GetPosition();if(!1===n.has(`${c},${m}_${r},${a}`)&&!1===n.has(`${r},${a}_${c},${m}`)){const o={from:e,to:u};if(!0===i){const e=$createLine(3,"rgba(0, 255, 0, 0.3)");e.$move(l,h,t.x,t.y),o.line=e}if(n.set(`${c},${m}_${r},${a}`,o),!1===s.includes(e))e.adjacents=[u],s.push(e);else{s.find((t=>t===e)).adjacents.push(u)}if(!1===s.includes(u))u.adjacents=[e],s.push(u);else{s.find((t=>t===u)).adjacents.push(e)}}}}}.bind(this),a=await this.m_Points.values();for(const e of a)if(e&&!0===o([t,StatusEnum.POINT_STARTING,StatusEnum.POINT_IN_PATH],e)){const{x:t,y:i}=e.$GetPosition(),s=t/this.m_iGridSizeX,n=i/this.m_iGridSizeY;await r(e,s+1,n,t,i,s,n),await r(e,s-1,n,t,i,s,n),await r(e,s,n-1,t,i,s,n),await r(e,s,n+1,t,i,s,n),await r(e,s-1,n-1,t,i,s,n),await r(e,s+1,n-1,t,i,s,n),await r(e,s-1,n+1,t,i,s,n),await r(e,s+1,n+1,t,i,s,n)}return{vertices:s,edges:Array.from(n.values())}}IsGraphCyclic(t){const e=t.vertices,i=function(t,e){t.visited=!0;for(let s of t.adjacents)if(s.visited){if(s!==e){const{x:t,y:e}=s.$GetPosition();return LocalLog(`cycle found at ${t/this.m_iGridSizeX},${e/this.m_iGridSizeY}`),!0}}else if(i(s,t))return!0;return!1}.bind(this);for(let t=0;t<e.length;t++)e[t].visited=!1;for(let t=0;t<e.length;t++)if(!e[t].visited&&i(e[t],-1))return!0;return!1}async MarkAllCycles(t){const e=t.vertices,i=e.length;let s=new Array(i);const n=new Array(i),o=new Array(i),r=new Array(i);for(let t=0;t<i;t++)n[t]=[],s[t]=[];const a=async function(t,i){if(2===o[t])return;if(1===o[t]){h++;let e=i;for(n[e].push(h);e!==t;)e=r[e],n[e].push(h);return}r[t]=i,o[t]=1;const s=e[t];if(s){s.$SetStrokeColor("black"),s.$SetFillColor("black"),await Sleep(10);for(const i of s.adjacents){const s=e.indexOf(i);s!==r[t]&&await a(s,t)}}o[t]=2},l=async function(t,i){for(let e=0;e<t;e++){const t=i[e];if(void 0!==t&&t.length>0)for(let i=0;i<t.length;i++){const n=s[t[i]];void 0!==n&&n.push(e)}}s=s.filter((t=>t.length>=4)).sort(((t,e)=>e.length-t.length));const n=[],o=this.COLOR_RED,r=await this.m_Points.values();for(const t of r)if(void 0!==t&&t.$GetFillColor()===o&&StatusEnum.POINT_FREE_RED===t.$GetStatus()){const{x:e,y:i}=t.$GetPosition(),s=e/this.m_iGridSizeX,o=i/this.m_iGridSizeY;if(!1===await this.IsPointOutsideAllPaths(s,o))continue;document.querySelector(`svg > circle[cx="${e}"][cy="${i}"]`)&&n.push({x:s,y:o})}const a=[];for(let t=0;t<=h;t++){const i=s[t];if(i&&i.length>0){let s=`Cycle Number ${t}: `,o=[];const r="var(--indigo)",l=i.map(function(t){const i=e[t].$GetPosition();return{x:i.x/this.m_iGridSizeX,y:i.y/this.m_iGridSizeY}}.bind(this)),h=sortPointsClockwise(l);for(const t of h){const{x:e,y:i}=t,n=document.querySelector(`svg > circle[cx="${e*this.m_iGridSizeX}"][cy="${i*this.m_iGridSizeY}"]`);n&&(s+=`(${e},${i})`,n.$SetStrokeColor(r),n.$SetFillColor(r),n.setAttribute("r","6")),await Sleep(50)}let c="",m="";for(const t of n)if(!1!==this.pnpoly2(h,t.x,t.y)){c+=`${m}(${t.x},${t.y})`;const e=document.querySelector(`svg > circle[cx="${t.x*this.m_iGridSizeX}"][cy="${t.y*this.m_iGridSizeY}"]`);e&&(e.$SetStrokeColor("var(--yellow)"),e.$SetFillColor("var(--yellow)"),e.setAttribute("r","6")),m=","}o.unshift(s),a.push(o),LocalLog(s+(""!==c?" possible intercepts: "+c:""));Array.from(document.querySelectorAll(`svg > circle[fill="${r}"][r="6"]`)).forEach((t=>{t.$SetStrokeColor(this.COLOR_BLUE),t.$SetFillColor(this.COLOR_BLUE),t.setAttribute("r","4")}))}}return a}.bind(this);let h=0,c=i;for(let t=0;t<i;t++)await a(t+1,t);return await l(c,n)}async GroupPointsRecurse(t,e){if(void 0===e||t.includes(e))return t;if(!1===[StatusEnum.POINT_FREE_BLUE,StatusEnum.POINT_STARTING,StatusEnum.POINT_IN_PATH].includes(e.$GetStatus())||e.$GetFillColor()!==this.COLOR_BLUE)return t;let{x:i,y:s}=e.$GetPosition();i/=this.m_iGridSizeX,s/=this.m_iGridSizeY;let n,o,r=null;if(t.length>0){r=t[t.length-1];const a=r.$GetPosition();if(n=a.x,o=a.y,n/=this.m_iGridSizeX,o/=this.m_iGridSizeY,!(Math.abs(parseInt(n-i))<=1&&Math.abs(parseInt(o-s))<=1))return t;t.push(e)}else t.push(e);if(t.length>2&&null!==r){const e=t[0].$GetPosition();e.x/=this.m_iGridSizeX,e.y/=this.m_iGridSizeY,r=t[t.length-1];const i=r.$GetPosition();if(n=i.x,o=i.y,n/=this.m_iGridSizeX,o/=this.m_iGridSizeY,Math.abs(parseInt(n-e.x))<=1&&Math.abs(parseInt(o-e.y))<=1){const e=[];t.forEach((t=>e.push(t))),this.lastCycle.push(e)}}const a=await this.m_Points.get(s*this.m_iGridWidth+i+1),l=await this.m_Points.get(s*this.m_iGridWidth+i-1),h=await this.m_Points.get((s-1)*this.m_iGridWidth+i),c=await this.m_Points.get((s+1)*this.m_iGridWidth+i),m=await this.m_Points.get((s-1)*this.m_iGridWidth+i-1),u=await this.m_Points.get((s-1)*this.m_iGridWidth+i+1),d=await this.m_Points.get((s+1)*this.m_iGridWidth+i-1),_=await this.m_Points.get((s+1)*this.m_iGridWidth+i+1);return a&&await this.GroupPointsRecurse(t,a),l&&await this.GroupPointsRecurse(t,l),h&&await this.GroupPointsRecurse(t,h),c&&await this.GroupPointsRecurse(t,c),m&&await this.GroupPointsRecurse(t,m),u&&await this.GroupPointsRecurse(t,u),d&&await this.GroupPointsRecurse(t,d),_&&await this.GroupPointsRecurse(t,_),t}async GroupPointsIterative({g:t=null}={}){if(!t)return;const e=t.vertices,i=[];let s;for(const t of e){s=t;const e=[];(await this.GroupPointsRecurse(e,s)).length>0&&this.lastCycle.length>0&&(i.push(this.lastCycle),this.lastCycle=[])}return i}async rAFCallBack(t){null===this.rAF_StartTimestamp&&(this.rAF_StartTimestamp=t);const e=t-this.rAF_StartTimestamp;let i=null;const s=await this.CalculateCPUCentroid();i=null!==s?s:await this.FindRandomCPUPoint(),null===i?e<2e3&&(this.rAF_FrameID=window.requestAnimationFrame(this.rAFCallBack.bind(this))):await this.SendAsyncData(i,(()=>{this.m_bMouseDown=!1,this.m_bHandlingEvent=!1}))}StartCPUCalculation(){null===this.rAF_FrameID&&(this.rAF_FrameID=window.requestAnimationFrame(this.rAFCallBack.bind(this)))}}window.addEventListener("load",(async function(){const t=gameOptions.inkBallHubName,e=gameOptions.iGameID;document.getElementById("gameID").innerHTML=e,document.querySelector(".container.inkgame form > input[type='hidden'][name='GameID']").value=e;const i=gameOptions.iPlayerID,s=gameOptions.iOtherPlayerID;document.getElementById("playerID").innerHTML=i;const n=gameOptions.bPlayingWithRed,o=gameOptions.bPlayerActive,r=gameOptions.gameType,a=gameOptions.protocol,l=gameOptions.servTimeoutMillis,h=gameOptions.isReadonly,c=gameOptions.pathAfterPointDrawAllowanceSecAmount,m=new Date(gameOptions.sLastMoveGameTimeStamp).toISOString();await importAllModulesAsync(gameOptions);const u=new InkBallGame(e,i,s,t,signalR.LogLevel.Warning,a,signalR.HttpTransportType.None,l,r,n,o,h,c);await u.PrepareDrawing("#screen","#Player2Name","#gameStatus","#SurrenderButton","#CancelPath","#Pause","#StopAndDraw","#messageInput","#messagesList","#sendButton",m,null===gameOptions.PointsAsJavaScriptArray,["#TestBuildGraph","#TestConcaveman","#TestMarkAllCycles","#TestGroupPoints","#TestFindFullSurroundedPoints"]),null!==gameOptions.PointsAsJavaScriptArray?(await u.StartSignalRConnection(!1),await u.SetAllPoints(gameOptions.PointsAsJavaScriptArray),await u.SetAllPaths(gameOptions.PathsAsJavaScriptArray)):await u.StartSignalRConnection(!0),document.getElementsByClassName("whichColor")[0].style.color=n?"red":"blue",u.CountPointsDebug("#debug2"),window.game=u})),window.addEventListener("beforeunload",(function(){window.game&&window.game.StopSignalRConnection()}));