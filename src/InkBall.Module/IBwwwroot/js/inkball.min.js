"use strict";import t from"./depthFirstSearch.js";let i,e,s,n,o,r,a,l;const h=Object.freeze({UNKNOWN:-1,PING:0,POINT:1,PATH:2,PLAYER_JOINING:3,PLAYER_SURRENDER:4,WIN:5,POINTS_AND_PATHS:6,USER_SETTINGS:7,STOP_AND_DRAW:8}),c=Object.freeze({FIRST_CAPTURE:0,FIRST_5_CAPTURES:1,FIRST_5_PATHS:2,FIRST_5_ADVANTAGE_PATHS:3}),m=Object.freeze({RED_WINS:0,GREEN_WINS:1,NO_WIN:2,DRAW_WIN:3});class d{GetKind(){throw new Error("missing GetKind implementation!")}}class _ extends d{constructor(t=0,i=0,e=0,s=0,o=0,r=n.POINT_FREE,a=0){super(),this.iId=t,this.iGameId=i,this.iPlayerId=e,this.iX=s,this.iY=o,this.Status=r,this.iEnclosingPathId=a}GetKind(){return h.POINT}static Format(t,i){let e="("+i.iX+","+i.iY+" - ";switch(void 0!==i.Status?i.Status:i.status){case n.POINT_FREE_RED:e+="red";break;case n.POINT_FREE_BLUE:e+="blue";break;case n.POINT_FREE:e+="";break;case n.POINT_STARTING:e+="starting";break;case n.POINT_IN_PATH:e+="path";break;case n.POINT_OWNED_BY_RED:e+="owned by red";break;case n.POINT_OWNED_BY_BLUE:e+="owned by blue";break;default:throw new Error("Bad point type!")}return t+" places "+e+") point"}}class u extends d{constructor(t=0,i=0,e=0,s="",n=""){super(),this.iId=t,this.iGameId=i,this.iPlayerId=e,this.PointsAsString=s,this.OwnedPointsAsString=n}GetKind(){return h.PATH}static Format(t,i){return`${t} places ${`(${i.PointsAsString||i.pointsAsString}) [${i.OwnedPointsAsString||i.ownedPointsAsString}]`} path`}}class S extends d{constructor(t,i,e){super(),this.OtherPlayerId=t,this.OtherPlayerName=i,this.Message=e}GetKind(){return h.PLAYER_JOINING}static Format(t){return t.Message||t.message}}class P extends d{constructor(t,i,e){super(),this.OtherPlayerId=t,this.thisOrOtherPlayerSurrenders=i,this.Message=e}GetKind(){return h.PLAYER_SURRENDER}static Format(t){return t.Message||t.message}}class g extends d{constructor(t=""){super(),this.Message=t}GetKind(){return h.PING}static Format(t,i){return t+" says '"+(i.Message||i.message)+"'"}}class y extends d{constructor(t=m.NO_WIN,i=0,e="null"){super(),this.Status=t,this.WinningPlayerId=i,this.Message=e}GetKind(){return h.WIN}static Format(t){let i="";switch(void 0!==t.Status?t.Status:t.status){case m.RED_WINS:i="red.";break;case m.GREEN_WINS:i="blue.";break;case m.NO_WIN:i="no one!";break;case m.DRAW_WIN:i="draw!"}return"And the winner is... "+i}}class p extends d{constructor(){super()}GetKind(){return h.STOP_AND_DRAW}static Format(t){return"User "+t+" started to draw path"}}class w extends d{constructor(t=[],i=[]){super(),this.Points=t,this.Paths=i}GetKind(){return h.POINTS_AND_PATHS}static Deserialize(t){const i=`{ "Points": ${t.Points||t.points}, "Paths": ${t.Paths||t.paths} }`;return JSON.parse(i)}}class C extends d{constructor(t=!1){super(),this.DesktopNotifications=t}GetKind(){return h.USER_SETTINGS}static Serialize(t){return JSON.stringify(t)}static Deserialize(t){return JSON.parse(t)}}class I{constructor({countdownSeconds:t=60,labelSelector:i=null,initialStart:e=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.timerID=-1,this.label=null,this.countdownReachedHandler=s,i&&(this.label=document.querySelector(i)),e&&this.Start()}setTimeFunc(){--this.totalSeconds<=0?(this.Stop(),this.countdownReachedHandler&&this.countdownReachedHandler(this.label)):this.label&&(this.label.innerHTML=this.pad(parseInt(this.totalSeconds/60))+":"+this.pad(this.totalSeconds%60))}pad(t){const i=t+"";return i.length<2?"0"+i:i}Start(){this.Stop(),this.timerID=setInterval(this.setTimeFunc.bind(this),1e3)}Stop(){this.timerID>0&&clearInterval(this.timerID),this.label&&(this.label.innerHTML="")}Reset({countdownSeconds:t=60,labelSelector:i=null,initialStart:e=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.label=null,this.countdownReachedHandler=s,i&&(this.label=document.querySelector(i)),e&&this.Start()}}function O(){return"#"+Math.floor(16777215*Math.random()).toString(16)}Function.prototype.callAsWorker=function(t,i){return new Promise(((e,s)=>{const n=`\n${t?[...t].reduce(((t,i)=>t+i.toString()+"\n")):""}\n\nself.onmessage = async function (e) { \n\tconst result = await ( ${this.toString()}.call(null, e.data) );\n\n\tself.postMessage( result ); \n}`,o=new Blob([n],{type:"text/javascript"}),r=new Worker(window.URL.createObjectURL(o));r.onmessage=t=>(e(t.data),r.terminate(),window.URL.revokeObjectURL(o)),r.onerror=t=>(s(t.message),r.terminate(),window.URL.revokeObjectURL(o)),r.postMessage(i)}))};class L{constructor(t,i,e,n,o,r,a,l,h,m=!0,d=!0,_=!1,u=60,S=125){this.g_iGameID=t,this.g_iPlayerID=i,this.m_iOtherPlayerId=e,this.m_bIsCPUGame=-1===this.m_iOtherPlayerId,this.GameType=c[h],this.iConnErrCount=0,this.iExponentialBackOffMillis=2e3,this.COLOR_RED="red",this.COLOR_BLUE="blue",this.COLOR_OWNED_RED="#DC143C",this.COLOR_OWNED_BLUE="#8A2BE2",this.DRAWING_PATH_COLOR="black",this.m_bIsWon=!1,this.m_bPointsAndPathsLoaded=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=S,this.m_Timer=null,this.m_ReconnectTimer=null,this.m_WaitStartTime=null,this.m_TimerOpts={countdownSeconds:u,labelSelector:"#debug2",initialStart:!0,countdownReachedHandler:this.CountDownReachedHandler.bind(this)},this.m_iSlowdownLevel=0,this.m_iGridWidth=0,this.m_iGridHeight=0,this.m_iGridSpacingX=0,this.m_iGridSpacingY=0,this.m_PointRadius=0,this.m_LineStrokeWidth=0,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_Screen=null,this.m_Debug=null,this.m_Player2Name=null,this.m_SurrenderButton=null,this.m_sMsgInputSel=null,this.m_sMsgSendButtonSel=null,this.m_sMsgListSel=null,this.m_CancelPath=null,this.m_StopAndDraw=null,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_bIsPlayingWithRed=m,this.m_bIsPlayerActive=d,this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.SvgVml=null,this.m_Line=null,this.m_Lines=null,this.m_Points=null,this.m_bViewOnly=_,this.m_MouseCursorOval=null,this.CursorPos={x:-1,y:-1},this.m_ApplicationUserSettings=null,this.m_sLastMoveGameTimeStamp=null,this.m_sVersion=null,this.m_Worker=null,null!==n&&""!==n&&(this.g_SignalRConnection=(new signalR.HubConnectionBuilder).withUrl(n,{transport:a,accessTokenFactory:function(){return`iGameID=${this.g_iGameID}&iPlayerID=${this.g_iPlayerID}`}.bind(this)}).withHubProtocol(r).configureLogging(o).build(),this.g_SignalRConnection.serverTimeoutInMilliseconds=l,this.g_SignalRConnection.onclose((async t=>{null!=t&&(s(t),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout((()=>this.Connect()),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5)))})))}async GetPlayerPointsAndPaths(){if(!1===this.m_bPointsAndPathsLoaded){const t=await this.g_SignalRConnection.invoke("GetPlayerPointsAndPaths",this.m_bViewOnly,this.g_iGameID),i=w.Deserialize(t);return void 0!==i.Points&&await this.SetAllPoints(i.Points),void 0!==i.Paths&&await this.SetAllPaths(i.Paths),this.m_bPointsAndPathsLoaded=!0,!0}return!1}async Connect(){try{if(await this.g_SignalRConnection.start(),this.iConnErrCount=0,e("connected; iConnErrCount = "+this.iConnErrCount),!1===this.m_bViewOnly)if(null===sessionStorage.getItem("ApplicationUserSettings")){let t=await this.g_SignalRConnection.invoke("GetUserSettings");if(t){e(t),t=C.Deserialize(t);const i=C.Serialize(t);sessionStorage.setItem("ApplicationUserSettings",i)}this.m_ApplicationUserSettings=new C(t.DesktopNotifications),await this.GetPlayerPointsAndPaths()}else{const t=sessionStorage.getItem("ApplicationUserSettings"),i=C.Deserialize(t);this.m_ApplicationUserSettings=new C(i.DesktopNotifications)}!1===this.m_bPointsAndPathsLoaded&&await this.GetPlayerPointsAndPaths(),null!==this.m_ApplicationUserSettings&&!0===this.m_ApplicationUserSettings.DesktopNotifications&&this.SetupNotifications(),!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()}catch(t){s(t+"; iConnErrCount = "+this.iConnErrCount),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout((()=>this.Connect()),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5))}}SetupNotifications(){return window.Notification?"granted"===Notification.permission||void Notification.requestPermission().then((function(t){return"granted"===t||(e("User blocked notifications."),!1)})).catch((function(t){return s(t),!1})):(e("Browser does not support notifications."),!1)}NotifyBrowser(t="Hi there!",i="How are you doing?"){return!!document.hidden&&(window.Notification?"granted"===Notification.permission?(new Notification(t,{body:i,icon:"../img/homescreen.webp"}),!0):void Notification.requestPermission().then((function(s){return"granted"===s?(new Notification(t,{body:i,icon:"../img/homescreen.webp"}),!0):(e("User blocked notifications."),!1)})).catch((function(t){return s(t),!1})):(e("Browser does not support notifications."),!1))}async StartSignalRConnection(t){return null===this.g_SignalRConnection?Promise.reject(new Error("signalr conn is null")):(!1===this.m_bPointsAndPathsLoaded&&(this.m_bPointsAndPathsLoaded=!t),this.g_SignalRConnection.on("ServerToClientPoint",async function(t){if(this.g_iPlayerID!==t.iPlayerId){const i=this.m_Player2Name.innerHTML;let e=_.Format(i,t);const s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("New Point",e)}await this.ReceivedPointProcessing(t)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPath",function(t){if(Object.prototype.hasOwnProperty.call(t,"PointsAsString")||Object.prototype.hasOwnProperty.call(t,"pointsAsString")){let i=t;if(this.g_iPlayerID!==i.iPlayerId){const t=this.m_Player2Name.innerHTML;let e=u.Format(t,i);const s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("New Path",e)}this.ReceivedPathProcessing(i)}else{if(!Object.prototype.hasOwnProperty.call(t,"WinningPlayerId")&&!Object.prototype.hasOwnProperty.call(t,"winningPlayerId"))throw new Error("ServerToClientPath bad GetKind!");{let i=t,e=y.Format(i),s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.ReceivedWinProcessing(i),this.NotifyBrowser("We have a winner",e)}}}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerJoin",function(t){const i=t.OtherPlayerId||t.otherPlayerId;this.m_iOtherPlayerId=i;const e=S.Format(t);document.querySelector(".msgchat").dataset.otherplayerid=i;let s=document.createElement("li");s.innerHTML=`<strong class="text-primary">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(s),null!==this.m_SurrenderButton&&""!==t.OtherPlayerName&&(this.m_Player2Name.innerHTML=t.OtherPlayerName||t.otherPlayerName,this.m_SurrenderButton.value="surrender",this.ShowMobileStatus("Your move")),this.NotifyBrowser("Player joininig",e),this.m_bHandlingEvent=!1}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerSurrender",function(t){let i=P.Format(t),e=document.createElement("li");e.innerHTML=`<strong class="text-warning">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(e),this.m_bHandlingEvent=!1,i=""===i?"Game interrupted!":i,this.NotifyBrowser("Game interruption",i),alert(i),window.location.href="GamesList"}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerWin",function(t){let i=y.Format(t);const e=document.querySelector(this.m_sMsgListSel);if(null!==e){let t=document.createElement("li");t.innerHTML=`<strong class="text-warning">${i}</strong>`,e.appendChild(t)}this.ReceivedWinProcessing(t),this.NotifyBrowser("We have a winner",i)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPing",function(t){const i=this.m_Player2Name.innerHTML;let e=g.Format(i,t),s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("User Message",e)}.bind(this)),this.g_SignalRConnection.on("ServerToClientOtherPlayerDisconnected",function(t){const i={countdownSeconds:5,initialStart:!0,countdownReachedHandler:function(){let i=t,e=document.createElement("li");e.innerHTML=`<strong class="text-warning">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(e),this.NotifyBrowser("User disconnected",i),this.m_ReconnectTimer=null}.bind(this)};this.m_ReconnectTimer?this.m_ReconnectTimer.Reset(i):this.m_ReconnectTimer=new I(i)}.bind(this)),this.g_SignalRConnection.on("ServerToClientOtherPlayerConnected",function(t){if(this.m_ReconnectTimer)this.m_ReconnectTimer.Stop(),this.m_ReconnectTimer=null;else{let i=t,e=document.createElement("li");e.innerHTML=`<strong class="text-primary">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(e),this.NotifyBrowser("User disconnected",i),this.m_ReconnectTimer=null}}.bind(this)),this.g_SignalRConnection.on("ServerToClientStopAndDraw",function(t){if(!t)return;const i=this.m_Player2Name.innerHTML;let e=p.Format(i),s=document.createElement("li");s.innerHTML=`<strong class="text-info">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("User "+i+" started drawing new path",e)}.bind(this)),!1===this.m_bIsCPUGame&&(document.querySelector(this.m_sMsgSendButtonSel).addEventListener("click",async function(t){t.preventDefault();let i=document.querySelector(this.m_sMsgInputSel).value.trim();if(""===i)return;let e=new g(i);await this.SendAsyncData(e)}.bind(this),!1),document.querySelector(this.m_sMsgInputSel).addEventListener("keyup",function(t){t.preventDefault(),13===t.keyCode&&document.querySelector(this.m_sMsgSendButtonSel).click()}.bind(this),!1)),this.Connect())}StopSignalRConnection(){null!==this.g_SignalRConnection&&(this.g_SignalRConnection.stop(),this.m_ReconnectTimer&&this.m_ReconnectTimer.Stop(),this.m_Timer&&this.m_Timer.Stop(),e("Stopped SignalR connection"))}Debug(...t){switch(t.length){case 1:this.m_Debug.innerHTML=t[0];break;case 2:document.getElementById("debug"+t[1]).innerHTML=t[0];break;default:for(let i=0;i<t.length;i++){const e=t[i];if(e){const t=document.getElementById("debug"+i);t&&(t.innerHTML=e)}}}}f_clientWidth(){return this.f_filterResults(window.innerWidth?window.innerWidth:0,document.documentElement?document.documentElement.clientWidth:0,document.body?document.body.clientWidth:0)}f_clientHeight(){return this.f_filterResults(window.innerHeight?window.innerHeight:0,document.documentElement?document.documentElement.clientHeight:0,document.body?document.body.clientHeight:0)}f_scrollLeft(){return this.f_filterResults(window.pageXOffset?window.pageXOffset:0,document.documentElement?document.documentElement.scrollLeft:0,document.body?document.body.scrollLeft:0)}f_scrollTop(){return this.f_filterResults(window.pageYOffset?window.pageYOffset:0,document.documentElement?document.documentElement.scrollTop:0,document.body?document.body.scrollTop:0)}f_filterResults(t,i,e){let s=t||0;return i&&(!s||s>i)&&(s=i),e&&(!s||s>e)?e:s}async SetPoint(t,i,e,s){if(await this.m_Points.has(i*this.m_iGridWidth+t))return;const o=t,r=i,a=this.SvgVml.CreateOval(this.m_PointRadius);let l;switch(a.move(o,r,this.m_PointRadius),e){case n.POINT_FREE_RED:l=this.COLOR_RED,a.SetStatus(e);break;case n.POINT_FREE_BLUE:l=this.COLOR_BLUE,a.SetStatus(e);break;case n.POINT_FREE:case n.POINT_STARTING:l=this.m_sDotColor,a.SetStatus(e);break;case n.POINT_IN_PATH:l=this.g_iPlayerID===s?!0===this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE:!0===this.m_bIsPlayingWithRed?this.COLOR_BLUE:this.COLOR_RED,a.SetStatus(e);break;case n.POINT_OWNED_BY_RED:l=this.COLOR_OWNED_RED,a.SetStatus(e);break;case n.POINT_OWNED_BY_BLUE:l=this.COLOR_OWNED_BLUE,a.SetStatus(e);break;default:alert("bad point")}a.SetFillColor(l),a.SetStrokeColor(l),await this.m_Points.set(i*this.m_iGridWidth+t,a)}GetGameStateForIndexedDb(){return{iGameID:this.g_iGameID,iPlayerID:this.g_iPlayerID,iOtherPlayerId:this.m_iOtherPlayerId,sLastMoveGameTimeStamp:this.m_sLastMoveGameTimeStamp,bPointsAndPathsLoaded:this.m_bPointsAndPathsLoaded,iGridWidth:this.m_iGridWidth,iGridHeight:this.m_iGridHeight}}CreateScreenPointFromIndexedDb(t,i,e,s){const o=t,r=i,a=this.SvgVml.CreateOval(this.m_PointRadius);let l;switch(a.move(o,r,this.m_PointRadius),e){case n.POINT_FREE_RED:l=this.COLOR_RED,a.SetStatus(e);break;case n.POINT_FREE_BLUE:l=this.COLOR_BLUE,a.SetStatus(e);break;case n.POINT_FREE:case n.POINT_STARTING:l=this.m_sDotColor,a.SetStatus(e);break;case n.POINT_IN_PATH:l=s,a.SetStatus(e);break;case n.POINT_OWNED_BY_RED:l=this.COLOR_OWNED_RED,a.SetStatus(e);break;case n.POINT_OWNED_BY_BLUE:l=this.COLOR_OWNED_BLUE,a.SetStatus(e);break;default:alert("bad point")}return a.SetFillColor(l),a.SetStrokeColor(l),a}async SetAllPoints(t){try{await this.m_Points.BeginBulkStorage();for(const[s,n,o,r]of t)await this.SetPoint(s,n,(e=o,e-3),(i=r,i-1))}finally{await this.m_Points.EndBulkStorage()}var i,e}async SetPath(t,i,e,s=0){const o=t.split(" ");let r,a,l="",h="",c=null,m=n.POINT_STARTING;for(const t of o)c=t.split(","),r=parseInt(c[0]),a=parseInt(c[1]),c=await this.m_Points.get(a*this.m_iGridWidth+r),null!=c&&(c.SetStatus(m),m=n.POINT_IN_PATH),h+=`${l}${r},${a}`,l=" ";c=o[0].split(","),r=parseInt(c[0]),a=parseInt(c[1]),c=await this.m_Points.get(a*this.m_iGridWidth+r),null!=c&&c.SetStatus(m),o[0]!==o[o.length-1]&&(h+=`${l}${r},${a}`);const d=this.SvgVml.CreatePolyline(this.m_LineStrokeWidth,h,e?this.m_sDotColor:i?this.COLOR_BLUE:this.COLOR_RED);d.SetID(s),await this.m_Lines.push(d)}async CreateScreenPathFromIndexedDb(t,i,e){const s=t.split(" ");let o,r,a="",l="",h=null,c=n.POINT_STARTING;for(const t of s)h=t.split(","),o=parseInt(h[0]),r=parseInt(h[1]),h=await this.m_Points.get(r*this.m_iGridWidth+o),null!=h&&(h.SetStatus(c),c=n.POINT_IN_PATH),l+=`${a}${o},${r}`,a=" ";h=s[0].split(","),o=parseInt(h[0]),r=parseInt(h[1]),h=await this.m_Points.get(r*this.m_iGridWidth+o),null!=h&&h.SetStatus(c),s[0]!==s[s.length-1]&&(l+=`${a}${o},${r}`);const m=this.SvgVml.CreatePolyline(this.m_LineStrokeWidth,l,i);return m.SetID(e),m}async SetAllPaths(t){try{await this.m_Lines.BeginBulkStorage();for(const i of t)await this.SetPath(i.PointsAsString,this.m_bIsPlayingWithRed,i.iPlayerId===this.g_iPlayerID,i.iId)}finally{await this.m_Lines.EndBulkStorage()}}IsPointBelongingToLine(t,i,e){for(const s of t){const[t,n]=s.split(",");if(t===i&&n===e)return!0}return!1}async SurroundOponentPoints(){const t=this.m_Line.GetPointsArray();if(o(t.slice(0,-1).map((t=>t.x+"_"+t.y)))||t[0].x!==t[t.length-1].x||t[0].y!==t[t.length-1].y)return{OwnedPoints:void 0,owned:"",path:"",errorDesc:"Points not unique"};let i,e,s;this.m_sDotColor===this.COLOR_RED?(i=this.COLOR_BLUE,e=n.POINT_OWNED_BY_RED,s=this.COLOR_OWNED_RED):(i=this.COLOR_RED,e=n.POINT_OWNED_BY_BLUE,s=this.COLOR_OWNED_BLUE);let a="",l="",h="",c=[];for(const o of await this.m_Points.values())if(void 0!==o&&o.GetFillColor()===i&&[n.POINT_FREE_BLUE,n.POINT_FREE_RED].includes(o.GetStatus())){let{x:i,y:n}=o.GetPosition();!1!==r(t,i,n)&&(l+=`${h}${i},${n}`,h=" ",c.push({point:o,revertStatus:o.GetStatus(),revertFillColor:o.GetFillColor(),revertStrokeColor:o.GetStrokeColor()}),o.SetStatus(e,!0),o.SetFillColor(s),o.SetStrokeColor(s))}return""!==l&&(a=t.map(function(t){let i=t.x,e=t.y;return null===i||null===e?"":`${i},${e}`}.bind(this)).join(" ")),{OwnedPoints:c,owned:l,PathPoints:[],path:a,errorDesc:"No surrounded points"}}async IsPointOutsideAllPaths(t,i){const e=await this.m_Lines.all();for(const s of e){const e=s.GetPointsArray();if(!1!==r(e,t,i))return!1}return!0}CreateXMLWaitForPlayerRequest(){}CreateXMLPutPointRequest(t,i){return new _(0,this.g_iGameID,this.g_iPlayerID,t,i,this.m_bIsPlayingWithRed?n.POINT_FREE_RED:n.POINT_FREE_BLUE,0)}CreateXMLPutPathRequest(t){return new u(0,this.g_iGameID,this.g_iPlayerID,t.path,t.owned)}async SendAsyncData(t,i){switch(t.GetKind()){case h.POINT:e(_.Format("some player",t)),this.m_bHandlingEvent=!0;try{const i=await this.g_SignalRConnection.invoke("ClientToServerPoint",t);await this.ReceivedPointProcessing(i)}catch(t){s(t.toString()),void 0!==i&&i()}break;case h.PATH:e(u.Format("some player",t)),this.m_bHandlingEvent=!0;try{const i=await this.g_SignalRConnection.invoke("ClientToServerPath",t);if(Object.prototype.hasOwnProperty.call(i,"WinningPlayerId")||Object.prototype.hasOwnProperty.call(i,"winningPlayerId")){let t=i;this.ReceivedWinProcessing(t)}else{if(!Object.prototype.hasOwnProperty.call(i,"PointsAsString")&&!Object.prototype.hasOwnProperty.call(i,"pointsAsString"))throw new Error("ClientToServerPath bad GetKind!");{let t=i;await this.ReceivedPathProcessing(t)}}}catch(t){s(t.toString()),void 0!==i&&i()}break;case h.PING:try{await this.g_SignalRConnection.invoke("ClientToServerPing",t),document.querySelector(this.m_sMsgInputSel).value="",document.querySelector(this.m_sMsgSendButtonSel).disabled="disabled"}catch(t){s(t.toString())}break;case h.STOP_AND_DRAW:try{await this.g_SignalRConnection.invoke("ClientToServerStopAndDraw",t),this.m_bDrawLines=!0,this.m_iLastX=this.m_iLastY=-1,this.m_Line=null,this.m_bIsPlayerActive=!0,this.m_StopAndDraw.disabled="disabled"}catch(t){s(t.toString())}break;default:s("unknown object")}}CountDownReachedHandler(t){t&&(t.innerHTML=""),this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled",this.m_Timer=null,this.m_bIsPlayerActive=!1}async ReceivedPointProcessing(t){const i=t.iX,e=t.iY,s=void 0!==t.Status?t.Status:t.status;this.m_sLastMoveGameTimeStamp=(void 0!==t.TimeStamp?t.TimeStamp:new Date(t.timeStamp)).toISOString(),await this.SetPoint(i,e,s,t.iPlayerId),this.g_iPlayerID!==t.iPlayerId?(this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&await this.OnCancelClick(),this.m_StopAndDraw.disabled="",this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)):(this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_CancelPath.disabled="disabled",this.m_StopAndDraw.disabled="",this.m_StopAndDraw.value="Stop and Draw",this.m_Timer?this.m_Timer.Reset(this.m_TimerOpts):this.m_Timer=new I(this.m_TimerOpts),!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()),this.m_bHandlingEvent=!1}async ReceivedPathProcessing(t){if(this.m_sLastMoveGameTimeStamp=(void 0!==t.TimeStamp?t.TimeStamp:new Date(t.timeStamp)).toISOString(),this.g_iPlayerID!==t.iPlayerId){const i=t.PointsAsString||t.pointsAsString,e=t.OwnedPointsAsString||t.ownedPointsAsString;await this.SetPath(i,this.m_sDotColor===this.COLOR_RED,!1,t.iId);const s=e.split(" "),o=this.m_sDotColor===this.COLOR_RED?n.POINT_OWNED_BY_RED:n.POINT_OWNED_BY_BLUE,r=this.m_sDotColor===this.COLOR_RED?this.COLOR_OWNED_RED:this.COLOR_OWNED_BLUE;for(const t of s){let[i,e]=t.split(",");i=parseInt(i),e=parseInt(e);const s=await this.m_Points.get(e*this.m_iGridWidth+i);void 0!==s&&(s.SetStatus(o),s.SetFillColor(r),s.SetStrokeColor(r),await this.m_Points.set(e*this.m_iGridWidth+i,s))}this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&await this.OnCancelClick(),this.m_StopAndDraw.disabled=""}else{let i=this.m_Line.GetPointsArray(),e=i[0].x,s=i[0].y;const o=await this.m_Points.get(s*this.m_iGridWidth+e);void 0!==o&&o.SetStatus(n.POINT_IN_PATH),this.m_Line.SetWidthAndColor(this.m_LineStrokeWidth,this.m_sDotColor),this.m_Line.SetID(t.iId),await this.m_Lines.push(this.m_Line),this.m_iLastX=this.m_iLastY=-1,this.m_Line=null;i=(t.OwnedPointsAsString||t.ownedPointsAsString).split(" ");const r=this.m_sDotColor===this.COLOR_RED?n.POINT_OWNED_BY_RED:n.POINT_OWNED_BY_BLUE,a=this.m_sDotColor===this.COLOR_RED?this.COLOR_OWNED_RED:this.COLOR_OWNED_BLUE;for(const t of i){let[i,e]=t.split(",");i=parseInt(i),e=parseInt(e);const s=await this.m_Points.get(e*this.m_iGridWidth+i);void 0!==s&&(s.SetStatus(r),s.SetFillColor(a),s.SetStrokeColor(a),await this.m_Points.set(e*this.m_iGridWidth+i,s))}this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled",!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()}this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_bHandlingEvent=!1,this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)}ReceivedWinProcessing(t){this.ShowMobileStatus("Win situation"),this.m_bHandlingEvent=!1;let i=y.Format(t);const e=void 0!==t.Status?t.Status:t.status,s=t.WinningPlayerId||t.winningPlayerId;((e===m.RED_WINS||e===m.GREEN_WINS)&&s>0||e===m.DRAW_WIN)&&(alert(""===i?"Game won!":i),window.location.href="GamesList")}Check4Win(t,i,e,s){let o,r;switch(this.GameType){case c.FIRST_CAPTURE:return t.length>0?this.m_bIsPlayingWithRed?m.RED_WINS:m.GREEN_WINS:i.length>0?this.m_bIsPlayingWithRed?m.GREEN_WINS:m.RED_WINS:m.NO_WIN;case c.FIRST_5_CAPTURES:return o=this.m_bIsPlayingWithRed?n.POINT_OWNED_BY_BLUE:n.POINT_OWNED_BY_RED,r=s.filter((function(t){return null!==t.iEnclosingPathId&&t.GetStatus()===o})).length,r>=5?this.m_bIsPlayingWithRed?m.GREEN_WINS:m.RED_WINS:(o=this.m_bIsPlayingWithRed?n.POINT_OWNED_BY_RED:n.POINT_OWNED_BY_BLUE,r=e.filter((function(t){return null!==t.iEnclosingPathId&&t.GetStatus()===o})).length,r>=5?this.m_bIsPlayingWithRed?m.RED_WINS:m.GREEN_WINS:m.NO_WIN);case c.FIRST_5_PATHS:return i.length>=5?this.m_bIsPlayingWithRed?m.GREEN_WINS:m.RED_WINS:t.length>=5?this.m_bIsPlayingWithRed?m.RED_WINS:m.GREEN_WINS:m.NO_WIN;case c.FIRST_5_ADVANTAGE_PATHS:{const e=t.length-i.length;if(e>=5)return this.m_bIsPlayingWithRed?m.RED_WINS:m.GREEN_WINS;if(e<=-5)return this.m_bIsPlayingWithRed?m.GREEN_WINS:m.RED_WINS}return m.NO_WIN;default:throw new Error("Wrong game type")}}ShowMobileStatus(t=""){"???"===this.m_Player2Name.innerHTML?this.m_bIsPlayerActive?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayerActive?this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_GameStatus.style.color=this.COLOR_RED,null!==t&&""!==t?this.Debug(t,0):this.Debug("",0)}async OnMouseMove(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return void(this.iConnErrCount<=0&&!this.m_bIsPlayerActive&&(this.m_Screen.style.cursor="wait"));const i=this.SvgVml.ToCursorPoint(t.clientX,t.clientY);let e=i.x+.5,s=i.y+.5;e=parseInt(e),s=parseInt(s);let o=e,r=s;if(this.CursorPos.x===o&&this.CursorPos.y===r||(this.m_MouseCursorOval.move(o,r,this.m_PointRadius),this.m_MouseCursorOval.Show(),this.Debug(`[${e},${s}]`,1),this.CursorPos.x=o,this.CursorPos.y=r),this.m_bDrawLines){if(null!==this.m_Line?this.m_Screen.style.cursor="move":this.m_Screen.style.cursor="crosshair",!0===this.m_bMouseDown&&(this.m_iLastX!==e||this.m_iLastY!==s)&&Math.abs(parseInt(this.m_iLastX-e))<=1&&Math.abs(parseInt(this.m_iLastY-s))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),i=await this.m_Points.get(s*this.m_iGridWidth+e);if(this.m_CancelPath.disabled=this.m_Line.GetLength()>=2?"":"disabled",void 0!==t&&void 0!==i&&t.GetFillColor()===this.m_sDotColor&&i.GetFillColor()===this.m_sDotColor){const a=this.m_Line.ContainsPoint(o,r);if(a<1&&i.GetStatus()!==n.POINT_STARTING&&!0===this.m_Line.AppendPoints(o,r))i.SetStatus(n.POINT_IN_PATH,!0),this.m_iLastX=e,this.m_iLastY=s;else if(1===a&&i.GetStatus()===n.POINT_STARTING&&!0===this.m_Line.AppendPoints(o,r)){const t=await this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPathRequest(t),(async()=>{await this.OnCancelClick(),t.OwnedPoints.forEach((t=>{const i=t.point,e=t.revertFillColor,s=t.revertStrokeColor;i.RevertOldStatus(),i.SetFillColor(e),i.SetStrokeColor(s)})),this.m_bHandlingEvent=!1}))):this.Debug(`${t.errorDesc?t.errorDesc:"Wrong path"}, cancell it or refresh page`,0),this.m_iLastX=e,this.m_iLastY=s}else a>=1&&t.GetStatus()===n.POINT_IN_PATH&&this.m_Line.GetPointsString().endsWith(`${this.m_iLastX},${this.m_iLastY}`)&&(this.m_Line.GetLength()>2?(t.RevertOldStatus(),this.m_Line.RemoveLastPoint(),this.m_iLastX=e,this.m_iLastY=s):await this.OnCancelClick())}}else{let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),i=await this.m_Points.get(s*this.m_iGridWidth+e);if(void 0!==t&&void 0!==i&&t.GetFillColor()===this.m_sDotColor&&i.GetFillColor()===this.m_sDotColor){const a=this.m_iLastX,l=this.m_iLastY;this.m_Line=this.SvgVml.CreatePolyline(2*this.m_LineStrokeWidth,a+","+l+" "+o+","+r,this.DRAWING_PATH_COLOR),this.m_CancelPath.disabled="",t.SetStatus(n.POINT_STARTING,!0),i.SetStatus(n.POINT_IN_PATH,!0),this.m_iLastX=e,this.m_iLastY=s}}}else this.m_Screen.style.cursor="crosshair"}async OnMouseDown(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return;const i=this.SvgVml.ToCursorPoint(t.clientX,t.clientY);let e=i.x+.5,s=i.y+.5;if(e=this.m_iMouseX=parseInt(e),s=this.m_iMouseY=parseInt(s),this.m_bMouseDown=!0,this.m_bDrawLines){if((this.m_iLastX!==e||this.m_iLastY!==s)&&Math.abs(parseInt(this.m_iLastX-e))<=1&&Math.abs(parseInt(this.m_iLastY-s))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),i=await this.m_Points.get(s*this.m_iGridWidth+e);if(this.m_CancelPath.disabled=this.m_Line.GetLength()>=2?"":"disabled",void 0!==t&&void 0!==i&&t.GetFillColor()===this.m_sDotColor&&i.GetFillColor()===this.m_sDotColor){const o=e,r=s,a=this.m_Line.ContainsPoint(o,r);if(a<1&&i.GetStatus()!==n.POINT_STARTING&&!0===this.m_Line.AppendPoints(o,r))i.SetStatus(n.POINT_IN_PATH,!0),this.m_iLastX=e,this.m_iLastY=s;else if(1===a&&i.GetStatus()===n.POINT_STARTING&&!0===this.m_Line.AppendPoints(o,r)){const t=await this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPathRequest(t),(async()=>{await this.OnCancelClick(),t.OwnedPoints.forEach((t=>{const i=t.point,e=t.revertFillColor,s=t.revertStrokeColor;i.RevertOldStatus(),i.SetFillColor(e),i.SetStrokeColor(s)})),this.m_bMouseDown=!1,this.m_bHandlingEvent=!1}))):this.Debug(`${t.errorDesc?t.errorDesc:"Wrong path"}, cancell it or refresh page`,0),this.m_iLastX=e,this.m_iLastY=s}else a>=1&&t.GetStatus()===n.POINT_IN_PATH&&this.m_Line.GetPointsString().endsWith(`${this.m_iLastX},${this.m_iLastY}`)&&(this.m_Line.GetLength()>2?(t.RevertOldStatus(),this.m_Line.RemoveLastPoint(),this.m_iLastX=e,this.m_iLastY=s):await this.OnCancelClick())}}else{let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),i=await this.m_Points.get(s*this.m_iGridWidth+e);if(void 0!==t&&void 0!==i&&t.GetFillColor()===this.m_sDotColor&&i.GetFillColor()===this.m_sDotColor){const o=this.m_iLastX,r=this.m_iLastY,a=e,l=s;this.m_Line=this.SvgVml.CreatePolyline(2*this.m_LineStrokeWidth,o+","+r+" "+a+","+l,this.DRAWING_PATH_COLOR),this.m_CancelPath.disabled="",t.SetStatus(n.POINT_STARTING,!0),i.SetStatus(n.POINT_IN_PATH,!0)}this.m_iLastX=e,this.m_iLastY=s}else if(this.m_iLastX<0||this.m_iLastY<0){let t=await this.m_Points.get(s*this.m_iGridWidth+e);void 0!==t&&t.GetFillColor()===this.m_sDotColor&&(this.m_iLastX=e,this.m_iLastY=s)}}else{this.m_iLastX=e,this.m_iLastY=s;const t=e,i=s;if(void 0!==await this.m_Points.get(i*this.m_iGridWidth+t))return void this.Debug("Wrong point - already existing",0);if(!await this.IsPointOutsideAllPaths(t,i))return void this.Debug("Wrong point, Point is not outside all paths",0);this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPointRequest(t,i),(()=>{this.m_bMouseDown=!1,this.m_bHandlingEvent=!1}))}}OnMouseUp(){this.m_bMouseDown=!1}OnMouseLeave(){this.m_MouseCursorOval.Hide()}async OnStopAndDraw(t){if(this.m_Timer)null===this.m_Line&&await this.SendAsyncData(new p);else{null!==this.m_Line&&await this.OnCancelClick(),this.m_bDrawLines=!this.m_bDrawLines;const i=t.target;this.m_bDrawLines?i.value="Draw dot":i.value="Draw line",this.m_iLastX=this.m_iLastY=-1,this.m_Line=null}}async OnCancelClick(){if(this.m_bDrawLines){if(null!==this.m_Line){const t=this.m_Line.GetPointsArray();this.m_CancelPath.disabled="disabled";for(const i of t){const{x:t,y:e}=i;if(null===t||null===e)continue;const s=await this.m_Points.get(e*this.m_iGridWidth+t);void 0!==s&&s.RevertOldStatus()}this.SvgVml.RemovePolyline(this.m_Line),this.m_Line=null}this.m_iLastX=this.m_iLastY=-1,this.m_Timer&&(this.m_StopAndDraw.disabled="disabled"),this.Debug("",0)}}CountPointsDebug(t){let i="";[{query:"circle:not([z-index])",display:"circles: %s, "},{query:"polyline",display:"lines: %s, "},{query:"circle[data-status='POINT_OWNED_BY_RED']",display:"intercepted(P1:%s, "},{query:"circle[data-status='POINT_OWNED_BY_BLUE']",display:"P2:%s)"}].forEach((function(t){const e=document.querySelectorAll(t.query);i+=t.display.replace("%s",e.length)})),document.querySelector(t).innerHTML="SVGs by tags: "+i}async RunAIWorker(t){return new Promise(((i,e)=>{this.m_Worker=this.m_Worker??new Worker("../js/AIWorker.Bundle.js"),this.m_Worker.onerror=function(){this.m_Worker.terminate(),this.m_Worker=null,e(new Error("no data"))},this.m_Worker.onmessage=function(t){const n=t.data;switch(n.operation){case"BUILD_GRAPH":case"CONCAVEMAN":case"MARK_ALL_CYCLES":i(n);break;default:s(`unknown params.operation = ${n.operation}`),e(new Error(`unknown params.operation = ${n.operation}`))}},t&&t(this.m_Worker)}))}async OnTestBuildCurrentGraph(t){t.preventDefault();const i=await this.RunAIWorker((t=>{const i=Array.from(this.m_Points.store.entries()).map((([t,i])=>({key:t,value:i.Serialize()}))),e=this.m_Lines.store.map((t=>t.Serialize()));t.postMessage({operation:"BUILD_GRAPH",boardSize:{iGridWidth:this.m_iGridWidth,iGridHeight:this.m_iGridHeight},state:this.GetGameStateForIndexedDb(),points:i,paths:e})}));e("Message received from worker:"),e(i)}async OnTestConcaveman(t){t.preventDefault();const i=await this.RunAIWorker((t=>{const i=Array.from(this.m_Points.store.entries()).map((([t,i])=>({key:t,value:i.Serialize()})));t.postMessage({operation:"CONCAVEMAN",boardSize:{iGridWidth:this.m_iGridWidth,iGridHeight:this.m_iGridHeight},state:this.GetGameStateForIndexedDb(),points:i})}));if(i.convex_hull&&i.convex_hull.length>0){const t=i.convex_hull;this.SvgVml.CreatePolyline(2*this.m_LineStrokeWidth,t.map((([t,i])=>parseInt(t)+","+parseInt(i))).join(" "),"green"),e(`convex_hull = ${t}`);const s=i.cw_sorted_verts,n=O();for(const t of s){const{x:i,y:e}=t,s=document.querySelector(`svg > circle[cx="${i}"][cy="${e}"]`);s&&(s.SetStrokeColor(n),s.SetFillColor(n),s.SetZIndex(100),s.setAttribute("r",6/this.m_iGridSpacingX)),await l(50)}}}async OnTestMarkAllCycles(t){t.preventDefault(),e(await this.MarkAllCycles(await this.BuildGraph(),this.COLOR_RED))}async OnTestGroupPoints(t){t.preventDefault();const i=await this.m_Points.get(this.m_iMouseY*this.m_iGridWidth+this.m_iMouseX);void 0!==i?(await this.GroupPointsRecurse([],i),this.workingCyclePolyLine&&(this.SvgVml.RemovePolyline(this.workingCyclePolyLine),this.workingCyclePolyLine=null),this.lastCycle.forEach((t=>{this.SvgVml.CreatePolyline(2*this.m_LineStrokeWidth,t.map((function(t){const i=t.GetPosition();return`${i.x},${i.y}`})).join(" "),O())})),e("game.lastCycle = "),e(this.lastCycle),this.lastCycle=[]):e("!!!You need to click first 'blue' starting point with mouse!!!")}async OnTestFindSurroundablePoints(t){t.preventDefault();const i=this.COLOR_RED,s=this.COLOR_BLUE;let o;const r=await this.m_Points.get(this.m_iMouseY*this.m_iGridWidth+this.m_iMouseX);o=void 0!==r?[r]:[...await this.m_Points.values()];for(const t of o)if(void 0!==t&&t.GetFillColor()===i&&[n.POINT_FREE_RED,n.POINT_IN_PATH].includes(t.GetStatus())){const{x:i,y:r}=t.GetPosition();if(!1===await this.IsPointOutsideAllPaths(i,r)){e("!!!Point inside path!!!");continue}const l=O(),h=3,c=this.SvgVml.CreateOval(h);c.move(i,r,h),c.SetStrokeColor(l),c.StrokeWeight(.1),c.SetFillColor("transparent");const m=[];for(const t of await this.m_Points.values())if(void 0!==t&&t.GetFillColor()===s&&[n.POINT_FREE_BLUE,n.POINT_IN_PATH].includes(t.GetStatus())){const{x:e,y:s}=t.GetPosition();if(!1===await this.IsPointOutsideAllPaths(e,s))continue;if(0<=this.SvgVml.IsPointInCircle({x:e,y:s},{x:i,y:r},h)){const i=document.querySelector(`svg > circle[cx="${e}"][cy="${s}"]`);i&&(i.SetStrokeColor(l),i.SetFillColor(l),i.setAttribute("r",6/this.m_iGridSpacingX),t.x=e,t.y=s,m.push(t))}}if(m.length>0){const t=a(m);o.length<=1&&await this.DisplayPointsProgressWithDelay(t,250),e("circle sorted possible path points: "),e(t)}}}async OnTestDFS2(t){t.preventDefault(),await this.DFS2(await this.BuildGraph(),this.COLOR_RED)}async PrepareDrawing(t,e,s,n,o,r,a,l,h,c,m,d,_,u,S=125){if(this.m_bIsWon=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=S,this.m_Timer=null,this.m_WaitStartTime=null,this.m_iSlowdownLevel=0,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.m_Line=null,this.m_Debug=document.getElementById("debug0"),this.m_Player2Name=document.querySelector(e),this.m_GameStatus=document.querySelector(s),this.m_SurrenderButton=document.querySelector(n),this.m_CancelPath=document.querySelector(o),this.m_StopAndDraw=document.querySelector(a),this.m_sMsgInputSel=l,this.m_sMsgListSel=h,this.m_sMsgSendButtonSel=c,this.m_Screen=document.querySelector(t),!this.m_Screen)return void alert("no board");this.m_iPosX=this.m_Screen.offsetLeft,this.m_iPosY=this.m_Screen.offsetTop;let[P,g]=[...this.m_Screen.classList].find((t=>t.startsWith("boardsize"))).split("-")[1].split("x");this.m_iGridWidth=parseInt(P),this.m_iGridHeight=parseInt(g);let y=this.m_Screen.clientWidth,p=this.m_Screen.clientHeight,w=null;p<=0&&(p=16*this.m_iGridHeight,this.m_Screen.style.height=p+"px",w="100%"),this.m_iGridSpacingX=Math.ceil(y/this.m_iGridWidth),this.m_iGridSpacingY=Math.ceil(p/this.m_iGridHeight),this.m_PointRadius=4/this.m_iGridSpacingX,this.m_LineStrokeWidth=3/this.m_iGridSpacingX,this.m_sLastMoveGameTimeStamp=m,this.m_sVersion=_,this.rAF_StartTimestamp=null,this.rAF_FrameID=null,this.workingCyclePolyLine=null,this.lastCycle=[],this.SvgVml=new i.SvgVml,null===this.SvgVml.CreateSVGVML(this.m_Screen,w,w,{iGridWidth:this.m_iGridWidth,iGridHeight:this.m_iGridHeight})&&alert("SVG is not supported!");const C=new i.GameStateStore(d,this.CreateScreenPointFromIndexedDb.bind(this),this.CreateScreenPathFromIndexedDb.bind(this),this.GetGameStateForIndexedDb.bind(this),this.m_sVersion);if(this.m_Lines=C.GetPathStore(),this.m_Points=C.GetPointStore(),this.m_bPointsAndPathsLoaded=await C.PrepareStore(),!1===this.m_bViewOnly){if(null===this.m_MouseCursorOval&&(this.m_MouseCursorOval=this.SvgVml.CreateOval(this.m_PointRadius),this.m_MouseCursorOval.SetFillColor(this.m_sDotColor),this.m_MouseCursorOval.SetStrokeColor(this.m_sDotColor),this.m_MouseCursorOval.SetZIndex(-1),this.m_MouseCursorOval.Hide()),this.m_Screen.onmousedown=this.OnMouseDown.bind(this),this.m_Screen.onmousemove=this.OnMouseMove.bind(this),this.m_Screen.onmouseup=this.OnMouseUp.bind(this),this.m_Screen.onmouseleave=this.OnMouseLeave.bind(this),this.m_CancelPath.onclick=this.OnCancelClick.bind(this),this.m_StopAndDraw.onclick=this.OnStopAndDraw.bind(this),!1===this.m_bIsCPUGame)document.querySelector(this.m_sMsgInputSel).disabled="",document.getElementById("testArea").textContent="";else{let t=0;u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestBuildCurrentGraph.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestConcaveman.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestMarkAllCycles.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestGroupPoints.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestFindSurroundablePoints.bind(this)),u.length>t&&(document.querySelector(u[t++]).onclick=this.OnTestDFS2.bind(this))}this.m_SurrenderButton.disabled="","???"===this.m_Player2Name.innerHTML?(this.ShowMobileStatus("Waiting for other player to connect"),this.m_Screen.style.cursor="wait"):(this.m_SurrenderButton.value="surrender",this.m_bIsPlayerActive?(this.ShowMobileStatus("Your move"),this.m_Screen.style.cursor="crosshair",this.m_StopAndDraw.disabled=""):(this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait"),this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line")}else document.querySelector(r).innerHTML="back to Game List"}GetRandomInt(t,i){return t=Math.max(0,Math.min(t,this.m_iGridWidth)),i=Math.max(0,Math.min(i,this.m_iGridWidth)),t=Math.ceil(t),i=Math.floor(i),Math.floor(Math.random()*(i-t))+t}async FindRandomCPUPoint(){let t,i,e=100;for(;--e>0&&(t=this.GetRandomInt(0,this.m_iGridWidth),i=this.GetRandomInt(0,this.m_iGridHeight),await this.m_Points.has(i*this.m_iGridWidth+t)||!await this.IsPointOutsideAllPaths(t,i)););return new _(0,this.g_iGameID,-1,t,i,n.POINT_FREE_BLUE,0)}async CalculateCPUCentroid(){let t,i,s=0,o=0,r=0;const a=this.COLOR_RED;for(const t of await this.m_Points.values())if(void 0!==t&&t.GetFillColor()===a&&t.GetStatus()===n.POINT_FREE_RED){const{x:i,y:e}=t.GetPosition();s+=i,o+=e,r++}if(r<=0)return null;s=parseInt(s/r),o=parseInt(o/r),t=s,i=o;let l="";const h=new Set;let c=0,m=2;for(;++c<=50;){if(h.add(`${t}_${i}`),!1===await this.m_Points.has(i*this.m_iGridWidth+t)&&!0===await this.IsPointOutsideAllPaths(t,i)){l+=`checking coords ${t}_${i} succeed\n`;break}l+=`checking coords ${t}_${i} failed #${c}\n`,c>=25&&(m*=2);let e=50;do{t=this.GetRandomInt(s-m,s+m+1),i=this.GetRandomInt(o-m,o+m+1)}while(--e>0&&h.has(`${t}_${i}`))}if(c>=50)return l+="finding centroid failed\n",e(l),null;e(l);return new _(0,this.g_iGameID,-1,t,i,n.POINT_FREE_BLUE,0)}IsGraphCyclic(t){const i=t.vertices,s=function(t,i){t.visited=!0;for(let n of t.adjacents)if(n.visited){if(n!==i){const{x:t,y:i}=n.GetPosition();return e(`cycle found at ${t},${i}`),!0}}else if(s(n,t))return!0;return!1}.bind(this);for(let t=0;t<i.length;t++)i[t].visited=!1;for(let t=0;t<i.length;t++)if(!i[t].visited&&s(i[t],-1))return!0;return!1}async BuildGraph({freePointStatus:t=n.POINT_FREE_BLUE,cpufillCol:i="blue"}={}){const e=[],s=new Map,o=function(t,e){const s=e.GetStatus();return!(!t.includes(s)||e.GetFillColor()!==i)},r=async function(i,n,r,a,l){if(n>=0&&n<this.m_iGridWidth&&r>=0&&r<this.m_iGridHeight){const h=await this.m_Points.get(r*this.m_iGridWidth+n);if(h&&!0===o([t],h)&&!1===s.has(`${a},${l}_${n},${r}`)&&!1===s.has(`${n},${r}_${a},${l}`)){const t={from:i,to:h};if(s.set(`${a},${l}_${n},${r}`,t),!1===e.includes(i))i.adjacents=[h],e.push(i);else{const t=e.find((t=>t===i));t.adjacents.push(h)}if(!1===e.includes(h))h.adjacents=[i],e.push(h);else{const t=e.find((t=>t===h));t.adjacents.push(i)}}}}.bind(this);for(const i of await this.m_Points.values())if(i&&!0===o([t,this.POINT_STARTING,this.POINT_IN_PATH],i)){const{x:t,y:e}=i.GetPosition();await r(i,t+1,e,t,e),await r(i,t-1,e,t,e),await r(i,t,e-1,t,e),await r(i,t,e+1,t,e),await r(i,t-1,e-1,t,e),await r(i,t+1,e-1,t,e),await r(i,t-1,e+1,t,e),await r(i,t+1,e+1,t,e)}return{vertices:e,edges:Array.from(s.values()),getNeighbors:function(t){const i=this.vertices.find((i=>i===t));return i?i.adjacents:null}}}async MarkAllCycles(t,i){const s=t.vertices,o=s.length;let h=new Array(o);const c=new Array(o),m=new Array(o),d=new Array(o);for(let t=0;t<o;t++)c[t]=[],h[t]=[];const _=async function(t,i){if(2===m[t])return;if(1===m[t]){S++;let e=i;for(c[e].push(S);e!==t;)e=d[e],c[e].push(S);return}d[t]=i,m[t]=1;const e=s[t];if(e){const{x:i,y:n}=e.GetPosition(),o=await this.m_Points.get(n*this.m_iGridWidth+i);o.SetStrokeColor("black"),o.SetFillColor("black"),o.setAttribute("r",6/16),await l(25);for(const i of e.adjacents){const e=s.indexOf(i);e!==d[t]&&await _(e,t)}}m[t]=2}.bind(this),u=async function(t,o){for(let i=0;i<t;i++){const t=o[i];if(void 0!==t&&t.length>0)for(let e=0;e<t.length;e++){const s=h[t[e]];void 0!==s&&s.push(i)}}h=h.filter((t=>t.length>=4)).sort(((t,i)=>i.length-t.length));const c=[];for(const t of await this.m_Points.values())if(void 0!==t&&t.GetFillColor()===i&&n.POINT_FREE_RED===t.GetStatus()){const{x:i,y:e}=t.GetPosition();if(!1===await this.IsPointOutsideAllPaths(i,e))continue;await this.m_Points.get(e*this.m_iGridWidth+i)&&c.push({x:i,y:e})}const m=[];for(let t=0;t<=S;t++){const i=h[t];if(i&&i.length>0){let n=`Cycle Number ${t}: `,o=[];const h="var(--bs-teal)",d=i.map(function(t){return s[t].GetPosition()}.bind(this)),_=a(d);for(const t of _){const{x:i,y:e}=t,s=await this.m_Points.get(e*this.m_iGridWidth+i);s&&(n+=`(${i},${e})`,s.SetStrokeColor(h),s.SetFillColor(h),s.setAttribute("r",6/this.m_iGridSpacingX)),await l(50)}let u="",S="";for(const t of c)if(!1!==r(_,t.x,t.y)){u+=`${S}(${t.x},${t.y})`;const i=await this.m_Points.get(t.y*this.m_iGridWidth+t.x);i&&(i.SetStrokeColor("var(--bs-yellow)"),i.SetFillColor("var(--bs-yellow)"),i.setAttribute("r",6/this.m_iGridSpacingX)),S=","}o.unshift(n),m.push(o),e(n+(""!==u?` possible intercepts: ${u}`:""));Array.from(document.querySelectorAll(`svg > circle[fill="${h}"][r="${6/this.m_iGridSpacingX}"]`)).forEach((t=>{t.SetStrokeColor(this.COLOR_BLUE),t.SetFillColor(this.COLOR_BLUE),t.setAttribute("r",6/this.m_iGridSpacingX)}))}}return m}.bind(this);let S=0,P=o;for(let t=0;t<o;t++)await _(t+1,t);return await u(P,c)}async DFS2(i,e){await t(i,i.vertices[0],{enterVertex:()=>{},leaveVertex:()=>{},showCycle:async(t,i)=>{(t=Object.values(t)).forEach((t=>{const{x:i,y:e}=t.GetPosition();t.x=i,t.y=e}));const e=a(t);await this.DisplayPointsProgressWithDelay(e,250)}})}async DisplayPointsProgressWithDelay(t,i=25){const e=t.map((t=>{const i=t.GetPosition();return`${i.x},${i.y}`})).join(" ");this.workingCyclePolyLine?this.workingCyclePolyLine.SetPoints(e):this.workingCyclePolyLine=this.SvgVml.CreatePolyline(2*this.m_LineStrokeWidth,e,"black"),await l(i)}async GroupPointsRecurse(t,i){if(void 0===i||t.includes(i)||t.length>60||this.lastCycle.length>3)return t;if(!1===[n.POINT_FREE_BLUE,n.POINT_STARTING,n.POINT_IN_PATH].includes(i.GetStatus())||i.GetFillColor()!==this.COLOR_BLUE)return t;const{x:e,y:s}=i.GetPosition();let o=null;if(t.length>0){o=t[t.length-1];const{x:n,y:r}=o.GetPosition();if(!(Math.abs(n-e)<=1&&Math.abs(r-s)<=1))return t;t.push(i)}else t.push(i);if(t.length>2&&(await this.DisplayPointsProgressWithDelay(t),t.length>=4)){const i=t[0].GetPosition();o=t[t.length-1];const{x:e,y:s}=o.GetPosition();if(Math.abs(e-i.x)<=1&&Math.abs(s-i.y)<=1){const i=t.slice();i.push(t[0]),this.lastCycle.push(i)}}const[r,a,l,h,c,m,d,_]=await Promise.all([this.m_Points.get(s*this.m_iGridWidth+e+1),this.m_Points.get(s*this.m_iGridWidth+e-1),this.m_Points.get((s-1)*this.m_iGridWidth+e),this.m_Points.get((s+1)*this.m_iGridWidth+e),this.m_Points.get((s-1)*this.m_iGridWidth+e-1),this.m_Points.get((s-1)*this.m_iGridWidth+e+1),this.m_Points.get((s+1)*this.m_iGridWidth+e-1),this.m_Points.get((s+1)*this.m_iGridWidth+e+1)]);r&&await this.GroupPointsRecurse(t,r),a&&await this.GroupPointsRecurse(t,a),l&&await this.GroupPointsRecurse(t,l),h&&await this.GroupPointsRecurse(t,h),c&&await this.GroupPointsRecurse(t,c),m&&await this.GroupPointsRecurse(t,m),d&&await this.GroupPointsRecurse(t,d),_&&await this.GroupPointsRecurse(t,_);const u=t.lastIndexOf(i);return-1!==u&&(t.splice(u),t.length>=2&&await this.DisplayPointsProgressWithDelay(t)),t}async GroupPointsIterative({g:t=null}={}){if(!t)return;const i=t.vertices,e=[];let s;for(const t of i){s=t;const i=[];(await this.GroupPointsRecurse(i,s)).length>0&&this.lastCycle.length>0&&(e.push(this.lastCycle),this.lastCycle=[])}return e}async rAFCallBack(t){null===this.rAF_StartTimestamp&&(this.rAF_StartTimestamp=t);const i=t-this.rAF_StartTimestamp;let e=null;const s=await this.CalculateCPUCentroid();e=null!==s?s:await this.FindRandomCPUPoint(),null===e?i<2e3&&(this.rAF_FrameID=window.requestAnimationFrame(this.rAFCallBack.bind(this))):await this.SendAsyncData(e,(()=>{this.m_bMouseDown=!1,this.m_bHandlingEvent=!1}))}StartCPUCalculation(){null===this.rAF_FrameID&&(this.rAF_FrameID=window.requestAnimationFrame(this.rAFCallBack.bind(this)))}}window.addEventListener("load",(async function(){const t=void 0!==window.msgpack5,h=window.gameOptions,c=h.inkBallHubName,m=h.iGameID;document.getElementById("gameID").innerHTML=m,document.querySelector(".container.inkgame form > input[type='hidden'][name='GameID']").value=m;const d=h.iPlayerID,_=parseInt(document.querySelector(".msgchat").dataset.otherplayerid)||null;document.getElementById("playerID").innerHTML=d;const u=h.bPlayingWithRed,S=h.bPlayerActive,P=h.gameType,g=t&&!0===h.isMessagePackProtocol?new signalR.protocols.msgpack.MessagePackHubProtocol:new signalR.JsonHubProtocol,y=h.servTimeoutMillis,p=h.isReadonly,w=h.pathAfterPointDrawAllowanceSecAmount,C=new Date(h.sLastMoveGameTimeStamp).toISOString(),I=h.version;await async function(){const t=-1!==Array.prototype.slice.call(document.getElementsByTagName("script")).map((t=>t.src)).find((t=>-1!==t.indexOf("inkball"))).split("/").pop().indexOf("min");i=t?await import("./shared.min.js"):await import("./shared.js"),e=i.LocalLog,s=i.LocalError,n=i.StatusEnum,o=i.hasDuplicates,r=i.pnpoly2,a=i.sortPointsClockwise,l=i.Sleep}();const O=new L(m,d,_,c,signalR.LogLevel.Warning,g,signalR.HttpTransportType.None,y,P,u,S,p,w);await O.PrepareDrawing("#screen","#Player2Name","#gameStatus","#SurrenderButton","#CancelPath","#Pause","#StopAndDraw","#messageInput","#messagesList","#sendButton",C,null===h.PointsAsJavaScriptArray,I,["#TestBuildGraph","#TestConcaveman","#TestMarkAllCycles","#TestGroupPoints","#TestFindSurroundablePoints","#TestDFS2"]),null!==h.PointsAsJavaScriptArray?(await O.StartSignalRConnection(!1),await O.SetAllPoints(h.PointsAsJavaScriptArray),await O.SetAllPaths(h.PathsAsJavaScriptArray)):await O.StartSignalRConnection(!0),document.getElementsByClassName("whichColor")[0].style.color=u?"red":"blue",O.CountPointsDebug("#debug2"),delete window.gameOptions,window.game=O})),window.addEventListener("beforeunload",(function(){window.game&&window.game.StopSignalRConnection()}));
//# sourceMappingURL=inkball.min.js.map
