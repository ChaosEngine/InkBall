"use strict";const t=Object.freeze({POINT_FREE_RED:-3,POINT_FREE_BLUE:-2,POINT_FREE:-1,POINT_STARTING:0,POINT_IN_PATH:1,POINT_OWNED_BY_RED:2,POINT_OWNED_BY_BLUE:3});function e(t){console.log(t)}function r(...t){let e="";for(let r=0;r<t.length;r++){const i=t[r];i&&(e+=i)}console.error(e)}const i="undefined"!=typeof myAlert?myAlert:(t,e=void 0)=>{window.alert(t),e&&e()};function n(t,e,r){const i=t.length;let n,s,o=!1;for(n=0,s=i-1;n<i;s=n++){const i=t[n],a=t[s];(i.y<=r&&r<a.y||a.y<=r&&r<i.y)&&e<(a.x-i.x)*(r-i.y)/(a.y-i.y)+i.x&&(o=!o)}return o}function s(t){return new Set(t).size!==t.length}async function o(t){return new Promise((e=>setTimeout(e,t)))}function a(t){const e=t.reduce(((t,e)=>(t.x+=e.x,t.y+=e.y,t)),{x:0,y:0});e.x/=t.length,e.y/=t.length;return t.map((t=>(t.angle=Math.atan2(t.y-e.y,t.x-e.x),t))).sort(((t,e)=>t.angle-e.angle))}async function l(t,e,r){for(const i of r){if(!1!==n(i.GetPointsArray(),t,e))return!1}return!0}class u{#t;#e;constructor(){const e="http://www.w3.org/2000/svg";let r,i,n,o=!1;if(this.#e=null,this.#t=null,self&&self.document&&self.document.createElementNS){const t=document.createElementNS(e,"svg");o=null!==t.x}o?(i=t=>t,n=function(t){switch(t){case"circle":case"line":case"polyline":return document.createElementNS(e,t);default:throw new Error(`unknown type ${t}`)}}):(i=function(){return{attributes:new Map,children:[],setAttributeNS:function(t,e,r){this.attributes.set(e,r)},appendChild:function(t){this.children.push(t)},removeChild:function(t){const e=this.children.indexOf(t);-1!==e&&this.children.splice(e,1)}}},self.SVGCircleElement=function(){this.attributes=new Map},SVGCircleElement.prototype.setAttribute=function(t,e){this.attributes.set(t,e)},SVGCircleElement.prototype.getAttribute=function(t){return this.attributes.get(t)},SVGCircleElement.prototype.removeAttribute=function(t){this.attributes.delete(t)},self.SVGPolylineElement=function(){this.attributes=new Map},SVGPolylineElement.prototype.setAttribute=function(t,e){this.attributes.set(t,e)},SVGPolylineElement.prototype.getAttribute=function(t){return this.attributes.get(t)},SVGPolylineElement.prototype.removeAttribute=function(t){this.attributes.delete(t)},n=function(t){switch(t){case"circle":return new SVGCircleElement;case"polyline":return new SVGPolylineElement;default:throw new Error(`unknown type ${t}`)}}),SVGCircleElement.prototype.move=function(t,e){this.setAttribute("cx",t),this.setAttribute("cy",e)},SVGCircleElement.prototype.GetStrokeColor=function(){return this.getAttribute("stroke")},SVGCircleElement.prototype.SetStrokeColor=function(t){this.setAttribute("stroke",t)},SVGCircleElement.prototype.GetPosition=function(){return void 0===this.cachedPosition&&(this.cachedPosition={x:parseInt(this.getAttribute("cx")),y:parseInt(this.getAttribute("cy"))}),this.cachedPosition},SVGCircleElement.prototype.GetFillColor=function(){return void 0===this.cachedFillColor&&(this.cachedFillColor=this.getAttribute("fill")),this.cachedFillColor},SVGCircleElement.prototype.SetFillColor=function(t){this.cachedFillColor=t,this.setAttribute("fill",t)},SVGCircleElement.prototype.GetStatus=function(){return void 0===this.cachedStatus&&(this.cachedStatus=l(this.getAttribute("data-status"))),this.cachedStatus},SVGCircleElement.prototype.SetStatus=function(e,r=!1){if(r){const r=l(this.getAttribute("data-status"));this.cachedStatus=e,this.setAttribute("data-status",a(this.cachedStatus)),r!==t.POINT_FREE&&r!==e&&this.setAttribute("data-old-status",a(r))}else this.cachedStatus=e,this.setAttribute("data-status",a(e))},SVGCircleElement.prototype.RevertOldStatus=function(){const t=this.getAttribute("data-old-status");return t?(this.removeAttribute("data-old-status"),this.setAttribute("data-status",t),this.cachedStatus=l(t),this.cachedStatus):-1},SVGCircleElement.prototype.GetZIndex=function(){return this.getAttribute("z-index")},SVGCircleElement.prototype.SetZIndex=function(t){this.setAttribute("z-index",t)},SVGCircleElement.prototype.Hide=function(){this.setAttribute("visibility","hidden")},SVGCircleElement.prototype.Show=function(){this.setAttribute("visibility","visible")},SVGCircleElement.prototype.StrokeWeight=function(t){this.setAttribute("stroke-width",t)},SVGCircleElement.prototype.Serialize=function(){const{x:t,y:e}=this.GetPosition();return{x:t,y:e,Status:this.GetStatus(),Color:this.GetFillColor()}},SVGPolylineElement.prototype.AppendPoints=function(t,e,r=1){const i=this.getAttribute("points"),n=i.split(" ");if(n.length<=1||!0===s(n))return!1;const o=n.at(-1).split(",");if(2!==o.length)return!1;const a=parseInt(o[0]),l=parseInt(o[1]);return t=parseInt(t),e=parseInt(e),Math.abs(a-t)<=r&&Math.abs(l-e)<=r&&(this.setAttribute("points",i+` ${t},${e}`),!0)},SVGPolylineElement.prototype.RemoveLastPoint=function(){const t=this.getAttribute("points").replace(/(\s\d+,\d+)$/,"");return this.setAttribute("points",t),t},SVGPolylineElement.prototype.ContainsPoint=function(t,e){const r=this.getAttribute("points"),i=`${t},${e}`;let n=0,s=-i.length;for(;(s=r.indexOf(i,s+i.length))>-1;)n++;return n},SVGPolylineElement.prototype.GetPointsString=function(){return this.getAttribute("points")},SVGPolylineElement.prototype.GetPointsArray=function(){return void 0===this.cachedPoints&&(this.cachedPoints=this.getAttribute("points").split(" ").map((function(t){const[e,r]=t.split(",");return{x:parseInt(e),y:parseInt(r)}}))),this.cachedPoints},SVGPolylineElement.prototype.SetPoints=function(t){this.setAttribute("points",t)},SVGPolylineElement.prototype.GetIsClosed=function(){const t=this.getAttribute("points").split(" ");return t[0]===t.at(-1)},SVGPolylineElement.prototype.GetLength=function(){return this.getAttribute("points").split(" ").length},SVGPolylineElement.prototype.SetWidthAndColor=function(t,e){this.setAttribute("stroke",e),this.setAttribute("fill",e),this.setAttribute("stroke-width",t)},SVGPolylineElement.prototype.GetID=function(){return parseInt(this.getAttribute("data-id"))},SVGPolylineElement.prototype.SetID=function(t){this.setAttribute("data-id",t)},SVGPolylineElement.prototype.GetFillColor=function(){return this.getAttribute("fill")},SVGPolylineElement.prototype.Serialize=function(){return{iId:this.GetID(),Color:this.GetFillColor(),PointsAsString:this.GetPointsString()}},this.CreateSVGVML=function(t,e,n,{iGridWidth:s,iGridHeight:a},l){return this.#e=i(t),e&&this.#e.setAttributeNS(null,"width",e),n&&this.#e.setAttributeNS(null,"height",n),t&&(void 0!==s&&void 0!==a&&this.#e.setAttribute("viewBox",`0 0 ${s} ${a}`),this.#t=this.#e.createSVGPoint()),r=l,o?this.#e:null},this.CreatePolyline=function(t,e,i=void 0){const s=n("polyline");return void 0!==r&&s.setAttribute("shape-rendering",!0===r?"auto":"optimizeSpeed"),void 0!==i&&s.setAttribute("stroke-width",i),e&&(s.setAttribute("stroke",e),s.setAttribute("fill",e)),t&&s.setAttribute("points",t),s.setAttribute("data-id",0),this.#e.appendChild(s),s},this.CreateOval=function(e=void 0){const i=n("circle");return void 0!==r&&i.setAttribute("shape-rendering",!0===r?"auto":"optimizeSpeed"),void 0!==e&&i.setAttribute("r",e),i.setAttribute("data-status",a(t.POINT_FREE)),this.#e.appendChild(i),i};const a=function(e){switch(e){case t.POINT_FREE_RED:return Object.keys(t)[0];case t.POINT_FREE_BLUE:return Object.keys(t)[1];case t.POINT_FREE:return Object.keys(t)[2];case t.POINT_STARTING:return Object.keys(t)[3];case t.POINT_IN_PATH:return Object.keys(t)[4];case t.POINT_OWNED_BY_RED:return Object.keys(t)[5];case t.POINT_OWNED_BY_BLUE:return Object.keys(t)[6];default:throw new Error("bad status enum value")}},l=function(e){switch(e.toUpperCase()){case Object.keys(t)[0]:return t.POINT_FREE_RED;case Object.keys(t)[1]:return t.POINT_FREE_BLUE;case Object.keys(t)[2]:return t.POINT_FREE;case Object.keys(t)[3]:return t.POINT_STARTING;case Object.keys(t)[4]:return t.POINT_IN_PATH;case Object.keys(t)[5]:return t.POINT_OWNED_BY_RED;case Object.keys(t)[6]:return t.POINT_OWNED_BY_BLUE;default:throw new Error("bad status enum string")}}}RemoveOval(t){this.#e.removeChild(t)}RemovePolyline(t){this.#e.removeChild(t)}DeserializeOval(t,e=void 0){let{x:r,y:i,Status:n,Color:s}=t;r=parseInt(r),i=parseInt(i);const o=this.CreateOval(e);return o.move(r,i),o.SetFillColor(s),o.SetStatus(n),o}DeserializePolyline(t,e=void 0){const{iId:r,Color:i,PointsAsString:n}=t,s=this.CreatePolyline(n,i,e);return s.SetID(r),s}ToCursorPoint(t,e){this.#t.x=t,this.#t.y=e;return this.#t.matrixTransform(this.#e.getScreenCTM().inverse())}IsPointInCircle(t,e,r,i=4){const n=Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2),s=Math.pow(r,2);return Math.abs(n-s)<i?1:n===s?0:-1}}class h{#r;#i;#n;#s;#o;#a;#l;#u;#h;constructor(t,r=null,i=null,n=null,s=""){t?"indexedDB"in self?t=!0:(e("This browser doesn't support IndexedDB"),t=!1):t=!1;const o=class{constructor(){this.store=new Map}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async has(t){return this.store.has(t)}async set(t,e){return this.store.set(t,e)}async get(t){return this.store.get(t)}async values(){return this.store.values()}async count(){return this.store.size}},a=class{constructor(){this.store=[]}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async push(t){return this.store.push(t)}async all(){return this.store}async count(){return this.store.length}},l=class extends o{#c;#S;#P;#d;#p;#y;constructor(t,e,r){super(),this.#c=t,this.#S=t.GetPoint.bind(this.#c),this.#P=t.StorePoint.bind(this.#c),this.#d=t.UpdatePoint.bind(this.#c),this.GetAllPoints=t.GetAllPoints.bind(this.#c),this.#p=t.UpdateState.bind(this.#c),this.#y=e,this.GetGameStateCallback=r}async PrepareStore(){if(this.#y&&this.GetGameStateCallback){const t=await this.GetAllPoints(),e=this.GetGameStateCallback();for(const r of t){const t=await this.#y(r.x,r.y,r.Status,r.Color),i=r.y*e.iGridWidth+r.x;this.store.set(i,t)}}return!0}async BeginBulkStorage(){await this.#c.BeginPointBulkStorage("readwrite"),null===this.#c.pointBulkBuffer&&(this.#c.pointBulkBuffer=new Map)}async EndBulkStorage(){await this.#c.StoreAllPoints(),await this.#c.EndPointBulkStorage()}async has(t){return this.store.has(t)}async set(t,e){const r=this.GetGameStateCallback(),i=e.GetPosition(),n=e.GetFillColor(),s={x:i.x,y:i.y,Status:e.GetStatus()};return n&&(s.Color=n),await this.has(t)?await this.#d(t,s):await this.#P(t,s),this.#p&&!0===r.bPointsAndPathsLoaded&&await this.#p(r.iGameID,r),this.store.set(t,e)}async get(t){return this.store.get(t)}async values(){let t=this.store.values();return t||(t=await this.GetAllPoints(),t)}},u=class extends a{#c;#b;#f;#p;#E;#G;constructor(t,e,r){super(),this.#c=t,this.#b=t.GetAllPaths.bind(this.#c),this.#f=t.StorePath.bind(this.#c),this.#p=t.UpdateState.bind(this.#c),this.#E=e,this.#G=r}async PrepareStore(){if(this.#E){const t=await this.#b();for(const e of t){const t=await this.#E(e.PointsAsString,e.Color,e.iId);this.store.push(t)}}return!0}async BeginBulkStorage(){await this.#c.BeginPathBulkStorage("readwrite"),null===this.#c.pathBulkBuffer&&(this.#c.pathBulkBuffer=new Map)}async EndBulkStorage(){await this.#c.StoreAllPaths(),await this.#c.EndPathBulkStorage()}async push(t){const e=this.#G(),r=t.GetID(),i={iId:r,Color:t.GetFillColor(),PointsAsString:t.GetPointsString().split(" ").map((t=>{let[e,r]=t.split(",");return e=parseInt(e),r=parseInt(r),`${e},${r}`})).join(" ")};return await this.#f(r,i),this.#p&&!0===e.bPointsAndPathsLoaded&&await this.#p(e.iGameID,e),this.store.push(t)}async all(){let t=this.store;return t||(t=await this.#b(),t)}};!0===t?(this.#i="InkballGame",this.#s="points",this.#o="paths",this.#a="state",this.#r=null,this.#l=null,this.pointBulkBuffer=null,this.pathBulkBuffer=null,!s||""===s||s.length<=0?this.#n=null:this.#n=parseInt(s.split(".").reduce(((t,e)=>(e=parseInt(e),10*t+(isNaN(e)?0:e))),0))-1010+4,this.#u=new l(this,r,n),this.#h=new u(this,i,n)):(this.#u=new o,this.#h=new a)}GetPointStore(){return this.#u}GetPathStore(){return this.#h}async#B(){return e("OpenDb ..."),new Promise(((t,i)=>{let n;n=null!==this.#n?indexedDB.open(this.#i,this.#n):indexedDB.open(this.#i),n.onsuccess=r=>{this.#r=r.currentTarget.result,e("OpenDb DONE"),t(r.currentTarget.result)},n.onerror=t=>{r("OpenDb:",t.target.errorCode||t.target.error),i()},n.onupgradeneeded=t=>{e(`OpenDb.onupgradeneeded(version: ${this.#n})`);const r=t.currentTarget.result,i=Array.from(r.objectStoreNames);i.includes(this.#s)&&r.deleteObjectStore(this.#s),i.includes(this.#o)&&r.deleteObjectStore(this.#o),i.includes(this.#a)&&r.deleteObjectStore(this.#a);r.createObjectStore(this.#s,{keyPath:["x","y"],autoIncrement:!1});r.createObjectStore(this.#o,{keyPath:"iId",autoIncrement:!1}),r.createObjectStore(this.#a,{autoIncrement:!1})}}))}#O(t,e){if(null!==this.#l&&this.#l.has(t))return this.#l.get(t);return this.#r.transaction(t,e).objectStore(t)}async#m(){const t=async t=>new Promise(((e,i)=>{const n=this.#O(t,"readwrite").clear();n.onsuccess=function(){e()},n.onerror=function(t){r("clearObjectStore:",t.target.errorCode),i()}}));await Promise.all([t(this.#s),t(this.#o),t(this.#a)])}async GetPoint(t){return new Promise(((e,r)=>{const i=this.#O(this.#s,"readonly").get(t);i.onerror=function(t){r(new Error("GetPoint => "+t))},i.onsuccess=function(t){e(t.target.result)}}))}async GetAllPoints(){return new Promise(((t,e)=>{const r=this.#O(this.#s,"readonly"),i=[],n=r.openCursor();n.onsuccess=function(e){const r=e.target.result;r?(i.push(r.value),r.continue()):t(i)},n.onerror=function(t){e(new Error("GetAllPoints => "+t))}}))}async GetState(t){return new Promise(((e,r)=>{const i=this.#O(this.#a,"readonly").get(t);i.onerror=function(t){r(new Error("GetState => "+t))},i.onsuccess=function(t){e(t.target.result)}}))}async GetPath(t){return new Promise(((e,r)=>{const i=this.#O(this.#o,"readonly").get(t);i.onerror=function(t){r(new Error("GetPath => "+t))},i.onsuccess=function(t){e(t.target.result)}}))}async GetAllPaths(){return new Promise(((t,e)=>{const r=this.#O(this.#o,"readonly"),i=[],n=r.openCursor();n.onsuccess=function(e){const r=e.target.result;r?(i.push(r.value),r.continue()):t(i)},n.onerror=function(t){e(new Error("GetAllPaths => "+t))}}))}async StorePoint(t,e){return null!==this.#l&&this.#l.has(this.#s)?(null===this.pointBulkBuffer&&(this.pointBulkBuffer=new Map),this.pointBulkBuffer.set(t,e),Promise.resolve()):new Promise(((t,i)=>{const n=this.#O(this.#s,"readwrite");let s;try{s=n.add(e)}catch(t){throw"DataCloneError"===t.name&&r("This engine doesn't know how to clone a Blob, use Firefox"),t}s.onsuccess=function(){t()},s.onerror=function(){r("StorePoint error",this.error),i()}}))}async UpdatePoint(t,e){return null!==this.#l&&this.#l.has(this.#s)?(null===this.pointBulkBuffer&&(this.pointBulkBuffer=new Map),this.pointBulkBuffer.set(t,e),Promise.resolve()):new Promise(((t,i)=>{const n=this.#O(this.#s,"readwrite");let s;try{s=n.put(e)}catch(t){throw"DataCloneError"===t.name&&r("This engine doesn't know how to clone a Blob, use Firefox"),t}s.onsuccess=function(){t()},s.onerror=function(){r("UpdatePoint error",this.error),i()}}))}async StoreAllPoints(t=null){return t||(t=this.pointBulkBuffer),t&&null!==this.#l?new Promise(((e,i)=>{const n=this.#O(this.#s,"readwrite");try{t.forEach((function(t){n.add(t)})),this.pointBulkBuffer=null,e()}catch(t){r("This engine doesn't know how to clone a Blob, use Firefox"),i(t)}})):Promise.reject()}async#T(t,e){return new Promise(((i,n)=>{const s=this.#O(this.#a,"readwrite");let o;try{o=s.add(e,t)}catch(t){throw"DataCloneError"===t.name&&r("This engine doesn't know how to clone a Blob, use Firefox"),t}o.onsuccess=function(){i()},o.onerror=function(){r("StoreState error",this.error),n()}}))}async UpdateState(t,e){return new Promise(((i,n)=>{const s=this.#O(this.#a,"readwrite");let o;try{o=s.put(e,t)}catch(t){throw"DataCloneError"===t.name&&r("This engine doesn't know how to clone a Blob, use Firefox"),t}o.onsuccess=function(){i()},o.onerror=function(){r("UpdateState error",this.error),n()}}))}async StorePath(t,e){return null!==this.#l&&this.#l.has(this.#o)?(null===this.pathBulkBuffer&&(this.pathBulkBuffer=new Map),this.pathBulkBuffer.set(t,e),Promise.resolve()):new Promise(((t,i)=>{const n=this.#O(this.#o,"readwrite");let s;try{s=n.add(e)}catch(t){throw"DataCloneError"===t.name&&r("This engine doesn't know how to clone a Blob, use Firefox"),t}s.onsuccess=function(){t()},s.onerror=function(){r("StorePath error",this.error),i()}}))}async StoreAllPaths(t=null){return t||(t=this.pathBulkBuffer),t&&null!==this.#l?new Promise(((e,i)=>{const n=this.#O(this.#o,"readwrite");try{t.forEach((function(t,e){n.add(t)})),this.pathBulkBuffer=null,e()}catch(t){r("This engine doesn't know how to clone a Blob, use Firefox"),i(t)}})):Promise.reject()}async PrepareStore(){if(!this.#u.GetAllPoints)return!1;if(null!==this.#r)return!1;await this.#B();const t=this.#u.GetGameStateCallback(),e=await this.GetState(t.iGameID);if(!e)return await this.#m(),await this.#T(t.iGameID,t),!1;if(e.sLastMoveGameTimeStamp!==t.sLastMoveGameTimeStamp)return await this.#m(),!1;if(!1===t.bPointsAndPathsLoaded)try{return await this.#_([this.#s,this.#o],"readonly"),!0===await this.#u.PrepareStore()&&!0===await this.#h.PrepareStore()||(await this.#m(),!1)}finally{await this.#A([this.#s,this.#o])}}async#_(t,e){null===this.#l&&(this.#l=new Map);const r=Array.isArray(t)?t:[t];let i=null;for(const t of r)this.#l.has(t)||(null===i&&(i=this.#r.transaction(r,e)),this.#l.set(t,i.objectStore(t)))}async BeginPointBulkStorage(t){return await this.#_(this.#s,t)}async BeginPathBulkStorage(t){return await this.#_([this.#s,this.#o],t)}async#A(t){if(null!==this.#l){const e=Array.isArray(t)?t:[t];for(const t of e)this.#l.has(t)&&this.#l.delete(t);this.#l.size<=0&&(this.#l=null)}}async EndPointBulkStorage(){return await this.#A(this.#s)}async EndPathBulkStorage(){return await this.#A([this.#s,this.#o])}}export{u as SvgVml,t as StatusEnum,n as pnpoly,e as LocalLog,r as LocalError,i as LocalAlert,s as hasDuplicates,a as sortPointsClockwise,o as Sleep,l as IsPointOutsideAllPaths,h as GameStateStore};
//# sourceMappingURL=shared.min.js.map
