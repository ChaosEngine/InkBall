{"version":3,"file":"AIWorker.Bundle.js","mappings":"oDAEA,IAAIA,EAAQ,EAAQ,KAChBC,EAAQ,EAAQ,KAChBC,EAAiB,EAAQ,KACzBC,EAAS,gBAUb,SAASC,EAAWC,EAAQC,EAAWC,GAEnCD,EAAYE,KAAKC,IAAI,OAAiBC,IAAdJ,EAA0B,EAAIA,GAGtDC,EAAkBA,GAAmB,EAGrC,IAAII,EAgLR,SAAwBN,GAOpB,IANA,IAAIO,EAAOP,EAAO,GACdQ,EAAMR,EAAO,GACbS,EAAQT,EAAO,GACfU,EAASV,EAAO,GAGXW,EAAI,EAAGA,EAAIX,EAAOY,OAAQD,IAAK,CACpC,IAAIE,EAAIb,EAAOW,GACXE,EAAE,GAAKN,EAAK,KAAIA,EAAOM,GACvBA,EAAE,GAAKJ,EAAM,KAAIA,EAAQI,GACzBA,EAAE,GAAKL,EAAI,KAAIA,EAAMK,GACrBA,EAAE,GAAKH,EAAO,KAAIA,EAASG,EACnC,CAGA,IAAIC,EAAO,CAACP,EAAMC,EAAKC,EAAOC,GAC1BK,EAAWD,EAAKE,QACpB,IAAKL,EAAI,EAAGA,EAAIX,EAAOY,OAAQD,IACtBd,EAAeG,EAAOW,GAAIG,IAAOC,EAASE,KAAKjB,EAAOW,IAI/D,OA0IJ,SAAoBX,GAChBA,EAAOkB,KAAKC,GAGZ,IADA,IAAIC,EAAQ,GACHT,EAAI,EAAGA,EAAIX,EAAOY,OAAQD,IAAK,CACpC,KAAOS,EAAMR,QAAU,GAAKS,EAAMD,EAAMA,EAAMR,OAAS,GAAIQ,EAAMA,EAAMR,OAAS,GAAIZ,EAAOW,KAAO,GAC9FS,EAAME,MAEVF,EAAMH,KAAKjB,EAAOW,GACtB,CAGA,IADA,IAAIY,EAAQ,GACHC,EAAKxB,EAAOY,OAAS,EAAGY,GAAM,EAAGA,IAAM,CAC5C,KAAOD,EAAMX,QAAU,GAAKS,EAAME,EAAMA,EAAMX,OAAS,GAAIW,EAAMA,EAAMX,OAAS,GAAIZ,EAAOwB,KAAQ,GAC/FD,EAAMD,MAEVC,EAAMN,KAAKjB,EAAOwB,GACtB,CAIA,OAFAD,EAAMD,MACNF,EAAME,MACCF,EAAMK,OAAOF,EACxB,CAhKWG,CAAWX,EACtB,CAxMeY,CAAe3B,GAGtB4B,EAAO,IAAIjC,EAAM,IACrBiC,EAAKC,OAAS,SAAUC,GACpB,MAAO,CACHC,KAAMD,EAAE,GACRE,KAAMF,EAAE,GACRG,KAAMH,EAAE,GACRI,KAAMJ,EAAE,GAEhB,EACAF,EAAKO,YAAc,SAAUL,EAAGM,GAAK,OAAON,EAAE,GAAKM,EAAE,EAAI,EACzDR,EAAKS,YAAc,SAAUP,EAAGM,GAAK,OAAON,EAAE,GAAKM,EAAE,EAAI,EAEzDR,EAAKU,KAAKtC,GAIV,IADA,IACgBuC,EADZC,EAAQ,GACH7B,EAAI,EAASA,EAAIL,EAAKM,OAAQD,IAAK,CACxC,IAAIE,EAAIP,EAAKK,GACbiB,EAAKa,OAAO5B,GACZ0B,EAAOG,EAAW7B,EAAG0B,GACrBC,EAAMvB,KAAKsB,EACf,CAGA,IAAII,EAAU,IAAIhD,EAAM,IACxB,IAAKgB,EAAI,EAAGA,EAAI6B,EAAM5B,OAAQD,IAAKgC,EAAQC,OAAOC,EAAWL,EAAM7B,KAMnE,IAJA,IAAImC,EAAc7C,EAAYA,EAC1B8C,EAAiB7C,EAAkBA,EAGhCsC,EAAM5B,QAAQ,CACjB,IAAIoC,EAAOR,EAAMS,QACbnB,EAAIkB,EAAKnC,EACTuB,EAAIY,EAAKE,KAAKrC,EAGdsC,EAAQC,EAAUtB,EAAGM,GACzB,KAAIe,EAAQJ,GAAZ,CAEA,IAAIM,EAAWF,EAAQL,GAGvBjC,EAAIyC,EAAc1B,EAAMoB,EAAKO,KAAK1C,EAAGiB,EAAGM,EAAGY,EAAKE,KAAKA,KAAKrC,EAAGwC,EAAUV,KAG9DxC,KAAKqD,IAAIJ,EAAUvC,EAAGiB,GAAIsB,EAAUvC,EAAGuB,KAAOiB,IAEnDb,EAAMvB,KAAK+B,GACXR,EAAMvB,KAAKyB,EAAW7B,EAAGmC,IAGzBpB,EAAKa,OAAO5B,GACZ8B,EAAQF,OAAOO,GACfL,EAAQC,OAAOC,EAAWG,IAC1BL,EAAQC,OAAOC,EAAWG,EAAKE,OAjBC,CAmBxC,CAGAF,EAAOT,EACP,IAAIkB,EAAU,GACd,GACIA,EAAQxC,KAAK+B,EAAKnC,GAClBmC,EAAOA,EAAKE,WACPF,IAAST,GAIlB,OAFAkB,EAAQxC,KAAK+B,EAAKnC,GAEX4C,CACX,CAEA,SAASH,EAAc1B,EAAME,EAAGM,EAAGsB,EAAGC,EAAGC,EAASjB,GAM9C,IALA,IAAIH,EAAQ,IAAI5C,EAAM,GAAIiE,GACtBb,EAAOpB,EAAKkC,KAITd,GAAM,CACT,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAKe,SAASnD,OAAQD,IAAK,CAC3C,IAAIqD,EAAQhB,EAAKe,SAASpD,GAEtBsD,EAAOjB,EAAKkB,KAAOC,EAAUH,EAAO5B,EAAGsB,GAAKU,EAAahC,EAAGsB,EAAGM,GAC/DC,EAAOL,GAEXpB,EAAMvB,KAAK,CACP+B,KAAMgB,EACNC,KAAMA,GAEd,CAEA,KAAOzB,EAAM5B,SAAW4B,EAAM6B,OAAOrB,KAAKe,UAAU,CAChD,IAAIO,EAAO9B,EAAMlB,MACbT,EAAIyD,EAAKtB,KAITuB,EAAKJ,EAAUtD,EAAGiB,EAAGM,GACrBoC,EAAKL,EAAUtD,EAAG6C,EAAGC,GACzB,GAAIW,EAAKL,KAAOM,GAAMD,EAAKL,KAAOO,GAC9BC,EAAgBrC,EAAGvB,EAAG8B,IACtB8B,EAAgBf,EAAG7C,EAAG8B,GAAU,OAAO9B,CAC/C,EAEAmC,EAAOR,EAAMlB,SACH0B,EAAOA,EAAKA,KAC1B,CAEA,OAAO,IACX,CAEA,SAASa,EAAY/B,EAAGM,GACpB,OAAON,EAAEmC,KAAO7B,EAAE6B,IACtB,CAGA,SAASG,EAAatC,EAAGM,EAAGsC,GACxB,GAAIC,EAAO7C,EAAG4C,IAASC,EAAOvC,EAAGsC,GAAO,OAAO,EAC/C,IAAIF,EAAKI,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAK3C,KAAM2C,EAAK1C,KAAM0C,EAAKzC,KAAMyC,EAAK1C,MACpF,GAAW,IAAPwC,EAAU,OAAO,EACrB,IAAIK,EAAKD,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAK3C,KAAM2C,EAAK1C,KAAM0C,EAAK3C,KAAM2C,EAAKxC,MACpF,GAAW,IAAP2C,EAAU,OAAO,EACrB,IAAIC,EAAKF,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAKzC,KAAMyC,EAAK1C,KAAM0C,EAAKzC,KAAMyC,EAAKxC,MACpF,GAAW,IAAP4C,EAAU,OAAO,EACrB,IAAIC,EAAKH,EAAa9C,EAAE,GAAIA,EAAE,GAAIM,EAAE,GAAIA,EAAE,GAAIsC,EAAK3C,KAAM2C,EAAKxC,KAAMwC,EAAKzC,KAAMyC,EAAKxC,MACpF,OAAW,IAAP6C,EAAiB,EACd5E,KAAKqD,IAAIgB,EAAIK,EAAIC,EAAIC,EAChC,CAEA,SAASJ,EAAO7C,EAAG4C,GACf,OAAO5C,EAAE,IAAM4C,EAAK3C,MACbD,EAAE,IAAM4C,EAAKzC,MACbH,EAAE,IAAM4C,EAAK1C,MACbF,EAAE,IAAM4C,EAAKxC,IACxB,CAGA,SAASuC,EAAgB3C,EAAGM,EAAGO,GAO3B,IANA,IAiBgBqC,EAAIC,EAAIC,EAAIC,EAjBxBpD,EAAO5B,KAAKqD,IAAI1B,EAAE,GAAIM,EAAE,IACxBJ,EAAO7B,KAAKqD,IAAI1B,EAAE,GAAIM,EAAE,IACxBH,EAAO9B,KAAKC,IAAI0B,EAAE,GAAIM,EAAE,IACxBF,EAAO/B,KAAKC,IAAI0B,EAAE,GAAIM,EAAE,IAExBgD,EAAQzC,EAAQ0C,OAAO,CAACtD,KAAMA,EAAMC,KAAMA,EAAMC,KAAMA,EAAMC,KAAMA,IAC7DvB,EAAI,EAAGA,EAAIyE,EAAMxE,OAAQD,IAC9B,GAUYqE,EAVGI,EAAMzE,GAAGE,EAURoE,EAVWG,EAAMzE,GAAGuC,KAAKrC,EAUrBqE,EAVwBpD,EAWzCkD,KADqBG,EAVuB/C,IAW/B6C,IAAOC,GACvB7D,EAAM2D,EAAIC,EAAIC,GAAM,GAAM7D,EAAM2D,EAAIC,EAAIE,GAAM,GAC9C9D,EAAM6D,EAAIC,EAAIH,GAAM,GAAM3D,EAAM6D,EAAIC,EAAIF,GAAM,EAbK,OAAO,EAE9D,OAAO,CACX,CAEA,SAAS5D,EAAM2D,EAAIE,EAAII,GACnB,OAAOxF,EAAOkF,EAAG,GAAIA,EAAG,GAAIE,EAAG,GAAIA,EAAG,GAAII,EAAG,GAAIA,EAAG,GACxD,CAUA,SAASzC,EAAWG,GAChB,IAAIgC,EAAKhC,EAAKnC,EACVqE,EAAKlC,EAAKE,KAAKrC,EAKnB,OAJAmC,EAAKjB,KAAO5B,KAAKqD,IAAIwB,EAAG,GAAIE,EAAG,IAC/BlC,EAAKhB,KAAO7B,KAAKqD,IAAIwB,EAAG,GAAIE,EAAG,IAC/BlC,EAAKf,KAAO9B,KAAKC,IAAI4E,EAAG,GAAIE,EAAG,IAC/BlC,EAAKd,KAAO/B,KAAKC,IAAI4E,EAAG,GAAIE,EAAG,IACxBlC,CACX,CA8BA,SAASN,EAAW7B,EAAG0C,GACnB,IAAIP,EAAO,CACPnC,EAAGA,EACH0C,KAAM,KACNL,KAAM,KACNnB,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,GAaV,OAVKqB,GAKDP,EAAKE,KAAOK,EAAKL,KACjBF,EAAKO,KAAOA,EACZA,EAAKL,KAAKK,KAAOP,EACjBO,EAAKL,KAAOF,IAPZA,EAAKO,KAAOP,EACZA,EAAKE,KAAOF,GAQTA,CACX,CAGA,SAASI,EAAU4B,EAAIE,GAEnB,IAAIK,EAAKP,EAAG,GAAKE,EAAG,GAChBM,EAAKR,EAAG,GAAKE,EAAG,GAEpB,OAAOK,EAAKA,EAAKC,EAAKA,CAC1B,CAGA,SAASrB,EAAUtD,EAAGmE,EAAIE,GAEtB,IAAIO,EAAIT,EAAG,GACPU,EAAIV,EAAG,GACPO,EAAKL,EAAG,GAAKO,EACbD,EAAKN,EAAG,GAAKQ,EAEjB,GAAW,IAAPH,GAAmB,IAAPC,EAAU,CAEtB,IAAIG,IAAM9E,EAAE,GAAK4E,GAAKF,GAAM1E,EAAE,GAAK6E,GAAKF,IAAOD,EAAKA,EAAKC,EAAKA,GAE1DG,EAAI,GACJF,EAAIP,EAAG,GACPQ,EAAIR,EAAG,IAEAS,EAAI,IACXF,GAAKF,EAAKI,EACVD,GAAKF,EAAKG,EAElB,CAKA,OAHAJ,EAAK1E,EAAE,GAAK4E,GAGAF,GAFZC,EAAK3E,EAAE,GAAK6E,GAEUF,CAC1B,CAGA,SAASZ,EAAagB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC9C,IAaIC,EAAIC,EAAIC,EAAIC,EAbZC,EAAKV,EAAKF,EACVa,EAAKV,EAAKF,EACVa,EAAKR,EAAKF,EACVW,EAAKR,EAAKF,EACVW,EAAKhB,EAAKI,EACVa,EAAKhB,EAAKI,EACVnE,EAAI0E,EAAKA,EAAKC,EAAKA,EACnBrE,EAAIoE,EAAKE,EAAKD,EAAKE,EACnBjD,EAAIgD,EAAKA,EAAKC,EAAKA,EACnBhD,EAAI6C,EAAKI,EAAKH,EAAKI,EACnBC,EAAIJ,EAAKE,EAAKD,EAAKE,EACnBE,EAAIjF,EAAI4B,EAAItB,EAAIA,EAGhB4E,EAAKD,EACLE,EAAKF,EAEC,IAANA,GACAV,EAAK,EACLW,EAAK,EACLT,EAAKO,EACLG,EAAKvD,IAGL6C,EAAKzE,EAAIgF,EAAI1E,EAAIuB,GADjB0C,EAAKjE,EAAI0E,EAAIpD,EAAIC,GAER,GACL0C,EAAK,EACLE,EAAKO,EACLG,EAAKvD,GACE2C,EAAKW,IACZX,EAAKW,EACLT,EAAKO,EAAI1E,EACT6E,EAAKvD,IAIT6C,EAAK,GACLA,EAAK,GACA5C,EAAI,EAAK0C,EAAK,GACT1C,EAAI7B,EAAGuE,EAAKW,GAElBX,GAAM1C,EACNqD,EAAKlF,IAEFyE,EAAKU,IACZV,EAAKU,GACCtD,EAAIvB,EAAK,EAAKiE,EAAK,GACf1C,EAAIvB,EAAIN,EAAGuE,EAAKW,GAEtBX,GAAM1C,EAAIvB,EACV4E,EAAKlF,IAOb,IAIIyD,GAFO,GAJXe,EAAY,IAAPC,EAAW,EAAIA,EAAKU,IAIJjB,EAAKM,EAAKJ,IAFrB,GAHVE,EAAY,IAAPC,EAAW,EAAIA,EAAKW,IAGLpB,EAAKQ,EAAKN,GAK1BN,GAFO,EAAIc,GAAML,EAAKK,EAAKH,IAFrB,EAAIC,GAAMP,EAAKO,EAAKL,GAM9B,OAAOR,EAAKA,EAAKC,EAAKA,CAC1B,CAEA,SAASrE,EAAWW,EAAGM,GACnB,OAAON,EAAE,KAAOM,EAAE,GAAKN,EAAE,GAAKM,EAAE,GAAKN,EAAE,GAAKM,EAAE,EAClD,CA9VIxC,EAAMsH,UACNtH,EAAQA,EAAMsH,SAGlBC,EAAOC,QAAUrH,EACjBoH,EAAOC,QAAP,QAAyBrH,C,kBCIzB,SAASsH,EAAOC,EAASC,EAASC,EAAQC,GAExCC,KAAKJ,QAAU,GAEfI,KAAKH,QAAU,EAEfG,KAAKF,OAAS,EAEdE,KAAKC,SAAWD,KAAKE,mBAErBF,KAAKG,SAAW,GAEhBH,KAAKI,MAAQ,GAKbJ,KAAKK,SAAW,GAEhBL,KAAKM,UAAY,GAEjBN,KAAKO,eAAiB,EAEtBP,KAAKQ,MAAMZ,EAASC,EAASC,EAAQC,EACvC,CAeAJ,EAAOc,UAAUC,IAAM,SAASd,EAASC,EAASC,EAAQC,GACxDC,KAAKQ,MAAMZ,EAASC,EAASC,EAAQC,GAErC,IAAK,IAAIY,EAAU,EAAGA,EAAUX,KAAKO,eAAgBI,IAEnD,GAA+B,IAA3BX,KAAKK,SAASM,GAAgB,CAChCX,KAAKK,SAASM,GAAW,EAGzB,IAAIC,EAAYZ,KAAKa,aAAaF,GAElC,GAAIC,EAAU1H,OAAS8G,KAAKF,OAC1BE,KAAKI,MAAM7G,KAAKoH,OACX,CAEL,IAAIG,EAAYd,KAAKG,SAASjH,OAC9B8G,KAAKG,SAAS5G,KAAK,IACnByG,KAAKe,cAAcJ,EAASG,GAE5Bd,KAAKgB,eAAeF,EAAWF,EACjC,CACF,CAGF,OAAOZ,KAAKG,QACd,EAeAR,EAAOc,UAAUD,MAAQ,SAASZ,EAASC,EAASC,EAAQG,GAE1D,GAAIL,EAAS,CAEX,KAAMA,aAAmBqB,OACvB,MAAMC,MAAM,yCACHtB,EAAU,UAGrBI,KAAKJ,QAAUA,EACfI,KAAKG,SAAW,GAChBH,KAAKI,MAAQ,GAEbJ,KAAKO,eAAiBX,EAAQ1G,OAC9B8G,KAAKK,SAAW,IAAIY,MAAMjB,KAAKO,gBAC/BP,KAAKM,UAAY,IAAIW,MAAMjB,KAAKO,eAClC,CAEIV,IACFG,KAAKH,QAAUA,GAGbC,IACFE,KAAKF,OAASA,GAGZG,IACFD,KAAKC,SAAWA,EAEpB,EAUAN,EAAOc,UAAUO,eAAiB,SAASF,EAAWF,GAMpD,IAAK,IAAI3H,EAAI,EAAGA,EAAI2H,EAAU1H,OAAQD,IAAK,CACzC,IAAIkI,EAAWP,EAAU3H,GAEzB,GAAgC,IAA5B+G,KAAKK,SAASc,GAAiB,CACjCnB,KAAKK,SAASc,GAAY,EAC1B,IAAIC,EAAapB,KAAKa,aAAaM,GAE/BC,EAAWlI,QAAU8G,KAAKF,SAC5Bc,EAAYZ,KAAKqB,aAAaT,EAAWQ,GAE7C,CAGiC,IAA7BpB,KAAKM,UAAUa,IACjBnB,KAAKe,cAAcI,EAAUL,EAEjC,CACF,EAQAnB,EAAOc,UAAUM,cAAgB,SAASJ,EAASG,GACjDd,KAAKG,SAASW,GAAWvH,KAAKoH,GAC9BX,KAAKM,UAAUK,GAAW,CAC5B,EAUAhB,EAAOc,UAAUI,aAAe,SAASF,GAGvC,IAFA,IAAIC,EAAY,GAEPU,EAAK,EAAGA,EAAKtB,KAAKO,eAAgBe,IAAM,CACpCtB,KAAKC,SAASD,KAAKJ,QAAQe,GAAUX,KAAKJ,QAAQ0B,IAClDtB,KAAKH,SACde,EAAUrH,KAAK+H,EAEnB,CAEA,OAAOV,CACT,EAWAjB,EAAOc,UAAUY,aAAe,SAASjH,EAAGM,GAG1C,IAFA,IAAI6G,EAAM7G,EAAExB,OAEHD,EAAI,EAAGA,EAAIsI,EAAKtI,IAAK,CAC5B,IAAIuI,EAAI9G,EAAEzB,GACNmB,EAAEqH,QAAQD,GAAK,GACjBpH,EAAEb,KAAKiI,EAEX,CAEA,OAAOpH,CACT,EAUAuF,EAAOc,UAAUP,mBAAqB,SAAS/G,EAAGuI,GAIhD,IAHA,IAAIC,EAAM,EACN1I,EAAIR,KAAKqD,IAAI3C,EAAED,OAAQwI,EAAExI,QAEtBD,KACL0I,IAAQxI,EAAEF,GAAKyI,EAAEzI,KAAOE,EAAEF,GAAKyI,EAAEzI,IAGnC,OAAOR,KAAKmJ,KAAKD,EACnB,EAEqClC,EAAOC,UAC1CD,EAAOC,QAAUC,E,kBC1NlB,SAASkC,EAAOjC,EAASkC,EAAG7B,GAC3BD,KAAK8B,EAAI,EACT9B,KAAKJ,QAAU,GACfI,KAAK+B,YAAc,GACnB/B,KAAKgC,UAAY,GAEjBhC,KAAKiC,KAAKrC,EAASkC,EAAG7B,EACxB,CAKA4B,EAAOpB,UAAUwB,KAAO,SAASrC,EAASkC,EAAG7B,GAC3CD,KAAK+B,YAAc,GACnB/B,KAAKgC,UAAY,QAEM,IAAZpC,IACTI,KAAKJ,QAAUA,QAGA,IAANkC,IACT9B,KAAK8B,EAAIA,QAGa,IAAb7B,IACTD,KAAKC,SAAWA,EAEpB,EAKA4B,EAAOpB,UAAUC,IAAM,SAASd,EAASkC,GACvC9B,KAAKiC,KAAKrC,EAASkC,GAKnB,IAHA,IAAIP,EAAMvB,KAAKJ,QAAQ1G,OAGdD,EAAI,EAAGA,EAAI+G,KAAK8B,EAAG7I,IAC1B+G,KAAKgC,UAAU/I,GAAK+G,KAAKkC,iBAI3B,IADA,IAAIC,GAAS,EACPA,GAAQ,CAGZA,EAASnC,KAAKoC,SAGd,IAAK,IAAIC,EAAa,EAAGA,EAAarC,KAAK8B,EAAGO,IAAc,CAK1D,IAJA,IAAIC,EAAO,IAAIrB,MAAMsB,GACjBC,EAAQ,EAGHC,EAAM,EAAGA,EAAMF,EAAQE,IAC9BH,EAAKG,GAAO,EAGd,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAKmB,IAAK,CAC5B,IAAIH,EAASvC,KAAKJ,QAAQ8C,GAAGxJ,OAG7B,GAAImJ,IAAerC,KAAK+B,YAAYW,GAAI,CACtC,IAASD,EAAM,EAAGA,EAAMF,EAAQE,IAC9BH,EAAKG,IAAQzC,KAAKJ,QAAQ8C,GAAGD,GAE/BD,GACF,CACF,CAEA,GAAIA,EAAQ,EAAG,CAEb,IAASC,EAAM,EAAGA,EAAMF,EAAQE,IAC9BH,EAAKG,IAAQD,EAEfxC,KAAKgC,UAAUK,GAAcC,CAC/B,MAEEtC,KAAKgC,UAAUK,GAAcrC,KAAKkC,iBAClCC,GAAS,CAEb,CACF,CAEA,OAAOnC,KAAK2C,aACd,EAOAd,EAAOpB,UAAUyB,eAAiB,WAChC,IACIU,EACAtB,EAFAuB,EAAQ7C,KAAKJ,QAAQ1G,OAAQ,EAIjC,GACEoI,EAAK7I,KAAKqK,MAAMrK,KAAKsK,SAAWF,GAChCD,EAAW5C,KAAKJ,QAAQ0B,SACjBtB,KAAKgC,UAAUP,QAAQmB,IAAa,GAE7C,OAAOA,CACT,EAOAf,EAAOpB,UAAU2B,OAAS,WAKxB,IAJA,IAEIY,EAFAb,GAAS,EACTZ,EAAMvB,KAAKJ,QAAQ1G,OAGdD,EAAI,EAAGA,EAAIsI,EAAKtI,KACvB+J,EAAkBhD,KAAKiD,OAAOjD,KAAKJ,QAAQ3G,GAAI+G,KAAKgC,UAAWhC,KAAKC,YAE7CD,KAAK+B,YAAY9I,KACtC+G,KAAK+B,YAAY9I,GAAK+J,EACtBb,GAAS,GAIb,OAAOA,CACT,EAOAN,EAAOpB,UAAUkC,YAAc,WAI7B,IAHA,IACIN,EADAlC,EAAW,IAAIc,MAAMjB,KAAK8B,GAGrBnB,EAAU,EAAGA,EAAUX,KAAK+B,YAAY7I,OAAQyH,SAInB,IAAzBR,EAHXkC,EAAarC,KAAK+B,YAAYpB,MAI5BR,EAASkC,GAAc,IAGzBlC,EAASkC,GAAY9I,KAAKoH,GAG5B,OAAOR,CACT,EAUA0B,EAAOpB,UAAUwC,OAAS,SAASC,EAAOC,EAAKC,GAM7C,IALA,IAGInH,EAHAH,EAAMuH,OAAOC,UACbC,EAAM,EACNhC,EAAM4B,EAAIjK,OAGLD,EAAI,EAAGA,EAAIsI,EAAKtI,KACvBgD,EAAImH,EAAEF,EAAOC,EAAIlK,KACT6C,IACNA,EAAMG,EACNsH,EAAMtK,GAIV,OAAOsK,CACT,EASA1B,EAAOpB,UAAUR,SAAW,SAAS9G,EAAGuI,GAItC,IAHA,IAAIC,EAAM,EACN1I,EAAIR,KAAKqD,IAAI3C,EAAED,OAAQwI,EAAExI,QAEtBD,KAAK,CACV,IAAIuK,EAAOrK,EAAEF,GAAKyI,EAAEzI,GACpB0I,GAAO6B,EAAOA,CAChB,CAEA,OAAO/K,KAAKmJ,KAAKD,EACnB,EAEqClC,EAAOC,UAC1CD,EAAOC,QAAUmC,E,sBC9MnB,GAAqCpC,EAAOC,QACtC,IAAI+D,EAAgB,EAAQ,KAoBlC,SAASC,EAAO9D,EAASC,EAASC,EAAQC,GAExCC,KAAKH,QAAU,EAEfG,KAAKF,OAAS,EAEdE,KAAKC,SAAWD,KAAKE,mBAKrBF,KAAK2D,cAAgB,GAErB3D,KAAK4D,WAAa,GAElB5D,KAAK6D,cAAgB,EAErB7D,KAAK8D,aAAe,GAEpB9D,KAAKQ,MAAMZ,EAASC,EAASC,EAAQC,EACvC,CAYA2D,EAAOjD,UAAUC,IAAM,SAASd,EAASC,EAASC,EAAQC,GACxDC,KAAKQ,MAAMZ,EAASC,EAASC,EAAQC,GAErC,IAAK,IAAIY,EAAU,EAAGoD,EAAI/D,KAAKJ,QAAQ1G,OAAQyH,EAAUoD,EAAGpD,IAC1D,GAAiC,IAA7BX,KAAK4D,WAAWjD,GAAgB,CAClCX,KAAK4D,WAAWjD,GAAW,EAC3BX,KAAKG,SAAS5G,KAAK,CAACoH,IACpB,IAAIG,EAAYd,KAAKG,SAASjH,OAAS,EAEvC8G,KAAK8D,aAAavK,KAAKoH,GACvB,IAAIqD,EAAgB,IAAIP,EAAc,KAAM,KAAM,OAC9C7C,EAAYZ,KAAKa,aAAaF,QAGIhI,IAAlCqH,KAAKiE,gBAAgBtD,KACvBX,KAAKkE,aAAavD,EAASC,EAAWoD,GACtChE,KAAKgB,eAAeF,EAAWkD,GAEnC,CAGF,OAAOhE,KAAKG,QACd,EAQAuD,EAAOjD,UAAU0D,oBAAsB,WAGrC,IAFA,IAAIC,EAAmB,GAEdnL,EAAI,EAAG8K,EAAI/D,KAAK8D,aAAa5K,OAAQD,EAAI8K,EAAG9K,IAAK,CACxD,IAAI0H,EAAUX,KAAK8D,aAAa7K,GAC5BgH,EAAWD,KAAK2D,cAAchD,GAElCyD,EAAiB7K,KAAK,CAACoH,EAASV,GAClC,CAEA,OAAOmE,CACT,EAeAV,EAAOjD,UAAUD,MAAQ,SAASZ,EAASC,EAASC,EAAQG,GAE1D,GAAIL,EAAS,CAEX,KAAMA,aAAmBqB,OACvB,MAAMC,MAAM,yCACHtB,EAAU,UAGrBI,KAAKJ,QAAUA,EACfI,KAAKG,SAAW,GAChBH,KAAK2D,cAAgB,IAAI1C,MAAMjB,KAAKJ,QAAQ1G,QAC5C8G,KAAK4D,WAAa,IAAI3C,MAAMjB,KAAKJ,QAAQ1G,QACzC8G,KAAK6D,cAAgB,EACrB7D,KAAK8D,aAAe,EACtB,CAEIjE,IACFG,KAAKH,QAAUA,GAGbC,IACFE,KAAKF,OAASA,GAGZG,IACFD,KAAKC,SAAWA,EAEpB,EAWAyD,EAAOjD,UAAUyD,aAAe,SAASvD,EAASC,EAAW9F,GAC3D,IAAIuJ,EAAOrE,KAEXA,KAAK6D,cAAgB7D,KAAKiE,gBAAgBtD,GAC1CC,EAAU0D,SAAQ,SAASnD,GACzB,QAAkCxI,IAA9B0L,EAAKT,WAAWzC,GAAyB,CAC3C,IAAI5E,EAAO8H,EAAKpE,SAASoE,EAAKzE,QAAQe,GAAU0D,EAAKzE,QAAQuB,IACzDoD,EAAuB9L,KAAKC,IAAI2L,EAAKR,cAAetH,QAEnB5D,IAAjC0L,EAAKV,cAAcxC,IACrBkD,EAAKV,cAAcxC,GAAYoD,EAC/BzJ,EAAMI,OAAOiG,EAAUoD,IAEnBA,EAAuBF,EAAKV,cAAcxC,KAC5CkD,EAAKV,cAAcxC,GAAYoD,EAC/BzJ,EAAMC,OAAOoG,GACbrG,EAAMI,OAAOiG,EAAUoD,GAG7B,CACF,GACF,EAUAb,EAAOjD,UAAUO,eAAiB,SAASF,EAAWhG,GAGpD,IAFA,IAAI0J,EAAgB1J,EAAM2J,cAEjBtL,EAAI,EAAG4K,EAAIS,EAActL,OAAQC,EAAI4K,EAAG5K,IAAK,CACpD,IAAIwH,EAAU6D,EAAcrL,GAC5B,QAAiCR,IAA7BqH,KAAK4D,WAAWjD,GAAwB,CAC1C,IAAIC,EAAYZ,KAAKa,aAAaF,GAClCX,KAAK4D,WAAWjD,GAAW,EAE3BX,KAAKG,SAASW,GAAWvH,KAAKoH,GAC9BX,KAAK8D,aAAavK,KAAKoH,QAEehI,IAAlCqH,KAAKiE,gBAAgBtD,KACvBX,KAAKkE,aAAavD,EAASC,EAAW9F,GACtCkF,KAAKgB,eAAeF,EAAWhG,GAEnC,CACF,CACF,EASA4I,EAAOjD,UAAUwD,gBAAkB,SAAStD,GAE1C,IADA,IAAIoD,EAAI/D,KAAKH,QACJ6E,EAAe,EAAGA,EAAeX,EAAGW,IAAgB,CAE3D,GADgB1E,KAAKa,aAAaF,EAAS+D,GAC7BxL,QAAU8G,KAAKF,OAC3B,OAAO4E,CAEX,CAGF,EAUAhB,EAAOjD,UAAUI,aAAe,SAASF,EAASd,GAChDA,EAAUA,GAAWG,KAAKH,QAG1B,IAFA,IAAIe,EAAY,GAEPU,EAAK,EAAGyC,EAAI/D,KAAKJ,QAAQ1G,OAAQoI,EAAKyC,EAAGzC,IAC5CtB,KAAKC,SAASD,KAAKJ,QAAQe,GAAUX,KAAKJ,QAAQ0B,IAAOzB,GAC3De,EAAUrH,KAAK+H,GAInB,OAAOV,CACT,EAaA8C,EAAOjD,UAAUP,mBAAqB,SAAS/G,EAAGuI,GAIhD,IAHA,IAAIC,EAAM,EACN1I,EAAIR,KAAKqD,IAAI3C,EAAED,OAAQwI,EAAExI,QAEtBD,KACL0I,IAAQxI,EAAEF,GAAKyI,EAAEzI,KAAOE,EAAEF,GAAKyI,EAAEzI,IAGnC,OAAOR,KAAKmJ,KAAKD,EACnB,EAEqClC,EAAOC,UAC1CD,EAAOC,QAAUgE,E,kBCrPnB,SAASD,EAAckB,EAAUC,EAAYC,GAE3C7E,KAAK8E,OAAS,GAEd9E,KAAK+E,YAAc,GAEnB/E,KAAKgF,SAAW,OAEhBhF,KAAKQ,MAAMmE,EAAUC,EAAYC,EACnC,CAUApB,EAAchD,UAAUvF,OAAS,SAAS+J,EAAKC,GAI7C,IAHA,IAAIC,EAAgBnF,KAAK8E,OAAO5L,OAC5BkM,EAAQD,EAELC,KAAS,CACd,IAAIC,EAAYrF,KAAK+E,YAAYK,GACX,SAAlBpF,KAAKgF,SACHE,EAAWG,IACbF,EAAgBC,GAGdF,EAAWG,IACbF,EAAgBC,EAGtB,CAEApF,KAAKsF,UAAUL,EAAKC,EAAUC,EAChC,EASA1B,EAAchD,UAAU1F,OAAS,SAASkK,GAGxC,IAFA,IAAIG,EAAQpF,KAAK8E,OAAO5L,OAEjBkM,KAAS,CAEd,GAAIH,IADOjF,KAAK8E,OAAOM,GACL,CAChBpF,KAAK8E,OAAOS,OAAOH,EAAO,GAC1BpF,KAAK+E,YAAYQ,OAAOH,EAAO,GAC/B,KACF,CACF,CACF,EASA3B,EAAchD,UAAU6D,QAAU,SAASkB,GACzCxF,KAAK8E,OAAOR,QAAQkB,EACtB,EAMA/B,EAAchD,UAAUgE,YAAc,WACpC,OAAOzE,KAAK8E,MACd,EAOArB,EAAchD,UAAUgF,mBAAqB,SAASL,GACpD,OAAOpF,KAAK+E,YAAYK,EAC1B,EAMA3B,EAAchD,UAAUiF,cAAgB,WACtC,OAAO1F,KAAK+E,WACd,EAMAtB,EAAchD,UAAUkF,0BAA4B,WAGlD,IAFA,IAAIC,EAAS,GAEJ3M,EAAI,EAAG8K,EAAI/D,KAAK8E,OAAO5L,OAAQD,EAAI8K,EAAG9K,IAC7C2M,EAAOrM,KAAK,CAACyG,KAAK8E,OAAO7L,GAAI+G,KAAK+E,YAAY9L,KAGhD,OAAO2M,CACT,EAUAnC,EAAchD,UAAUD,MAAQ,SAASmE,EAAUC,EAAYC,GAE7D,GAAIF,GAAYC,EAAY,CAI1B,GAHA5E,KAAK8E,OAAS,GACd9E,KAAK+E,YAAc,GAEfJ,EAASzL,SAAW0L,EAAW1L,OACjC,MAAM,IAAIgI,MAAM,oCAGlB,IAAK,IAAIjI,EAAI,EAAGA,EAAI0L,EAASzL,OAAQD,IACnC+G,KAAK9E,OAAOyJ,EAAS1L,GAAI2L,EAAW3L,GAExC,CAEI4L,IACF7E,KAAKgF,SAAWH,EAEpB,EAUApB,EAAchD,UAAU6E,UAAY,SAASL,EAAKC,EAAUE,GACtDpF,KAAK8E,OAAO5L,SAAWkM,GACzBpF,KAAK8E,OAAOvL,KAAK0L,GACjBjF,KAAK+E,YAAYxL,KAAK2L,KAEtBlF,KAAK8E,OAAOS,OAAOH,EAAO,EAAGH,GAC7BjF,KAAK+E,YAAYQ,OAAOH,EAAO,EAAGF,GAEtC,EAEqCzF,EAAOC,UAC1CD,EAAOC,QAAU+D,E,sBCjLkBhE,EAAOC,UACxCD,EAAOC,QAAU,CACfC,OAAQ,EAAQ,KAChBkC,OAAQ,EAAQ,KAChB6B,OAAQ,EAAQ,KAChBD,cAAe,EAAQ,M,oBCN7B,UAOUoC,IAWP,WAEH,SAASC,EAAOxK,GAGZ,IAFA,IAAIyK,EAAOzK,EACP0K,EAAO,GACLD,EAAKE,QACPD,EAAKE,QAAQH,GACbA,EAAOA,EAAKE,OAEhB,OAAOD,CACX,CAQA,IAAIG,EAAQ,CAYRxI,OAAQ,SAASyI,EAAOC,EAAOC,EAAKC,GAChCH,EAAMI,aAEN,IAAIC,GADJF,EAAUA,GAAW,CAAC,GACEE,WAAaN,EAAMO,WAAWC,UAClDC,EAAUL,EAAQK,UAAW,EAE7BC,EAvBD,IAAIC,GAAW,SAASxL,GAC3B,OAAOA,EAAK8H,CAChB,IAsBQ2D,EAAcV,EAMlB,IAJAA,EAAMW,EAAIP,EAAUJ,EAAOC,GAE3BO,EAAStN,KAAK8M,GAERQ,EAASI,OAAS,GAAG,CAGvB,IAAIC,EAAcL,EAASjN,MAG3B,GAAGsN,IAAgBZ,EACf,OAAOR,EAAOoB,GAIlBA,EAAYC,QAAS,EAKrB,IAFA,IAAIvG,EAAYwF,EAAMxF,UAAUsG,GAEvBjO,EAAI,EAAGmO,EAAKxG,EAAU1H,OAAQD,EAAImO,IAAMnO,EAAG,CAChD,IAAIoO,EAAWzG,EAAU3H,GAEzB,IAAIoO,EAASF,SAAUE,EAASC,SAAhC,CAOA,IAAIC,EAASL,EAAYM,EAAIH,EAASI,QAAQP,GAC1CQ,EAAcL,EAASM,UAEtBD,GAAeH,EAASF,EAASG,KAGlCH,EAASM,SAAU,EACnBN,EAASpB,OAASiB,EAClBG,EAASL,EAAIK,EAASL,GAAKP,EAAUY,EAAUf,GAC/Ce,EAASG,EAAID,EACbF,EAASjE,EAAIiE,EAASG,EAAIH,EAASL,EACnCZ,EAAMwB,UAAUP,GACZT,IAGIS,EAASL,EAAID,EAAYC,GAAMK,EAASL,IAAMD,EAAYC,GAAKK,EAASG,EAAIT,EAAYS,KACxFT,EAAcM,GAIjBK,EAMDb,EAASgB,eAAeR,GAJxBR,EAAStN,KAAK8N,GA1BtB,CAiCJ,CACJ,CAEA,OAAIT,EACOd,EAAOiB,GAIX,EACX,EAEAL,WAAY,CACRC,UAAW,SAASmB,EAAMC,GAGtB,OAFStP,KAAKuP,IAAID,EAAKhK,EAAI+J,EAAK/J,GACvBtF,KAAKuP,IAAID,EAAK/J,EAAI8J,EAAK9J,EAEpC,EACAiK,SAAU,SAASH,EAAMC,GACrB,IACIG,EAAKzP,KAAKmJ,KAAK,GACf9E,EAAKrE,KAAKuP,IAAID,EAAKhK,EAAI+J,EAAK/J,GAC5BZ,EAAK1E,KAAKuP,IAAID,EAAK/J,EAAI8J,EAAK9J,GAChC,OAJQ,GAIKlB,EAAKK,IAAS+K,EAAK,GAAWzP,KAAKqD,IAAIgB,EAAIK,EAC5D,GAEJgL,UAAU,SAAS7M,GACfA,EAAK8H,EAAI,EACT9H,EAAKkM,EAAI,EACTlM,EAAK0L,EAAI,EACT1L,EAAKqM,SAAU,EACfrM,EAAK6L,QAAS,EACd7L,EAAK2K,OAAS,IAClB,GASJ,SAASmC,EAAMC,EAAQ9B,GACnBA,EAAUA,GAAW,CAAC,EACtBvG,KAAKsI,MAAQ,GACbtI,KAAKiI,WAAa1B,EAAQ0B,SAC1BjI,KAAKuI,KAAO,GACZ,IAAK,IAAIxK,EAAI,EAAGA,EAAIsK,EAAOnP,OAAQ6E,IAAK,CACpCiC,KAAKuI,KAAKxK,GAAK,GAEf,IAAK,IAAIC,EAAI,EAAGwK,EAAMH,EAAOtK,GAAIC,EAAIwK,EAAItP,OAAQ8E,IAAK,CAClD,IAAI1C,EAAO,IAAImN,EAAS1K,EAAGC,EAAGwK,EAAIxK,IAClCgC,KAAKuI,KAAKxK,GAAGC,GAAK1C,EAClB0E,KAAKsI,MAAM/O,KAAK+B,EACpB,CACJ,CACA0E,KAAKiC,MACT,CAsFA,SAASwG,EAAS1K,EAAGC,EAAG0K,GACpB1I,KAAKjC,EAAIA,EACTiC,KAAKhC,EAAIA,EACTgC,KAAK0I,OAASA,CAClB,CAkBA,SAAS5B,EAAW6B,GAChB3I,KAAK4I,QAAU,GACf5I,KAAK2I,cAAgBA,CACzB,CAsHA,OAnOAP,EAAM3H,UAAUwB,KAAO,WACnBjC,KAAK6I,WAAa,GAClB,IAAK,IAAI5P,EAAI,EAAGA,EAAI+G,KAAKsI,MAAMpP,OAAQD,IACnCkN,EAAMgC,UAAUnI,KAAKsI,MAAMrP,GAEnC,EAEAmP,EAAM3H,UAAU+F,WAAa,WACzB,IAAK,IAAIvN,EAAI,EAAGA,EAAI+G,KAAK6I,WAAW3P,OAAQD,IACxCkN,EAAMgC,UAAUnI,KAAK6I,WAAW5P,IAEpC+G,KAAK6I,WAAa,EACtB,EAEAT,EAAM3H,UAAUmH,UAAY,SAAStM,GACjC0E,KAAK6I,WAAWtP,KAAK+B,EACzB,EAEA8M,EAAM3H,UAAUG,UAAY,SAAStF,GACjC,IAAIwN,EAAM,GACN/K,EAAIzC,EAAKyC,EACTC,EAAI1C,EAAK0C,EACTuK,EAAOvI,KAAKuI,KA4ChB,OAzCGA,EAAKxK,EAAE,IAAMwK,EAAKxK,EAAE,GAAGC,IACtB8K,EAAIvP,KAAKgP,EAAKxK,EAAE,GAAGC,IAIpBuK,EAAKxK,EAAE,IAAMwK,EAAKxK,EAAE,GAAGC,IACtB8K,EAAIvP,KAAKgP,EAAKxK,EAAE,GAAGC,IAIpBuK,EAAKxK,IAAMwK,EAAKxK,GAAGC,EAAE,IACpB8K,EAAIvP,KAAKgP,EAAKxK,GAAGC,EAAE,IAIpBuK,EAAKxK,IAAMwK,EAAKxK,GAAGC,EAAE,IACpB8K,EAAIvP,KAAKgP,EAAKxK,GAAGC,EAAE,IAGnBgC,KAAKiI,WAEFM,EAAKxK,EAAE,IAAMwK,EAAKxK,EAAE,GAAGC,EAAE,IACxB8K,EAAIvP,KAAKgP,EAAKxK,EAAE,GAAGC,EAAE,IAItBuK,EAAKxK,EAAE,IAAMwK,EAAKxK,EAAE,GAAGC,EAAE,IACxB8K,EAAIvP,KAAKgP,EAAKxK,EAAE,GAAGC,EAAE,IAItBuK,EAAKxK,EAAE,IAAMwK,EAAKxK,EAAE,GAAGC,EAAE,IACxB8K,EAAIvP,KAAKgP,EAAKxK,EAAE,GAAGC,EAAE,IAItBuK,EAAKxK,EAAE,IAAMwK,EAAKxK,EAAE,GAAGC,EAAE,IACxB8K,EAAIvP,KAAKgP,EAAKxK,EAAE,GAAGC,EAAE,KAItB8K,CACX,EAEAV,EAAM3H,UAAUsI,SAAW,WAIvB,IAHA,IAEIC,EAAUR,EAAKxK,EAAG+F,EAFlBkF,EAAc,GACdX,EAAQtI,KAAKuI,KAERxK,EAAI,EAAGwD,EAAM+G,EAAMpP,OAAQ6E,EAAIwD,EAAKxD,IAAK,CAG9C,IAFAiL,EAAW,GAENhL,EAAI,EAAG+F,GADZyE,EAAMF,EAAMvK,IACQ7E,OAAQ8E,EAAI+F,EAAG/F,IAC/BgL,EAASzP,KAAKiP,EAAIxK,GAAG0K,QAEzBO,EAAY1P,KAAKyP,EAASE,KAAK,KACnC,CACA,OAAOD,EAAYC,KAAK,KAC5B,EAQAT,EAAShI,UAAUsI,SAAW,WAC1B,MAAO,IAAM/I,KAAKjC,EAAI,IAAMiC,KAAKhC,EAAI,GACzC,EAEAyK,EAAShI,UAAUgH,QAAU,SAAS0B,GAElC,OAAIA,GAAgBA,EAAapL,GAAKiC,KAAKjC,GAAKoL,EAAanL,GAAKgC,KAAKhC,EAC9C,QAAdgC,KAAK0I,OAET1I,KAAK0I,MAChB,EAEAD,EAAShI,UAAU6G,OAAS,WACxB,OAAuB,IAAhBtH,KAAK0I,MAChB,EAOA5B,EAAWrG,UAAY,CACnBlH,KAAM,SAAS6P,GAEXpJ,KAAK4I,QAAQrP,KAAK6P,GAGlBpJ,KAAKqJ,SAASrJ,KAAK4I,QAAQ1P,OAAS,EACxC,EACAU,IAAK,WAED,IAAIgM,EAAS5F,KAAK4I,QAAQ,GAEtBtC,EAAMtG,KAAK4I,QAAQhP,MAOvB,OAJIoG,KAAK4I,QAAQ1P,OAAS,IACtB8G,KAAK4I,QAAQ,GAAKtC,EAClBtG,KAAKsJ,SAAS,IAEX1D,CACX,EACA7K,OAAQ,SAASO,GACb,IAAIrC,EAAI+G,KAAK4I,QAAQnH,QAAQnG,GAIzBgL,EAAMtG,KAAK4I,QAAQhP,MAEnBX,IAAM+G,KAAK4I,QAAQ1P,OAAS,IAC5B8G,KAAK4I,QAAQ3P,GAAKqN,EAEdtG,KAAK2I,cAAcrC,GAAOtG,KAAK2I,cAAcrN,GAC7C0E,KAAKqJ,SAASpQ,GAGd+G,KAAKsJ,SAASrQ,GAG1B,EACAgO,KAAM,WACF,OAAOjH,KAAK4I,QAAQ1P,MACxB,EACA2O,eAAgB,SAASvM,GACrB0E,KAAKqJ,SAASrJ,KAAK4I,QAAQnH,QAAQnG,GACvC,EACA+N,SAAU,SAASE,GAKf,IAHA,IAAIH,EAAUpJ,KAAK4I,QAAQW,GAGpBA,EAAI,GAAG,CAGV,IAAIC,GAAYD,EAAI,GAAM,GAAK,EAC3BtD,EAASjG,KAAK4I,QAAQY,GAE1B,KAAIxJ,KAAK2I,cAAcS,GAAWpJ,KAAK2I,cAAc1C,IAQjD,MAPAjG,KAAK4I,QAAQY,GAAWJ,EACxBpJ,KAAK4I,QAAQW,GAAKtD,EAElBsD,EAAIC,CAMZ,CACJ,EACAF,SAAU,SAASC,GAMf,IAJA,IAAIrQ,EAAS8G,KAAK4I,QAAQ1P,OACtBkQ,EAAUpJ,KAAK4I,QAAQW,GACvBE,EAAYzJ,KAAK2I,cAAcS,KAEvB,CAER,IAIIM,EAJAC,EAAWJ,EAAI,GAAM,EACrBK,EAAUD,EAAU,EAEpBE,EAAO,KAGX,GAAID,EAAU1Q,EAAQ,CAElB,IAAI4Q,EAAS9J,KAAK4I,QAAQgB,IAC1BF,EAAc1J,KAAK2I,cAAcmB,IAGfL,IACdI,EAAOD,EAEf,CAGA,GAAID,EAAUzQ,EAAQ,CAClB,IAAI6Q,EAAS/J,KAAK4I,QAAQe,GACR3J,KAAK2I,cAAcoB,IACT,OAATF,EAAgBJ,EAAYC,KAC3CG,EAAOF,EAEf,CAGA,GAAa,OAATE,EAOA,MANA7J,KAAK4I,QAAQW,GAAKvJ,KAAK4I,QAAQiB,GAC/B7J,KAAK4I,QAAQiB,GAAQT,EACrBG,EAAIM,CAMZ,CACJ,GAGG,CACH1D,MAAOA,EACPiC,MAAOA,EAGX,EA7Y+D,iBAAnB3I,EAAOC,QAC3CD,EAAOC,QAAUmG,KAEjB,EAAO,QAAc,0BAAV,EAAF,GAAY,aAClB,EADkB,qB,kBCZ7BpG,EAAOC,QAAU,SAA6BwD,EAAO8G,EAAI3D,EAAOC,GAC5D,IAAIvI,EAAImF,EAAM,GAAIlF,EAAIkF,EAAM,GACxBjG,GAAS,OACCtE,IAAV0N,IAAqBA,EAAQ,QACrB1N,IAAR2N,IAAmBA,EAAM0D,EAAG9Q,QAEhC,IADA,IAAIqI,GAAO+E,EAAID,GAAO,EACbpN,EAAI,EAAGyJ,EAAInB,EAAM,EAAGtI,EAAIsI,EAAKmB,EAAIzJ,IAAK,CAC3C,IAAIgR,EAAKD,EAAG3D,EAAQ,EAAFpN,EAAI,GAAIiR,EAAKF,EAAG3D,EAAQ,EAAFpN,EAAI,GACxCkR,EAAKH,EAAG3D,EAAQ,EAAF3D,EAAI,GAAI0H,EAAKJ,EAAG3D,EAAQ,EAAF3D,EAAI,GAC1BwH,EAAKlM,GAAQoM,EAAKpM,GAC5BD,GAAKoM,EAAKF,IAAOjM,EAAIkM,IAAOE,EAAKF,GAAMD,IAChChN,GAAUA,EAC7B,CACA,OAAOA,CACX,C,sBCdA,IAAIoN,EAAqB,EAAQ,KAC7BC,EAAuB,EAAQ,KAEnC7K,EAAOC,QAAU,SAAyBwD,EAAO8G,EAAI3D,EAAOC,GACxD,OAAI0D,EAAG9Q,OAAS,GAAK+H,MAAMsJ,QAAQP,EAAG,IAC3BM,EAAqBpH,EAAO8G,EAAI3D,EAAOC,GAEvC+D,EAAmBnH,EAAO8G,EAAI3D,EAAOC,EAEpD,EACA7G,EAAOC,QAAQ8K,OAASF,EACxB7K,EAAOC,QAAQ+K,KAAOJ,C,kBCRtB5K,EAAOC,QAAU,SAA+BwD,EAAO8G,EAAI3D,EAAOC,GAC9D,IAAIvI,EAAImF,EAAM,GAAIlF,EAAIkF,EAAM,GACxBjG,GAAS,OACCtE,IAAV0N,IAAqBA,EAAQ,QACrB1N,IAAR2N,IAAmBA,EAAM0D,EAAG9Q,QAEhC,IADA,IAAIqI,EAAM+E,EAAMD,EACPpN,EAAI,EAAGyJ,EAAInB,EAAM,EAAGtI,EAAIsI,EAAKmB,EAAIzJ,IAAK,CAC3C,IAAIgR,EAAKD,EAAG/Q,EAAEoN,GAAO,GAAI6D,EAAKF,EAAG/Q,EAAEoN,GAAO,GACtC8D,EAAKH,EAAGtH,EAAE2D,GAAO,GAAI+D,EAAKJ,EAAGtH,EAAE2D,GAAO,GACxB6D,EAAKlM,GAAQoM,EAAKpM,GAC5BD,GAAKoM,EAAKF,IAAOjM,EAAIkM,IAAOE,EAAKF,GAAMD,IAChChN,GAAUA,EAC7B,CACA,OAAOA,CACX,C,kBCjBoEwC,EAAOC,QAAwF,WAAW,aAAa,SAASzB,EAAEA,EAAEyM,EAAEtL,EAAEhF,EAAE4M,IAAI,SAAS/I,EAAEsL,EAAEmB,EAAEtL,EAAEhF,EAAE4M,GAAG,KAAK5M,EAAEgF,GAAG,CAAC,GAAGhF,EAAEgF,EAAE,IAAI,CAAC,IAAIuL,EAAEvQ,EAAEgF,EAAE,EAAEwL,EAAEF,EAAEtL,EAAE,EAAE2E,EAAEtL,KAAKoS,IAAIF,GAAGvH,EAAE,GAAG3K,KAAKqS,IAAI,EAAE/G,EAAE,GAAGgH,EAAE,GAAGtS,KAAKmJ,KAAKmC,EAAEX,GAAGuH,EAAEvH,GAAGuH,IAAIC,EAAED,EAAE,EAAE,GAAG,EAAE,GAA+E1M,EAAEsL,EAAEmB,EAA9EjS,KAAKC,IAAI0G,EAAE3G,KAAKuS,MAAMN,EAAEE,EAAExH,EAAEuH,EAAEI,IAAMtS,KAAKqD,IAAI1B,EAAE3B,KAAKuS,MAAMN,GAAGC,EAAEC,GAAGxH,EAAEuH,EAAEI,IAAc/D,EAAE,CAAC,IAAI7N,EAAEoQ,EAAEmB,GAAGzO,EAAEmD,EAAErB,EAAE3D,EAAE,IAAInB,EAAEsQ,EAAEnK,EAAEsL,GAAG1D,EAAEuC,EAAEnP,GAAGjB,GAAG,GAAGF,EAAEsQ,EAAEnK,EAAEhF,GAAG6B,EAAE8B,GAAG,CAAC,IAAI9E,EAAEsQ,EAAEtN,EAAE8B,GAAG9B,IAAI8B,IAAIiJ,EAAEuC,EAAEtN,GAAG9C,GAAG,GAAG8C,IAAI,KAAK+K,EAAEuC,EAAExL,GAAG5E,GAAG,GAAG4E,GAAG,CAAC,IAAIiJ,EAAEuC,EAAEnK,GAAGjG,GAAGF,EAAEsQ,EAAEnK,EAAErB,GAAG9E,EAAEsQ,IAAIxL,EAAE3D,GAAG2D,GAAG2M,IAAItL,EAAErB,EAAE,GAAG2M,GAAG3M,IAAI3D,EAAE2D,EAAE,EAAE,CAAC,CAA9Z,CAAgaE,EAAEyM,EAAEtL,GAAG,EAAEhF,GAAG6D,EAAE/E,OAAO,EAAE8N,GAAGuC,EAAE,CAAC,SAAStQ,EAAEgF,EAAEhF,EAAEsQ,GAAG,IAAImB,EAAEzM,EAAEhF,GAAGgF,EAAEhF,GAAGgF,EAAEsL,GAAGtL,EAAEsL,GAAGmB,CAAC,CAAC,SAASnB,EAAEtL,EAAEhF,GAAG,OAAOgF,EAAEhF,GAAG,EAAEgF,EAAEhF,EAAE,EAAE,CAAC,CAAC,IAAIyR,EAAE,SAASzM,QAAG,IAASA,IAAIA,EAAE,GAAG+B,KAAKiL,YAAYxS,KAAKC,IAAI,EAAEuF,GAAG+B,KAAKkL,YAAYzS,KAAKC,IAAI,EAAED,KAAK0S,KAAK,GAAGnL,KAAKiL,cAAcjL,KAAKoL,OAAO,EAAE,SAAShM,EAAEnB,EAAEhF,EAAEsQ,GAAG,IAAIA,EAAE,OAAOtQ,EAAEwI,QAAQxD,GAAG,IAAI,IAAIyM,EAAE,EAAEA,EAAEzR,EAAEC,OAAOwR,IAAI,GAAGnB,EAAEtL,EAAEhF,EAAEyR,IAAI,OAAOA,EAAE,OAAO,CAAC,CAAC,SAAStQ,EAAE6D,EAAEhF,GAAG+N,EAAE/I,EAAE,EAAEA,EAAE5B,SAASnD,OAAOD,EAAEgF,EAAE,CAAC,SAAS+I,EAAE/I,EAAEhF,EAAEsQ,EAAEmB,EAAEtL,GAAGA,IAAIA,EAAEjG,EAAE,OAAOiG,EAAE/E,KAAK,IAAI+E,EAAE9E,KAAK,IAAI8E,EAAE7E,MAAK,IAAK6E,EAAE5E,MAAK,IAAK,IAAI,IAAIJ,EAAEnB,EAAEmB,EAAEmP,EAAEnP,IAAI,CAAC,IAAI4M,EAAE/I,EAAE5B,SAASjC,GAAGuQ,EAAEvL,EAAEnB,EAAEzB,KAAKkO,EAAE1D,GAAGA,EAAE,CAAC,OAAO5H,CAAC,CAAC,SAASuL,EAAE1M,EAAEhF,GAAG,OAAOgF,EAAE5D,KAAK5B,KAAKqD,IAAImC,EAAE5D,KAAKpB,EAAEoB,MAAM4D,EAAE3D,KAAK7B,KAAKqD,IAAImC,EAAE3D,KAAKrB,EAAEqB,MAAM2D,EAAE1D,KAAK9B,KAAKC,IAAIuF,EAAE1D,KAAKtB,EAAEsB,MAAM0D,EAAEzD,KAAK/B,KAAKC,IAAIuF,EAAEzD,KAAKvB,EAAEuB,MAAMyD,CAAC,CAAC,SAAS2M,EAAE3M,EAAEhF,GAAG,OAAOgF,EAAE5D,KAAKpB,EAAEoB,IAAI,CAAC,SAAS0J,EAAE9F,EAAEhF,GAAG,OAAOgF,EAAE3D,KAAKrB,EAAEqB,IAAI,CAAC,SAAS8I,EAAEnF,GAAG,OAAOA,EAAE1D,KAAK0D,EAAE5D,OAAO4D,EAAEzD,KAAKyD,EAAE3D,KAAK,CAAC,SAASyQ,EAAE9M,GAAG,OAAOA,EAAE1D,KAAK0D,EAAE5D,MAAM4D,EAAEzD,KAAKyD,EAAE3D,KAAK,CAAC,SAAS+Q,EAAEpN,EAAEhF,GAAG,OAAOgF,EAAE5D,MAAMpB,EAAEoB,MAAM4D,EAAE3D,MAAMrB,EAAEqB,MAAMrB,EAAEsB,MAAM0D,EAAE1D,MAAMtB,EAAEuB,MAAMyD,EAAEzD,IAAI,CAAC,SAASwB,EAAEiC,EAAEhF,GAAG,OAAOA,EAAEoB,MAAM4D,EAAE1D,MAAMtB,EAAEqB,MAAM2D,EAAEzD,MAAMvB,EAAEsB,MAAM0D,EAAE5D,MAAMpB,EAAEuB,MAAMyD,EAAE3D,IAAI,CAAC,SAASnB,EAAE8E,GAAG,MAAM,CAAC5B,SAAS4B,EAAEqN,OAAO,EAAE9O,MAAK,EAAGnC,KAAK,IAAIC,KAAK,IAAIC,MAAK,IAAKC,MAAK,IAAK,CAAC,SAASyB,EAAEhD,EAAEsQ,EAAEmB,EAAEtL,EAAEhF,GAAG,IAAI,IAAI4M,EAAE,CAACuC,EAAEmB,GAAG1D,EAAE9N,QAAQ,MAAMwR,EAAE1D,EAAEpN,QAAQ2P,EAAEvC,EAAEpN,QAAQwF,GAAG,CAAC,IAAIuL,EAAEpB,EAAE9Q,KAAK0S,MAAMT,EAAEnB,GAAGnK,EAAE,GAAGA,EAAEnB,EAAEhF,EAAE0R,EAAEpB,EAAEmB,EAAEtQ,GAAG4M,EAAEzN,KAAKgQ,EAAEoB,EAAEA,EAAED,EAAE,CAAC,CAAC,OAAOA,EAAEjK,UAAU8K,IAAI,WAAW,OAAOvL,KAAKwL,KAAKxL,KAAK5D,KAAK,GAAG,EAAEsO,EAAEjK,UAAU9C,OAAO,SAASM,GAAG,IAAIhF,EAAE+G,KAAK5D,KAAKmN,EAAE,GAAG,IAAIvN,EAAEiC,EAAEhF,GAAG,OAAOsQ,EAAE,IAAI,IAAImB,EAAE1K,KAAK7F,OAAOiF,EAAE,GAAGnG,GAAG,CAAC,IAAI,IAAImB,EAAE,EAAEA,EAAEnB,EAAEoD,SAASnD,OAAOkB,IAAI,CAAC,IAAI4M,EAAE/N,EAAEoD,SAASjC,GAAGuQ,EAAE1R,EAAEuD,KAAKkO,EAAE1D,GAAGA,EAAEhL,EAAEiC,EAAE0M,KAAK1R,EAAEuD,KAAK+M,EAAEhQ,KAAKyN,GAAGqE,EAAEpN,EAAE0M,GAAG3K,KAAKwL,KAAKxE,EAAEuC,GAAGnK,EAAE7F,KAAKyN,GAAG,CAAC/N,EAAEmG,EAAExF,KAAK,CAAC,OAAO2P,CAAC,EAAEmB,EAAEjK,UAAUgL,SAAS,SAASxN,GAAG,IAAIhF,EAAE+G,KAAK5D,KAAK,IAAIJ,EAAEiC,EAAEhF,GAAG,OAAM,EAAG,IAAI,IAAIsQ,EAAE,GAAGtQ,GAAG,CAAC,IAAI,IAAIyR,EAAE,EAAEA,EAAEzR,EAAEoD,SAASnD,OAAOwR,IAAI,CAAC,IAAItL,EAAEnG,EAAEoD,SAASqO,GAAGtQ,EAAEnB,EAAEuD,KAAKwD,KAAK7F,OAAOiF,GAAGA,EAAE,GAAGpD,EAAEiC,EAAE7D,GAAG,CAAC,GAAGnB,EAAEuD,MAAM6O,EAAEpN,EAAE7D,GAAG,OAAM,EAAGmP,EAAEhQ,KAAK6F,EAAE,CAAC,CAACnG,EAAEsQ,EAAE3P,KAAK,CAAC,OAAM,CAAE,EAAE8Q,EAAEjK,UAAU7F,KAAK,SAASqD,GAAG,IAAIA,IAAIA,EAAE/E,OAAO,OAAO8G,KAAK,GAAG/B,EAAE/E,OAAO8G,KAAKkL,YAAY,CAAC,IAAI,IAAIjS,EAAE,EAAEA,EAAEgF,EAAE/E,OAAOD,IAAI+G,KAAK9E,OAAO+C,EAAEhF,IAAI,OAAO+G,IAAI,CAAC,IAAIuJ,EAAEvJ,KAAK0L,OAAOzN,EAAE3E,QAAQ,EAAE2E,EAAE/E,OAAO,EAAE,GAAG,GAAG8G,KAAK5D,KAAKC,SAASnD,OAAO,GAAG8G,KAAK5D,KAAKkP,SAAS/B,EAAE+B,OAAOtL,KAAK2L,WAAW3L,KAAK5D,KAAKmN,OAAO,CAAC,GAAGvJ,KAAK5D,KAAKkP,OAAO/B,EAAE+B,OAAO,CAAC,IAAIZ,EAAE1K,KAAK5D,KAAK4D,KAAK5D,KAAKmN,EAAEA,EAAEmB,CAAC,CAAC1K,KAAK4L,QAAQrC,EAAEvJ,KAAK5D,KAAKkP,OAAO/B,EAAE+B,OAAO,GAAE,EAAG,MAAMtL,KAAK5D,KAAKmN,EAAE,OAAOvJ,IAAI,EAAE0K,EAAEjK,UAAUvF,OAAO,SAAS+C,GAAG,OAAOA,GAAG+B,KAAK4L,QAAQ3N,EAAE+B,KAAK5D,KAAKkP,OAAO,GAAGtL,IAAI,EAAE0K,EAAEjK,UAAU2K,MAAM,WAAW,OAAOpL,KAAK5D,KAAKjD,EAAE,IAAI6G,IAAI,EAAE0K,EAAEjK,UAAU1F,OAAO,SAASkD,EAAEhF,GAAG,IAAIgF,EAAE,OAAO+B,KAAK,IAAI,IAAIuJ,EAAEmB,EAAEtQ,EAAE4M,EAAEhH,KAAK5D,KAAKuO,EAAE3K,KAAK7F,OAAO8D,GAAG2M,EAAE,GAAG7G,EAAE,GAAGiD,GAAG4D,EAAE1R,QAAQ,CAAC,GAAG8N,IAAIA,EAAE4D,EAAEhR,MAAM8Q,EAAEE,EAAEA,EAAE1R,OAAO,GAAGqQ,EAAExF,EAAEnK,MAAMQ,GAAE,GAAI4M,EAAExK,KAAK,CAAC,IAAI4G,EAAEhE,EAAEnB,EAAE+I,EAAE3K,SAASpD,GAAG,IAAI,IAAImK,EAAE,OAAO4D,EAAE3K,SAASkJ,OAAOnC,EAAE,GAAGwH,EAAErR,KAAKyN,GAAGhH,KAAK6L,UAAUjB,GAAG5K,IAAI,CAAC5F,GAAG4M,EAAExK,OAAO6O,EAAErE,EAAE2D,GAAGD,GAAGnB,IAAIvC,EAAE0D,EAAErO,SAASkN,GAAGnP,GAAE,GAAI4M,EAAE,MAAM4D,EAAErR,KAAKyN,GAAGjD,EAAExK,KAAKgQ,GAAGA,EAAE,EAAEmB,EAAE1D,EAAEA,EAAEA,EAAE3K,SAAS,GAAG,CAAC,OAAO2D,IAAI,EAAE0K,EAAEjK,UAAUtG,OAAO,SAAS8D,GAAG,OAAOA,CAAC,EAAEyM,EAAEjK,UAAUhG,YAAY,SAASwD,EAAEhF,GAAG,OAAOgF,EAAE5D,KAAKpB,EAAEoB,IAAI,EAAEqQ,EAAEjK,UAAU9F,YAAY,SAASsD,EAAEhF,GAAG,OAAOgF,EAAE3D,KAAKrB,EAAEqB,IAAI,EAAEoQ,EAAEjK,UAAUqL,OAAO,WAAW,OAAO9L,KAAK5D,IAAI,EAAEsO,EAAEjK,UAAUsL,SAAS,SAAS9N,GAAG,OAAO+B,KAAK5D,KAAK6B,EAAE+B,IAAI,EAAE0K,EAAEjK,UAAU+K,KAAK,SAASvN,EAAEhF,GAAG,IAAI,IAAIsQ,EAAE,GAAGtL,GAAGA,EAAEzB,KAAKvD,EAAEM,KAAKyS,MAAM/S,EAAEgF,EAAE5B,UAAUkN,EAAEhQ,KAAKyS,MAAMzC,EAAEtL,EAAE5B,UAAU4B,EAAEsL,EAAE3P,MAAM,OAAOX,CAAC,EAAEyR,EAAEjK,UAAUiL,OAAO,SAASzN,EAAEhF,EAAEsQ,EAAEmB,GAAG,IAAItL,EAAE4H,EAAEuC,EAAEtQ,EAAE,EAAE0R,EAAE3K,KAAKiL,YAAY,GAAGjE,GAAG2D,EAAE,OAAOvQ,EAAEgF,EAAEjG,EAAE8E,EAAE3E,MAAML,EAAEsQ,EAAE,IAAIvJ,KAAK7F,QAAQiF,EAAEsL,IAAIA,EAAEjS,KAAK0S,KAAK1S,KAAKoS,IAAI7D,GAAGvO,KAAKoS,IAAIF,IAAIA,EAAElS,KAAK0S,KAAKnE,EAAEvO,KAAKwT,IAAItB,EAAED,EAAE,MAAMtL,EAAEjG,EAAE,KAAKqD,MAAK,EAAG4C,EAAEkM,OAAOZ,EAAE,IAAIE,EAAEnS,KAAK0S,KAAKnE,EAAE2D,GAAG5G,EAAE6G,EAAEnS,KAAK0S,KAAK1S,KAAKmJ,KAAK+I,IAAI1O,EAAEgC,EAAEhF,EAAEsQ,EAAExF,EAAE/D,KAAKvF,aAAa,IAAI,IAAI2I,EAAEnK,EAAEmK,GAAGmG,EAAEnG,GAAGW,EAAE,CAAC,IAAIgH,EAAEtS,KAAKqD,IAAIsH,EAAEW,EAAE,EAAEwF,GAAGtN,EAAEgC,EAAEmF,EAAE2H,EAAEH,EAAE5K,KAAKrF,aAAa,IAAI,IAAI0Q,EAAEjI,EAAEiI,GAAGN,EAAEM,GAAGT,EAAE,CAAC,IAAI5O,EAAEvD,KAAKqD,IAAIuP,EAAET,EAAE,EAAEG,GAAG3L,EAAE/C,SAAS9C,KAAKyG,KAAK0L,OAAOzN,EAAEoN,EAAErP,EAAE0O,EAAE,GAAG,CAAC,CAAC,OAAOtQ,EAAEgF,EAAEY,KAAK7F,QAAQiF,CAAC,EAAEsL,EAAEjK,UAAUyL,eAAe,SAASjO,EAAEhF,EAAEsQ,EAAEmB,GAAG,KAAKA,EAAEnR,KAAKN,IAAIA,EAAEuD,MAAMkO,EAAExR,OAAO,IAAIqQ,GAAG,CAAC,IAAI,IAAInK,EAAE,IAAIhF,EAAE,IAAI4M,OAAE,EAAO2D,EAAE,EAAEA,EAAE1R,EAAEoD,SAASnD,OAAOyR,IAAI,CAAC,IAAIC,EAAE3R,EAAEoD,SAASsO,GAAG5G,EAAEX,EAAEwH,GAAGG,GAAGM,EAAEpN,EAAEjC,EAAE4O,GAAGnS,KAAKC,IAAIsD,EAAEzB,KAAK8Q,EAAE9Q,MAAM9B,KAAKqD,IAAIE,EAAE3B,KAAKgR,EAAEhR,QAAQ5B,KAAKC,IAAIsD,EAAExB,KAAK6Q,EAAE7Q,MAAM/B,KAAKqD,IAAIE,EAAE1B,KAAK+Q,EAAE/Q,OAAOyJ,GAAGgH,EAAE3Q,GAAGA,EAAE2Q,EAAE3L,EAAE2E,EAAE3E,EAAE2E,EAAE3E,EAAE4H,EAAE4D,GAAGG,IAAI3Q,GAAG2J,EAAE3E,IAAIA,EAAE2E,EAAEiD,EAAE4D,EAAE,CAAC3R,EAAE+N,GAAG/N,EAAEoD,SAAS,EAAE,CAAC,IAAIgP,EAAErP,EAAE,OAAO/C,CAAC,EAAEyR,EAAEjK,UAAUmL,QAAQ,SAAS3N,EAAEhF,EAAEsQ,GAAG,IAAImB,EAAEnB,EAAEtL,EAAE+B,KAAK7F,OAAO8D,GAAGmB,EAAE,GAAGhF,EAAE4F,KAAKkM,eAAexB,EAAE1K,KAAK5D,KAAKnD,EAAEmG,GAAG,IAAIhF,EAAEiC,SAAS9C,KAAK0E,GAAG0M,EAAEvQ,EAAEsQ,GAAGzR,GAAG,GAAGmG,EAAEnG,GAAGoD,SAASnD,OAAO8G,KAAKiL,aAAajL,KAAKmM,OAAO/M,EAAEnG,GAAGA,IAAI+G,KAAKoM,oBAAoB1B,EAAEtL,EAAEnG,EAAE,EAAEyR,EAAEjK,UAAU0L,OAAO,SAASlO,EAAEhF,GAAG,IAAIsQ,EAAEtL,EAAEhF,GAAGyR,EAAEnB,EAAElN,SAASnD,OAAOkG,EAAEY,KAAKkL,YAAYlL,KAAKqM,iBAAiB9C,EAAEnK,EAAEsL,GAAG,IAAI1D,EAAEhH,KAAKsM,kBAAkB/C,EAAEnK,EAAEsL,GAAGC,EAAExR,EAAEoQ,EAAElN,SAASkJ,OAAOyB,EAAEuC,EAAElN,SAASnD,OAAO8N,IAAI2D,EAAEW,OAAO/B,EAAE+B,OAAOX,EAAEnO,KAAK+M,EAAE/M,KAAKpC,EAAEmP,EAAEvJ,KAAK7F,QAAQC,EAAEuQ,EAAE3K,KAAK7F,QAAQlB,EAAEgF,EAAEhF,EAAE,GAAGoD,SAAS9C,KAAKoR,GAAG3K,KAAK2L,WAAWpC,EAAEoB,EAAE,EAAED,EAAEjK,UAAUkL,WAAW,SAAS1N,EAAEhF,GAAG+G,KAAK5D,KAAKjD,EAAE,CAAC8E,EAAEhF,IAAI+G,KAAK5D,KAAKkP,OAAOrN,EAAEqN,OAAO,EAAEtL,KAAK5D,KAAKI,MAAK,EAAGpC,EAAE4F,KAAK5D,KAAK4D,KAAK7F,OAAO,EAAEuQ,EAAEjK,UAAU6L,kBAAkB,SAASrO,EAAEhF,EAAEsQ,GAAG,IAAI,IAAImB,EAAEtL,EAAEhF,EAAEuQ,EAAEC,EAAE7G,EAAEgH,EAAEM,EAAE,IAAIrP,EAAE,IAAI7C,EAAEF,EAAEE,GAAGoQ,EAAEtQ,EAAEE,IAAI,CAAC,IAAI8C,EAAE+K,EAAE/I,EAAE,EAAE9E,EAAE6G,KAAK7F,QAAQ4D,EAAEiJ,EAAE/I,EAAE9E,EAAEoQ,EAAEvJ,KAAK7F,QAAQoS,GAAGnN,EAAEnD,EAAE7B,EAAE2D,EAAE4M,OAAE,EAAOC,OAAE,EAAO7G,OAAE,EAAOgH,OAAE,EAAOJ,EAAElS,KAAKC,IAAI0G,EAAE/E,KAAKD,EAAEC,MAAMuQ,EAAEnS,KAAKC,IAAI0G,EAAE9E,KAAKF,EAAEE,MAAMyJ,EAAEtL,KAAKqD,IAAIsD,EAAE7E,KAAKH,EAAEG,MAAMwQ,EAAEtS,KAAKqD,IAAIsD,EAAE5E,KAAKJ,EAAEI,MAAM/B,KAAKC,IAAI,EAAEqL,EAAE4G,GAAGlS,KAAKC,IAAI,EAAEqS,EAAEH,IAAI4B,EAAEpJ,EAAEnH,GAAGmH,EAAErF,GAAGwO,EAAElB,GAAGA,EAAEkB,EAAE7B,EAAEvR,EAAE6C,EAAEwQ,EAAExQ,EAAEwQ,EAAExQ,GAAGuQ,IAAIlB,GAAGmB,EAAExQ,IAAIA,EAAEwQ,EAAE9B,EAAEvR,EAAE,CAAC,OAAOuR,GAAGnB,EAAEtQ,CAAC,EAAEyR,EAAEjK,UAAU4L,iBAAiB,SAASpO,EAAEhF,EAAEsQ,GAAG,IAAImB,EAAEzM,EAAEzB,KAAKwD,KAAKvF,YAAYmQ,EAAExL,EAAEnB,EAAEzB,KAAKwD,KAAKrF,YAAYoJ,EAAE/D,KAAKyM,eAAexO,EAAEhF,EAAEsQ,EAAEmB,GAAG1K,KAAKyM,eAAexO,EAAEhF,EAAEsQ,EAAEnK,IAAInB,EAAE5B,SAAS7C,KAAKkR,EAAE,EAAEA,EAAEjK,UAAUgM,eAAe,SAASxO,EAAEhF,EAAEsQ,EAAEmB,GAAGzM,EAAE5B,SAAS7C,KAAKkR,GAAG,IAAI,IAAItL,EAAEY,KAAK7F,OAAOC,EAAE4M,EAAE/I,EAAE,EAAEhF,EAAEmG,GAAGwL,EAAE5D,EAAE/I,EAAEsL,EAAEtQ,EAAEsQ,EAAEnK,GAAG2E,EAAEgH,EAAE3Q,GAAG2Q,EAAEH,GAAGxH,EAAEnK,EAAEmK,EAAEmG,EAAEtQ,EAAEmK,IAAI,CAAC,IAAIiI,EAAEpN,EAAE5B,SAAS+G,GAAGuH,EAAEvQ,EAAE6D,EAAEzB,KAAK4C,EAAEiM,GAAGA,GAAGtH,GAAGgH,EAAE3Q,EAAE,CAAC,IAAI,IAAI4B,EAAEuN,EAAEtQ,EAAE,EAAE+C,GAAG/C,EAAE+C,IAAI,CAAC,IAAI7C,EAAE8E,EAAE5B,SAASL,GAAG2O,EAAEC,EAAE3M,EAAEzB,KAAK4C,EAAEjG,GAAGA,GAAG4K,GAAGgH,EAAEH,EAAE,CAAC,OAAO7G,CAAC,EAAE2G,EAAEjK,UAAU2L,oBAAoB,SAASnO,EAAEhF,EAAEsQ,GAAG,IAAI,IAAImB,EAAEnB,EAAEmB,GAAG,EAAEA,IAAIC,EAAE1R,EAAEyR,GAAGzM,EAAE,EAAEyM,EAAEjK,UAAUoL,UAAU,SAAS5N,GAAG,IAAI,IAAIhF,EAAEgF,EAAE/E,OAAO,EAAEqQ,OAAE,EAAOtQ,GAAG,EAAEA,IAAI,IAAIgF,EAAEhF,GAAGoD,SAASnD,OAAOD,EAAE,GAAGsQ,EAAEtL,EAAEhF,EAAE,GAAGoD,UAAUkJ,OAAOgE,EAAE9H,QAAQxD,EAAEhF,IAAI,GAAG+G,KAAKoL,QAAQhR,EAAE6D,EAAEhF,GAAG+G,KAAK7F,OAAO,EAAEuQ,CAAC,CAAzuMzR,E,qBCA2F,SAASgF,GAAG,aAAa,MAAMmB,EAAE,UAAUmK,EAAE,sBAAsB,SAASmB,EAAEzM,EAAEmB,EAAEmK,EAAEmB,EAAEC,GAAG,IAAIvH,EAAEnK,EAAE8R,EAAE/O,EAAE4O,EAAExL,EAAE,GAAGhF,EAAEsQ,EAAE,GAAGzO,EAAE,EAAE8H,EAAE,EAAE3J,EAAEwQ,GAAGxQ,GAAGwQ,GAAGxH,EAAEwH,EAAEA,EAAExL,IAAInD,KAAKmH,EAAEhJ,EAAEA,EAAEsQ,IAAI3G,IAAI,IAAI5K,EAAE,EAAE,GAAG8C,EAAEgC,GAAG8F,EAAEwF,EAAE,IAAInP,EAAEwQ,GAAGxQ,GAAGwQ,GAAGG,EAAE3H,IAAInK,EAAE2R,EAAExH,GAAGwH,GAAGA,EAAExL,IAAInD,KAAK8O,EAAE3H,IAAInK,EAAEmB,EAAEgJ,GAAGhJ,GAAGA,EAAEsQ,IAAI3G,IAAIX,EAAEnK,EAAE,IAAI8R,IAAIJ,EAAExR,KAAK4R,GAAG9O,EAAEgC,GAAG8F,EAAEwF,GAAGnP,EAAEwQ,GAAGxQ,GAAGwQ,GAAGG,EAAE3H,IAAInK,EAAEmK,EAAEwH,IAAI5O,EAAE/C,EAAEmK,KAAKwH,EAAE5O,GAAG4O,EAAExL,IAAInD,KAAK8O,EAAE3H,IAAInK,EAAEmK,EAAEhJ,IAAI4B,EAAE/C,EAAEmK,KAAKhJ,EAAE4B,GAAG5B,EAAEsQ,IAAI3G,IAAIX,EAAEnK,EAAE,IAAI8R,IAAIJ,EAAExR,KAAK4R,GAAG,KAAK9O,EAAEgC,GAAG8M,EAAE3H,IAAInK,EAAEmK,EAAEwH,IAAI5O,EAAE/C,EAAEmK,KAAKwH,EAAE5O,GAAG4O,EAAExL,IAAInD,GAAGmH,EAAEnK,EAAE,IAAI8R,IAAIJ,EAAExR,KAAK4R,GAAG,KAAKhH,EAAEwF,GAAGwB,EAAE3H,IAAInK,EAAEmK,EAAEhJ,IAAI4B,EAAE/C,EAAEmK,KAAKhJ,EAAE4B,GAAG5B,EAAEsQ,IAAI3G,GAAGX,EAAEnK,EAAE,IAAI8R,IAAIJ,EAAExR,KAAK4R,GAAG,OAAO,IAAI3H,GAAG,IAAIjK,IAAIwR,EAAExR,KAAKiK,GAAGjK,CAAC,CAAC,SAASwR,EAAE1M,GAAG,OAAO,IAAIyO,aAAazO,EAAE,CAAC,MAAMmF,EAAE,sBAAsBnK,EAAE,sBAAsB8R,EAAE,sBAAsB/O,EAAE2O,EAAE,GAAGC,EAAED,EAAE,GAAGvQ,EAAEuQ,EAAE,IAAI1O,EAAE0O,EAAE,IAAI5G,EAAE4G,EAAE,GAAG1M,EAAE0O,SAAS,SAAS1O,EAAE0M,EAAExR,EAAEuB,EAAEsD,EAAEgJ,GAAG,MAAMwF,GAAG7B,EAAE3D,IAAI7N,EAAE6E,GAAGD,GAAGE,EAAED,IAAItD,EAAEsM,GAAGtE,EAAE8J,EAAEzO,EAAE,GAAG,IAAIyO,GAAG,IAAIzO,GAAGyO,EAAE,GAAGzO,EAAE,EAAE,OAAO2E,EAAE,MAAM2I,EAAE5S,KAAKuP,IAAIwE,EAAEzO,GAAG,OAAOtF,KAAKuP,IAAItF,IAAIU,EAAEiI,EAAE3I,GAAG,SAASzE,EAAE0M,EAAEvH,EAAEjK,EAAEuB,EAAEsD,EAAEgJ,GAAG,IAAIwF,EAAEzO,EAAE2E,EAAE2I,EAAEuB,EAAEL,EAAEM,EAAEC,EAAEC,EAAEC,EAAExL,EAAEgG,EAAE1F,EAAEJ,EAAEuL,EAAEC,EAAEC,EAAE9N,EAAE,MAAM+N,EAAEnP,EAAEvD,EAAE2S,EAAEjK,EAAE1I,EAAE4S,EAAE3C,EAAE3M,EAAEuP,EAAEpU,EAAE6E,EAAE4O,GAAGK,GAAGH,EAAEM,GAAGP,GAAGN,EAAEnN,EAAEgO,IAAIb,EAAEa,MAAMJ,EAAEO,GAAGR,GAAGR,EAAEnN,EAAEmO,IAAIhB,EAAEgB,OAAO7L,EAAE0L,EAAEG,GAAGV,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKxL,EAAEyL,GAAGE,GAAGL,EAAEQ,GAAGT,GAAGN,EAAEnN,EAAEkO,IAAIf,EAAEe,MAAMN,EAAEK,GAAGN,GAAGR,EAAEnN,EAAEiO,IAAId,EAAEc,OAAOH,EAAEI,EAAED,GAAGR,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKhR,EAAE,GAAGiR,GAAGzL,EAAEoL,IAAIA,EAAEO,GAAGP,GAAG9K,EAAEJ,IAAI8F,EAAE9F,EAAEF,IAAIoL,EAAEpF,EAAE9F,KAAKF,EAAEoL,KAAKpL,EAAEM,EAAEoL,GAAGlR,EAAE,GAAG8F,GAAGN,EAAEoL,IAAIA,EAAEM,GAAGN,GAAGvN,EAAEmI,EAAEhG,GAAGgG,EAAExL,EAAE,GAAGwL,GAAGnI,EAAEuN,IAAIpL,EAAEoL,GAAG5Q,EAAE,GAAGqD,EAAE,IAAImO,EAAE,SAASvP,EAAEmB,GAAG,IAAImK,EAAEnK,EAAE,GAAG,IAAI,IAAIsL,EAAE,EAAEA,EAAEzM,EAAEyM,IAAInB,GAAGnK,EAAEsL,GAAG,OAAOnB,CAAC,CAA7D,CAA+D,EAAEvN,GAAGyR,EAAExU,EAAE+N,EAAE,GAAGwG,GAAGC,IAAID,GAAGC,EAAE,OAAOD,EAAE,GAAGhB,EAAEvO,GAAGmP,GAAGR,EAAE3O,EAAEmP,KAAKR,EAAElS,GAAGgI,EAAEU,GAAGiK,GAAGT,EAAExJ,EAAEiK,KAAKT,EAAElS,GAAGqD,EAAE4M,GAAG2C,GAAGV,EAAEjC,EAAE2C,KAAKV,EAAE5O,GAAGqN,EAAElS,GAAGoU,GAAGX,EAAEzT,EAAEoU,KAAKX,EAAE5O,GAAG,IAAIwO,GAAG,IAAIzO,GAAG,IAAI2E,GAAG,IAAI2I,EAAE,OAAOmC,EAAE,GAAGC,EAAE1C,EAAE/D,EAAEuC,EAAE9Q,KAAKuP,IAAIwF,IAAIA,GAAGJ,EAAE/B,EAAEkC,EAAEf,GAAGc,EAAE5K,EAAE2K,EAAEtP,KAAK0P,IAAID,GAAGC,EAAE,OAAOD,EAAEZ,GAAGK,GAAGH,EAAEN,GAAGK,GAAGN,EAAEnN,EAAEoN,IAAID,EAAEC,MAAMQ,EAAEO,GAAGR,GAAGR,EAAEnN,EAAEmO,IAAIhB,EAAEgB,OAAO7L,EAAE8K,EAAEe,GAAGV,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKxL,EAAEyL,GAAGE,GAAGL,EAAE/O,GAAG8O,GAAGN,EAAEnN,EAAErB,IAAIwO,EAAExO,MAAMiP,EAAEK,GAAGN,GAAGR,EAAEnN,EAAEiO,IAAId,EAAEc,OAAOH,EAAEnP,EAAEsP,GAAGR,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKjJ,EAAE,GAAGkJ,GAAGzL,EAAEoL,IAAIA,EAAEO,GAAGP,GAAG9K,EAAEJ,IAAI8F,EAAE9F,EAAEF,IAAIoL,EAAEpF,EAAE9F,KAAKF,EAAEoL,KAAKpL,EAAEM,EAAEoL,GAAGnJ,EAAE,GAAGjC,GAAGN,EAAEoL,IAAIA,EAAEM,GAAGN,GAAGvN,EAAEmI,EAAEhG,GAAGgG,EAAEzD,EAAE,GAAGyD,GAAGnI,EAAEuN,IAAIpL,EAAEoL,GAAG7I,EAAE,GAAG1E,EAAE,MAAMqO,EAAEhD,EAAE,EAAE1O,EAAE,EAAE+H,EAAE6G,GAAGgC,GAAGK,GAAGH,EAAEM,GAAGP,GAAGN,EAAEnN,EAAEgO,IAAIb,EAAEa,MAAMJ,EAAE3B,GAAG0B,GAAGR,EAAEnN,EAAEiM,IAAIkB,EAAElB,OAAO3J,EAAE0L,EAAE/B,GAAGwB,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKxL,EAAEyL,GAAGE,GAAGL,EAAEQ,GAAGT,GAAGN,EAAEnN,EAAEkO,IAAIf,EAAEe,MAAMN,EAAEtK,GAAGqK,GAAGR,EAAEnN,EAAEsD,IAAI6J,EAAE7J,OAAOwK,EAAEI,EAAE5K,GAAGmK,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKjJ,EAAE,GAAGkJ,GAAGzL,EAAEoL,IAAIA,EAAEO,GAAGP,GAAG9K,EAAEJ,IAAI8F,EAAE9F,EAAEF,IAAIoL,EAAEpF,EAAE9F,KAAKF,EAAEoL,KAAKpL,EAAEM,EAAEoL,GAAGnJ,EAAE,GAAGjC,GAAGN,EAAEoL,IAAIA,EAAEM,GAAGN,GAAGvN,EAAEmI,EAAEhG,GAAGgG,EAAEzD,EAAE,GAAGyD,GAAGnI,EAAEuN,IAAIpL,EAAEoL,GAAG7I,EAAE,GAAG1E,EAAE,MAAMsO,EAAEjD,EAAEgD,EAAE9C,EAAE,EAAE7G,EAAE3J,GAAGwS,GAAGK,GAAGH,EAAEN,GAAGK,GAAGN,EAAEnN,EAAEoN,IAAID,EAAEC,MAAMQ,EAAE3B,GAAG0B,GAAGR,EAAEnN,EAAEiM,IAAIkB,EAAElB,OAAO3J,EAAE8K,EAAEnB,GAAGwB,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKxL,EAAEyL,GAAGE,GAAGL,EAAE/O,GAAG8O,GAAGN,EAAEnN,EAAErB,IAAIwO,EAAExO,MAAMiP,EAAEtK,GAAGqK,GAAGR,EAAEnN,EAAEsD,IAAI6J,EAAE7J,OAAOwK,EAAEnP,EAAE2E,GAAGmK,EAAEE,EAAED,EAAEC,EAAEF,EAAEG,KAAKjJ,EAAE,GAAGkJ,GAAGzL,EAAEoL,IAAIA,EAAEO,GAAGP,GAAG9K,EAAEJ,IAAI8F,EAAE9F,EAAEF,IAAIoL,EAAEpF,EAAE9F,KAAKF,EAAEoL,KAAKpL,EAAEM,EAAEoL,GAAGnJ,EAAE,GAAGjC,GAAGN,EAAEoL,IAAIA,EAAEM,GAAGN,GAAGvN,EAAEmI,EAAEhG,GAAGgG,EAAEzD,EAAE,GAAGyD,GAAGnI,EAAEuN,IAAIpL,EAAEoL,GAAG7I,EAAE,GAAG1E,EAAE,MAAMuO,EAAElD,EAAEiD,EAAEvT,EAAE,EAAE2J,EAAE9H,GAAG,OAAOA,EAAE2R,EAAE,EAAE,CAAlhD,CAAohD3P,EAAE0M,EAAExR,EAAEuB,EAAEsD,EAAEgJ,EAAEqE,EAAE,EAAEpN,EAAE4P,aAAa,SAAS5P,EAAEmB,EAAEmK,EAAEmB,EAAEC,EAAEvH,GAAG,OAAOhE,EAAEgE,IAAImG,EAAEoB,IAAI1M,EAAE0M,IAAID,EAAEtH,EAAE,EAAE0K,OAAOC,eAAe9P,EAAE,aAAa,CAAC+P,OAAM,GAAI,CAAhnF5O,CAAEM,E,gFCCvD,MAAMuO,EACjB,WAAAC,CAAY9R,EAAO,GAAI+R,EAAUC,GAK7B,GAJApO,KAAK5D,KAAOA,EACZ4D,KAAK9G,OAAS8G,KAAK5D,KAAKlD,OACxB8G,KAAKmO,QAAUA,EAEXnO,KAAK9G,OAAS,EACd,IAAK,IAAID,GAAK+G,KAAK9G,QAAU,GAAK,EAAGD,GAAK,EAAGA,IAAK+G,KAAKqO,MAAMpV,EAErE,CAEA,IAAAM,CAAKqD,GACDoD,KAAK5D,KAAK7C,KAAKqD,GACfoD,KAAK9G,SACL8G,KAAKsO,IAAItO,KAAK9G,OAAS,EAC3B,CAEA,GAAAU,GACI,GAAoB,IAAhBoG,KAAK9G,OAAc,OAEvB,MAAMJ,EAAMkH,KAAK5D,KAAK,GAChBpD,EAASgH,KAAK5D,KAAKxC,MAQzB,OAPAoG,KAAK9G,SAED8G,KAAK9G,OAAS,IACd8G,KAAK5D,KAAK,GAAKpD,EACfgH,KAAKqO,MAAM,IAGRvV,CACX,CAEA,IAAA6D,GACI,OAAOqD,KAAK5D,KAAK,EACrB,CAEA,GAAAkS,CAAIC,GACA,MAAM,KAACnS,EAAI,QAAE+R,GAAWnO,KAClBpD,EAAOR,EAAKmS,GAElB,KAAOA,EAAM,GAAG,CACZ,MAAMtI,EAAUsI,EAAM,GAAM,EACtBC,EAAUpS,EAAK6J,GACrB,GAAIkI,EAAQvR,EAAM4R,IAAY,EAAG,MACjCpS,EAAKmS,GAAOC,EACZD,EAAMtI,CACV,CAEA7J,EAAKmS,GAAO3R,CAChB,CAEA,KAAAyR,CAAME,GACF,MAAM,KAACnS,EAAI,QAAE+R,GAAWnO,KAClByO,EAAazO,KAAK9G,QAAU,EAC5B0D,EAAOR,EAAKmS,GAElB,KAAOA,EAAME,GAAY,CACrB,IAAI5V,EAAoB,GAAZ0V,GAAO,GACfG,EAAOtS,EAAKvD,GAChB,MAAME,EAAQF,EAAO,EAMrB,GAJIE,EAAQiH,KAAK9G,QAAUiV,EAAQ/R,EAAKrD,GAAQ2V,GAAQ,IACpD7V,EAAOE,EACP2V,EAAOtS,EAAKrD,IAEZoV,EAAQO,EAAM9R,IAAS,EAAG,MAE9BR,EAAKmS,GAAOG,EACZH,EAAM1V,CACV,CAEAuD,EAAKmS,GAAO3R,CAChB,EAGJ,SAASwR,EAAehU,EAAGM,GACvB,OAAON,EAAIM,GAAK,EAAIN,EAAIM,EAAI,EAAI,CACpC,C,GC7EIiU,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlW,IAAjBmW,EACH,OAAOA,EAAapP,QAGrB,IAAID,EAASkP,EAAyBE,GAAY,CAGjDnP,QAAS,CAAC,GAOX,OAHAqP,EAAoBF,GAAUG,KAAKvP,EAAOC,QAASD,EAAQA,EAAOC,QAASkP,GAGpEnP,EAAOC,OACf,CCrBAkP,EAAoBrF,EAAI,SAAS9J,GAChC,IAAIwP,EAASxP,GAAUA,EAAOyP,WAC7B,WAAa,OAAOzP,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAmP,EAAoB3S,EAAEgT,EAAQ,CAAE7U,EAAG6U,IAC5BA,CACR,ECNAL,EAAoB3S,EAAI,SAASyD,EAASmG,GACzC,IAAI,IAAIsJ,KAAOtJ,EACX+I,EAAoBjE,EAAE9E,EAAYsJ,KAASP,EAAoBjE,EAAEjL,EAASyP,IAC5ErB,OAAOC,eAAerO,EAASyP,EAAK,CAAEC,YAAY,EAAMC,IAAKxJ,EAAWsJ,IAG3E,ECPAP,EAAoBjE,EAAI,SAAS2E,EAAKC,GAAQ,OAAOzB,OAAOrN,UAAU+O,eAAeR,KAAKM,EAAKC,EAAO,ECCtGX,EAAoBlE,EAAI,SAAShL,GACX,oBAAX+P,QAA0BA,OAAOC,aAC1C5B,OAAOC,eAAerO,EAAS+P,OAAOC,YAAa,CAAE1B,MAAO,WAE7DF,OAAOC,eAAerO,EAAS,aAAc,CAAEsO,OAAO,GACvD,E,8CCDA,IAAI2B,EAAYC,EAAqBC,EAKrC,MAAMC,EACL,GACA,GACA,GACA,GACA,GAEA,WAAA5B,CAAY6B,EAAYC,EAAaC,GACpCjQ,MAAK,EAAc+P,EACnB/P,MAAK,EAAegQ,EACpBhQ,MAAK,EAAUiQ,CAChB,CAEA,OAAM,GACL,QAAmBtX,IAAfgX,EAA0B,CAC7B,MAAMO,EAAmC,cAAtBC,SAASC,SAEtBC,QAAaC,OAAgC,WAAWJ,EAAa,OAAS,SAEpFP,EAAaU,EAAKV,WAAYC,EAAsBS,EAAKT,oBACxDC,EAAyBQ,EAAKR,uBAE/B7P,MAAK,EAAkB2P,EAAWY,eAClCvQ,MAAK,EAAiB2P,EAAWa,aAClC,CACD,CAQA,gBAAMC,EAAW,gBAChBC,EAAkBf,EAAWgB,iBAG1B,CAAC,SACE3Q,MAAK,IAIX,MAAM4Q,EAAe,IAAIC,IAAOC,EAAc,IAAID,IAE5CE,EAAmB,SAAUC,EAAeC,GACjD,MAAMC,EAASD,EAAGE,YAElB,QAAIH,EAAcI,SAASF,EAG5B,EAEMG,EAAqB,CAACX,GACtBY,EAA2BC,MAAOrO,EAAOsO,EAAMC,EAAM1T,EAAGC,KAC7D,GAAIwT,GAAQ,GAAKA,EAAOxR,MAAK,GAAeyR,GAAQ,GAAKA,EAAOzR,MAAK,EAAc,CAClF,MAAMxE,QAAawE,MAAK,EAAQqP,IAAIoC,EAAOzR,MAAK,EAAcwR,GAC9D,GAAIhW,IAAuD,IAA/CuV,EAAiBM,EAAoB7V,GAAgB,CAEhE,MAAMkW,EAAa,GAAG3T,KAAKC,IACrB2T,EAAY,GAAGH,KAAQC,IAC7B,IAAsD,IAAlDX,EAAYc,IAAI,GAAGF,KAAcC,OAA4E,IAAlDb,EAAYc,IAAI,GAAGD,KAAaD,KAAyB,CASvH,GAHAZ,EAAY3N,IAAI,GAAGuO,KAAcC,IAAa,CAAEE,KAAM3O,EAAO4O,GAAItW,IAG5DoV,EAAagB,IAAIF,GAGf,CACKd,EAAavB,IAAIqC,GACzBK,UAAUxY,KAAKiC,EACnB,MALC0H,EAAM6O,UAAY,CAACvW,GACnBoV,EAAazN,IAAIuO,EAAYxO,GAK9B,GAAK0N,EAAagB,IAAID,GAGf,CACKf,EAAavB,IAAIsC,GACzBI,UAAUxY,KAAK2J,EACnB,MALC1H,EAAKuW,UAAY,CAAC7O,GAClB0N,EAAazN,IAAIwO,EAAWnW,EAK9B,CACD,CACD,GAGKwW,QAAmBhS,MAAK,EAAQiS,SAChCC,EAAwB,CAACxB,EAAiB1Q,MAAK,EAAiBA,MAAK,GAC3E,IAAK,MAAMkD,KAAS8O,EACnB,GAAI9O,IAA4D,IAAnD6N,EAAiBmB,EAAuBhP,GAAiB,CACrE,MAAM,EAAEnF,EAAC,EAAEC,GAAMkF,EAAMiP,oBAGjBb,EAAyBpO,EAAOnF,EAAI,EAAGC,EAAGD,EAAGC,SAE7CsT,EAAyBpO,EAAOnF,EAAI,EAAGC,EAAGD,EAAGC,SAE7CsT,EAAyBpO,EAAOnF,EAAIC,EAAI,EAAID,EAAGC,SAE/CsT,EAAyBpO,EAAOnF,EAAIC,EAAI,EAAID,EAAGC,SAE/CsT,EAAyBpO,EAAOnF,EAAI,EAAIC,EAAI,EAAID,EAAGC,SAEnDsT,EAAyBpO,EAAOnF,EAAI,EAAIC,EAAI,EAAID,EAAGC,SAEnDsT,EAAyBpO,EAAOnF,EAAI,EAAIC,EAAI,EAAID,EAAGC,SAEnDsT,EAAyBpO,EAAOnF,EAAI,EAAIC,EAAI,EAAID,EAAGC,EAC1D,CAGD,MAAO,CACNoU,SAAUnR,MAAM4Q,KAAKjB,EAAaqB,UAClCvU,MAAOuD,MAAM4Q,KAAKf,EAAYmB,UAEhC,CASA,mBAAMI,CAAcjM,EAAOkM,EAAaC,SACjCvS,MAAK,IAIX,MAAMoS,EAAWhM,EAAMgM,SACjBzE,EAAIyE,EAASlZ,OACnB,IAAIsZ,EAAS,IAAIvR,MAAM0M,GAEvB,MAAM8E,EAAO,IAAIxR,MAAM0M,GAGjB+E,EAAQ,IAAIzR,MAAM0M,GAAIgF,EAAM,IAAI1R,MAAM0M,GAE5C,IAAK,IAAI1U,EAAI,EAAGA,EAAI0U,EAAG1U,IACtBwZ,EAAKxZ,GAAK,GAAIuZ,EAAOvZ,GAAK,GAG3B,MAAM2Z,EAAYrB,eAAgBxG,EAAG5R,GAEpC,GAAiB,IAAbuZ,EAAM3H,GACT,OAID,GAAiB,IAAb2H,EAAM3H,GAAU,CACnB8H,IACA,IAAIC,EAAM3Z,EAKV,IAJAsZ,EAAKK,GAAKvZ,KAAKsZ,GAIRC,IAAQ/H,GACd+H,EAAMH,EAAIG,GACVL,EAAKK,GAAKvZ,KAAKsZ,GAEhB,MACD,CACAF,EAAI5H,GAAK5R,EAGTuZ,EAAM3H,GAAK,EACX,MAAMgI,EAASX,EAASrH,GACxB,GAAIgI,EAUH,IAAK,MAAMC,KAAOD,EAAOhB,UAAW,CACnC,MAAMxF,EAAI6F,EAAS3Q,QAAQuR,GAEvBzG,IAAMoG,EAAI5H,UAGR6H,EAAUrG,EAAGxB,EACpB,CAID2H,EAAM3H,GAAK,CACZ,EAiGA,IAAI8H,EAAc,EAAGnV,EAAQiQ,EAG7B,IAAK,IAAIsF,EAAO,EAAGA,EAAOtF,EAAGsF,UACtBL,EAAUK,EAAO,EAAGA,GAI3B,YAvGoB1B,OAAO7T,EAAO+U,KAGjC,IAAK,IAAIrT,EAAI,EAAGA,EAAI1B,EAAO0B,IAAK,CAC/B,MAAM8T,EAAST,EAAKrT,GACpB,QAAezG,IAAXua,GAAwBA,EAAOha,OAAS,EAC3C,IAAK,IAAImS,EAAI,EAAGA,EAAI6H,EAAOha,OAAQmS,IAAK,CACvC,MAAM8H,EAAUX,EAAOU,EAAO7H,SACd1S,IAAZwa,GACHA,EAAQ5Z,KAAK6F,EACf,CAEF,CAGAoT,EAASA,EAAOY,QAAOpX,GAAKA,EAAE9C,QAAU,IAAGM,MAAK,CAACkB,EAAGN,IAAMA,EAAElB,OAASwB,EAAExB,SAGvE,MAAMma,EAA2B,GACjC,IAAK,MAAMpC,WAAYjR,MAAK,EAAQiS,SACnC,QAAWtZ,IAAPsY,GAAoBA,EAAGqC,iBAAmBhB,GAAe3C,EAAW4D,iBAAmBtC,EAAGE,YAAa,CAC1G,MAAM,EAAEpT,EAAC,EAAEC,GAAMiT,EAAGkB,cACpB,IAAI,IAAUtC,EAAuB9R,EAAGC,EAAGuU,GAC1C,SAKDc,EAAyB9Z,KAAK,CAAEwE,IAAGC,KACpC,CAMD,IAAK,IAAI/E,EAAI,EAAGA,GAAK4Z,EAAa5Z,IAAK,CACtC,MAAMua,EAAOhB,EAAOvZ,GACpB,GAAIua,GAAQA,EAAKta,OAAS,EAAG,CAM5B,MAAMua,EAAeD,EAAKE,KAAI1X,GAAKoW,EAASpW,GAAGmW,gBAEzCwB,EAAkB/D,EAAoB6D,GAC5CjB,EAAOvZ,GAAK,CAAEua,OAAMG,kBA2CrB,CACD,CACe,MAAO,CAAEnB,SAAQa,2BAA0BR,cAAa,EAY3De,CAAYlW,EAAO+U,EACjC,E,sBC7SD,IAAIoB,EAAQ,EAAYC,EAAUC,EAAY,EAAqBC,EAAQ,EAG3EC,iBAAiB,WAAW1C,eAAgBnS,GAE3C,QAAezG,IAAXkb,EAAsB,CACzB,MAAM3D,EAAmC,cAAtBC,SAASC,SAEtBC,QAAaC,OAAgC,WAAWJ,EAAa,OAAS,SAEpF2D,EAASxD,EAAKwD,OAAQ,EAAaxD,EAAKV,WAAYmE,EAAWzD,EAAKyD,SAAUC,EAAa1D,EAAK0D,WAC/F,EAAsB1D,EAAKT,oBAAqBoE,EAAS3D,EAAK2D,OAC9D,EAAyB3D,EAAKR,sBAChC,CAGA,MAAMqE,EAAS9U,EAAEhD,KAEjB,OAAQ8X,EAAOC,WACd,IAAK,cACJ,CACC,MAAMC,EAAS,IAAIP,EACnBO,EAAOC,KAAK,KAAM,KAAM,KAAMH,EAAOI,WAGrC,MAAM/B,EAAQ2B,EAAOK,MAAMb,KAAIc,GAAMJ,EAAOK,oBAAoBD,KAC1Dlc,EAAS,IAAIuY,IACnBqD,EAAO5b,OAAOgM,SAAS2M,IACtB3Y,EAAO6K,IAAI8N,EAAG9B,IAAKiF,EAAOM,gBAAgBzD,EAAGjD,OAAO,IAGrD8F,EAAS,iBAAiBvB,EAAMrZ,0BAA0BZ,EAAO2O,QAEjE,MAAM0N,EAAK,IAAI7E,EAAQoE,EAAOU,MAAM7E,WAAYmE,EAAOU,MAAM5E,YAAa1X,GACpE8N,QAAcuO,EAAGlE,WAAW,CACjCC,gBAAiB,EAAWC,gBAE5BkE,SAAS,IAIVC,YAAY,CAAEX,UAAWD,EAAOC,UAAWD,OAAQ9N,GACpD,CACA,MAED,IAAK,aACJ,CACC,MAAMgO,EAAS,IAAIP,EACnBO,EAAOC,KAAK,KAAM,KAAM,KAAMH,EAAOI,WAErC,MAAMhc,EAAS,IAAIuY,IACnBqD,EAAO5b,OAAOgM,SAAS2M,IACtB3Y,EAAO6K,IAAI8N,EAAG9B,IAAKiF,EAAOM,gBAAgBzD,EAAGjD,OAAO,IAErD,MAAM2G,EAAK,IAAI7E,EAAQoE,EAAOU,MAAM7E,WAAYmE,EAAOU,MAAM5E,YAAa1X,GACpEyc,EAAiBb,EAAOc,mBAQxB5C,SAPcuC,EAAGlE,WAAW,CACjCC,gBAAiBqE,EAEjBF,SAAS,KAIazC,SAASsB,KAAI,SAAUzC,GAC7C,MAAM,EAAElT,EAAC,EAAEC,GAAMiT,EAAGkB,cACpB,MAAO,CAACpU,EAAGC,EACZ,IAEA,IAAwByV,EAAcE,EAAlCsB,EAAc,KACd7C,EAASlZ,OAAS,IACrB+b,EAAc,IAAW7C,EAAU8B,EAAO3b,WAAa,EAAK2b,EAAO1b,iBAAmB,GAEtFib,EAAewB,EAAYvB,KAAI,EAAE3V,EAAGC,MAAO,CAAGD,IAAGC,QACjD2V,EAAkB,EAAoBF,IAGvCqB,YAAY,CAAEX,UAAWD,EAAOC,UAAWc,YAAaA,EAAatB,gBAAiBA,GACvF,CACA,MAED,IAAK,kBACJ,CACC,MAAMS,EAAS,IAAIP,EACnBO,EAAOC,KAAK,KAAM,KAAM,KAAMH,EAAOI,WAErC,MAAM/B,EAAQ2B,EAAOK,MAAMb,KAAIc,GAAMJ,EAAOK,oBAAoBD,KAC1Dlc,EAAS,IAAIuY,IACnBqD,EAAO5b,OAAOgM,SAAS2M,IACtB3Y,EAAO6K,IAAI8N,EAAG9B,IAAKiF,EAAOM,gBAAgBzD,EAAGjD,OAAO,IAErD,MAAM2G,EAAK,IAAI7E,EAAQoE,EAAOU,MAAM7E,WAAYmE,EAAOU,MAAM5E,YAAa1X,GACpE8N,QAAcuO,EAAGlE,WAAW,CACjCC,gBAAiB,EAAWC,gBAE5BkE,SAAS,IAEJjP,QAAe+O,EAAGtC,cAAcjM,EAAO8N,EAAOgB,SAAU3C,GAG9DuC,YAAY,CACXX,UAAWD,EAAOC,UAClB3B,OAAQ5M,EAAO4M,OACfa,yBAA0BzN,EAAOyN,yBACjCR,YAAajN,EAAOiN,aAEtB,CACA,MAED,IAAK,2BACJ,CACC,MAAMuB,EAAS,IAAIP,EACnBO,EAAOC,KAAK,KAAM,KAAM,KAAMH,EAAOI,WAErC,MAAMa,EAAWjB,EAAOiB,SAASzB,KAAIc,GAAMJ,EAAOK,oBAAoBD,KAChExC,EAAakC,EAAOkB,UAAU1B,KAAIzC,GAAMmD,EAAOM,gBAAgBzD,KAC/DoE,EAAiBnB,EAAOoB,cAAc5B,KAAIzC,GAAMmD,EAAOM,gBAAgBzD,KAEvEqB,EAAc4B,EAAO5B,YAAaiD,EAAYrB,EAAOqB,UACrDC,EAAuB,CAAC,EAAWjC,eAAgB,EAAW/C,eAC9DiF,EAAqB,CAAC,EAAW9E,gBAAiB,EAAWH,eAI7DkF,EAAU,GAChB,IAAK,MAAMzE,KAAMoE,EAChB,QAAW1c,IAAPsY,GAAoBA,EAAGqC,iBAAmBhB,GAC1CkD,EAAqBpE,SAASH,EAAGE,aAAc,CAClD,MAAM,EAAEpT,EAAC,EAAEC,GAAMiT,EAAGkB,cACpB,IAAI,IAAU,EAAuBpU,EAAGC,EAAGmX,GAAW,CACrDrB,EAAS,2BACT,QACD,CACA,IAAK,IAAI6B,EAAS,EAAGA,GAAU,EAAGA,IAAU,CAC3C,MAAMC,EAAW,GAIjB,IAAK,MAAMC,KAAU7D,EACpB,QAAerZ,IAAXkd,GAAwBA,EAAOvC,iBAAmBiC,GAClDE,EAAmBrE,SAASyE,EAAO1E,aAAc,CACpD,MAAQpT,EAAG+X,EAAO9X,EAAG+X,GAAUF,EAAO1D,cACtC,IAAI,IAAU,EAAuB2D,EAAOC,EAAOZ,GAClD,SAEG,GAAKf,EAAO4B,gBAAgB,CAAEjY,EAAG+X,EAAO9X,EAAG+X,GAAS,CAAEhY,IAAGC,KAAK2X,KACjEE,EAAO9X,EAAI+X,EACXD,EAAO7X,EAAI+X,EACXH,EAASrc,KAAKsc,GAEhB,CAED,GAAID,EAAS1c,OAAS,EAAG,CACxB,IAAIya,EAAkB,EAAoBiC,GAE1C,IAAK,IAAI3c,EAAI0a,EAAgBza,OAAS,EAAG2B,EAAO8Y,EAAgBsC,IAAI,GAAIhd,EAAI,EAAGA,IAAK,CACnF,MAAMid,EAAKvC,EAAgB1a,GAC3B,KAAMR,KAAKuP,IAAInN,EAAKkD,EAAImY,EAAGnY,IAAM,GAAKtF,KAAKuP,IAAInN,EAAKmD,EAAIkY,EAAGlY,IAAM,GAAI,CACpE2V,EAAkB,KAClB,KACD,CACA9Y,EAAOqb,CACR,CAEA,GAEqB,OAApBvC,KAGElb,KAAKuP,IAAI2L,EAAgBsC,IAAI,GAAGlY,EAAI4V,EAAgB,GAAG5V,IAAM,GAC9DtF,KAAKuP,IAAI2L,EAAgBsC,IAAI,GAAGjY,EAAI2V,EAAgB,GAAG3V,IAAM,KAI9D,IAAUgW,EAAOL,EAAiB5V,EAAGC,GAErC,SAGD0X,EAAQnc,KAAK,CAAEoa,kBAAiBgC,SAAQ5X,IAAGC,MAE3C8V,EAAS,0CAA0C6B,cACnD7B,EAASH,EACV,CACD,CACD,CAGDmB,YAAY,CAAEX,UAAWD,EAAOC,UAAWuB,WAC5C,CACA,MAED,IAAK,QACJ,CACC,MAAM,IAAES,EAAG,MAAE9P,EAAK,IAAEC,GAAQ4N,EACtBkC,EAAgB,IAAI,EAAAhO,MAAM+N,EAAK,CAAElO,UAAU,IAC3C4J,EAAOuE,EAAc7N,KAAKlC,EAAMrI,GAAGqI,EAAMtI,GACzC+T,EAAKsE,EAAc7N,KAAKjC,EAAItI,GAAGsI,EAAIvI,GACnCsY,EAAsBlQ,EAAM,MAAAxI,OAAOyY,EAAevE,EAAMC,EAAI,CAAErL,UAAWN,EAAM,MAAAO,WAAWuB,WAEhG6L,EAASuC,GAETvB,YAAY,CAAEX,UAAWD,EAAOC,UAAWkC,uBAC5C,CACA,MAED,IAAK,aACJ,CACC,MAAM,QAAEzW,EAAO,OAAE0W,EAAM,iBAAEC,EAAgB,mBAAEC,EAAkB,oBAAEC,GAAwBvC,EAEvF,OAAQoC,GACP,IAAK,SACJ,CACC,MAEMnW,GAFS,IAAI,UAEKO,IAAId,EAAS2W,GAGrCzB,YAAY,CAAEX,UAAWD,EAAOC,UAAWmC,SAAQnW,YACpD,CACA,MAED,IAAK,SACJ,CACC,MAAMuW,EAAS,IAAI,SAEbvW,EAAWuW,EAAOhW,IAAId,EAAS4W,EAAoBC,GACnDE,EAAOD,EAAOvS,sBAGpB2Q,YAAY,CAAEX,UAAWD,EAAOC,UAAWmC,SAAQnW,WAAUwW,QAC9D,CACA,MAED,IAAK,SACJ,CACC,MAAMC,EAAS,IAAI,SAEbzW,EAAWyW,EAAOlW,IAAId,EAAS4W,EAAoBC,GACnDrW,EAAQwW,EAAOxW,MAGrB0U,YAAY,CAAEX,UAAWD,EAAOC,UAAWmC,SAAQnW,WAAUC,SAC9D,CACA,MAED,QACC,MAAM,IAAIc,MAAM,+BAEnB,CACA,MAED,QACC6S,EAAW,8BAA8BG,EAAOC,aAGnD,G","sources":["webpack:///./node_modules/.pnpm/concaveman@1.2.1/node_modules/concaveman/index.js","webpack:///./node_modules/.pnpm/density-clustering@1.3.0/node_modules/density-clustering/lib/DBSCAN.js","webpack:///./node_modules/.pnpm/density-clustering@1.3.0/node_modules/density-clustering/lib/KMEANS.js","webpack:///./node_modules/.pnpm/density-clustering@1.3.0/node_modules/density-clustering/lib/OPTICS.js","webpack:///./node_modules/.pnpm/density-clustering@1.3.0/node_modules/density-clustering/lib/PriorityQueue.js","webpack:///./node_modules/.pnpm/density-clustering@1.3.0/node_modules/density-clustering/lib/index.js","webpack:///./node_modules/.pnpm/javascript-astar@0.4.1/node_modules/javascript-astar/astar.js","webpack:///./node_modules/.pnpm/point-in-polygon@1.1.0/node_modules/point-in-polygon/flat.js","webpack:///./node_modules/.pnpm/point-in-polygon@1.1.0/node_modules/point-in-polygon/index.js","webpack:///./node_modules/.pnpm/point-in-polygon@1.1.0/node_modules/point-in-polygon/nested.js","webpack:///./node_modules/.pnpm/rbush@3.0.1/node_modules/rbush/rbush.min.js","webpack:///./node_modules/.pnpm/robust-predicates@2.0.4/node_modules/robust-predicates/umd/orient2d.min.js","webpack:///./node_modules/.pnpm/tinyqueue@2.0.3/node_modules/tinyqueue/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../InkBall/src/InkBall.Module/IBwwwroot/js/AISource.js","webpack:///../InkBall/src/InkBall.Module/IBwwwroot/js/AIWorker.js"],"sourcesContent":["'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nvar orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\n// Fix for require issue in webpack https://github.com/mapbox/concaveman/issues/18\nif (Queue.default) {\n    Queue = Queue.default;\n}\n\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = new RBush(16);\n    tree.toBBox = function (a) {\n        return {\n            minX: a[0],\n            minY: a[1],\n            maxX: a[0],\n            maxY: a[1]\n        };\n    };\n    tree.compareMinX = function (a, b) { return a[0] - b[0]; };\n    tree.compareMinY = function (a, b) { return a[1] - b[1]; };\n\n    tree.load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = new RBush(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new Queue([], compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\nfunction cross(p1, p2, p3) {\n    return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 &&\n        cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nfunction compareByX(a, b) {\n    return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\n\nfunction convexHull(points) {\n    points.sort(compareByX);\n\n    var lower = [];\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [];\n    for (var ii = points.length - 1; ii >= 0; ii--) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n            upper.pop();\n        }\n        upper.push(points[ii]);\n    }\n\n    upper.pop();\n    lower.pop();\n    return lower.concat(upper);\n}\n","/**\r\n * DBSCAN - Density based clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * DBSCAN class construcotr\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {DBSCAN}\r\n */\r\nfunction DBSCAN(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {Array} */\r\n  this.dataset = [];\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 2;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n  /** @type {Array} */\r\n  this.clusters = [];\r\n  /** @type {Array} */\r\n  this.noise = [];\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._visited = [];\r\n  /** @type {Array} */\r\n  this._assigned = [];\r\n  /** @type {number} */\r\n  this._datasetLength = 0;\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n};\r\n\r\n/******************************************************************************/\r\n// public functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nDBSCAN.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0; pointId < this._datasetLength; pointId++) {\r\n    // if point is not visited, check if it forms a cluster\r\n    if (this._visited[pointId] !== 1) {\r\n      this._visited[pointId] = 1;\r\n\r\n      // if closest neighborhood is too small to form a cluster, mark as noise\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      if (neighbors.length < this.minPts) {\r\n        this.noise.push(pointId);\r\n      } else {\r\n        // create new cluster and add point\r\n        var clusterId = this.clusters.length;\r\n        this.clusters.push([]);\r\n        this._addToCluster(pointId, clusterId);\r\n\r\n        this._expandCluster(clusterId, neighbors);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this.noise = [];\r\n\r\n    this._datasetLength = dataset.length;\r\n    this._visited = new Array(this._datasetLength);\r\n    this._assigned = new Array(this._datasetLength);\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Expand cluster to closest points of given neighborhood\r\n *\r\n * @param {number} clusterId\r\n * @param {Array} neighbors\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._expandCluster = function(clusterId, neighbors) {\r\n\r\n  /**\r\n   * It's very important to calculate length of neighbors array each time,\r\n   * as the number of elements changes over time\r\n   */\r\n  for (var i = 0; i < neighbors.length; i++) {\r\n    var pointId2 = neighbors[i];\r\n\r\n    if (this._visited[pointId2] !== 1) {\r\n      this._visited[pointId2] = 1;\r\n      var neighbors2 = this._regionQuery(pointId2);\r\n\r\n      if (neighbors2.length >= this.minPts) {\r\n        neighbors = this._mergeArrays(neighbors, neighbors2);\r\n      }\r\n    }\r\n\r\n    // add to cluster\r\n    if (this._assigned[pointId2] !== 1) {\r\n      this._addToCluster(pointId2, clusterId);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add new point to cluster\r\n *\r\n * @param {number} pointId\r\n * @param {number} clusterId\r\n */\r\nDBSCAN.prototype._addToCluster = function(pointId, clusterId) {\r\n  this.clusters[clusterId].push(pointId);\r\n  this._assigned[pointId] = 1;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId,\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._regionQuery = function(pointId) {\r\n  var neighbors = [];\r\n\r\n  for (var id = 0; id < this._datasetLength; id++) {\r\n    var dist = this.distance(this.dataset[pointId], this.dataset[id]);\r\n    if (dist < this.epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * @param {Array} a\r\n * @param {Array} b\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._mergeArrays = function(a, b) {\r\n  var len = b.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var P = b[i];\r\n    if (a.indexOf(P) < 0) {\r\n      a.push(P);\r\n    }\r\n  }\r\n\r\n  return a;\r\n};\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = DBSCAN;\r\n}\r\n","﻿/**\r\n * KMEANS clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * KMEANS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} k - number of clusters\r\n * @param {function} distance - distance function\r\n * @returns {KMEANS}\r\n */\r\n function KMEANS(dataset, k, distance) {\r\n  this.k = 3; // number of clusters\r\n  this.dataset = []; // set of feature vectors\r\n  this.assignments = []; // set of associated clusters for each feature vector\r\n  this.centroids = []; // vectors for our clusters\r\n\r\n  this.init(dataset, k, distance);\r\n}\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.init = function(dataset, k, distance) {\r\n  this.assignments = [];\r\n  this.centroids = [];\r\n\r\n  if (typeof dataset !== 'undefined') {\r\n    this.dataset = dataset;\r\n  }\r\n\r\n  if (typeof k !== 'undefined') {\r\n    this.k = k;\r\n  }\r\n\r\n  if (typeof distance !== 'undefined') {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.run = function(dataset, k) {\r\n  this.init(dataset, k);\r\n\r\n  var len = this.dataset.length;\r\n\r\n  // initialize centroids\r\n  for (var i = 0; i < this.k; i++) {\r\n    this.centroids[i] = this.randomCentroid();\r\n\t}\r\n\r\n  var change = true;\r\n  while(change) {\r\n\r\n    // assign feature vectors to clusters\r\n    change = this.assign();\r\n\r\n    // adjust location of centroids\r\n    for (var centroidId = 0; centroidId < this.k; centroidId++) {\r\n      var mean = new Array(maxDim);\r\n      var count = 0;\r\n\r\n      // init mean vector\r\n      for (var dim = 0; dim < maxDim; dim++) {\r\n        mean[dim] = 0;\r\n      }\r\n\r\n      for (var j = 0; j < len; j++) {\r\n        var maxDim = this.dataset[j].length;\r\n\r\n        // if current cluster id is assigned to point\r\n        if (centroidId === this.assignments[j]) {\r\n          for (var dim = 0; dim < maxDim; dim++) {\r\n            mean[dim] += this.dataset[j][dim];\r\n          }\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (count > 0) {\r\n        // if cluster contain points, adjust centroid position\r\n        for (var dim = 0; dim < maxDim; dim++) {\r\n          mean[dim] /= count;\r\n        }\r\n        this.centroids[centroidId] = mean;\r\n      } else {\r\n        // if cluster is empty, generate new random centroid\r\n        this.centroids[centroidId] = this.randomCentroid();\r\n        change = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.getClusters();\r\n};\r\n\r\n/**\r\n * Generate random centroid\r\n *\r\n * @returns {Array}\r\n */\r\nKMEANS.prototype.randomCentroid = function() {\r\n  var maxId = this.dataset.length -1;\r\n  var centroid;\r\n  var id;\r\n\r\n  do {\r\n    id = Math.round(Math.random() * maxId);\r\n    centroid = this.dataset[id];\r\n  } while (this.centroids.indexOf(centroid) >= 0);\r\n\r\n  return centroid;\r\n}\r\n\r\n/**\r\n * Assign points to clusters\r\n *\r\n * @returns {boolean}\r\n */\r\nKMEANS.prototype.assign = function() {\r\n  var change = false;\r\n  var len = this.dataset.length;\r\n  var closestCentroid;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    closestCentroid = this.argmin(this.dataset[i], this.centroids, this.distance);\r\n\r\n    if (closestCentroid != this.assignments[i]) {\r\n      this.assignments[i] = closestCentroid;\r\n      change = true;\r\n    }\r\n  }\r\n\r\n  return change;\r\n}\r\n\r\n/**\r\n * Extract information about clusters\r\n *\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.getClusters = function() {\r\n  var clusters = new Array(this.k);\r\n  var centroidId;\r\n\r\n  for (var pointId = 0; pointId < this.assignments.length; pointId++) {\r\n    centroidId = this.assignments[pointId];\r\n\r\n    // init empty cluster\r\n    if (typeof clusters[centroidId] === 'undefined') {\r\n      clusters[centroidId] = [];\r\n    }\r\n\r\n    clusters[centroidId].push(pointId);\r\n  }\r\n\r\n  return clusters;\r\n};\r\n\r\n// utils\r\n\r\n/**\r\n * @params {Array} point\r\n * @params {Array.<Array>} set\r\n * @params {Function} f\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.argmin = function(point, set, f) {\r\n  var min = Number.MAX_VALUE;\r\n  var arg = 0;\r\n  var len = set.length;\r\n  var d;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    d = f(point, set[i]);\r\n    if (d < min) {\r\n      min = d;\r\n      arg = i;\r\n    }\r\n  }\r\n\r\n  return arg;\r\n};\r\n\r\n/**\r\n * Euclidean distance\r\n *\r\n * @params {number} p\r\n * @params {number} q\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.distance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    var diff = p[i] - q[i];\r\n    sum += diff * diff;\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = KMEANS;\r\n}\r\n","\r\n/**\r\n * @requires ./PriorityQueue.js\r\n */\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n      var PriorityQueue = require('./PriorityQueue.js');\r\n}\r\n\r\n/**\r\n * OPTICS - Ordering points to identify the clustering structure\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * OPTICS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {OPTICS}\r\n */\r\nfunction OPTICS(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 1;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._reachability = [];\r\n  /** @type {Array} */\r\n  this._processed = [];\r\n  /** @type {number} */\r\n  this._coreDistance = 0;\r\n  /** @type {Array} */\r\n  this._orderedList = [];\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n}\r\n\r\n/******************************************************************************/\r\n// pulic functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nOPTICS.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0, l = this.dataset.length; pointId < l; pointId++) {\r\n    if (this._processed[pointId] !== 1) {\r\n      this._processed[pointId] = 1;\r\n      this.clusters.push([pointId]);\r\n      var clusterId = this.clusters.length - 1;\r\n\r\n      this._orderedList.push(pointId);\r\n      var priorityQueue = new PriorityQueue(null, null, 'asc');\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      // using priority queue assign elements to new cluster\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, priorityQueue);\r\n        this._expandCluster(clusterId, priorityQueue);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/**\r\n * Generate reachability plot for all points\r\n *\r\n * @returns {array}\r\n * @access public\r\n */\r\nOPTICS.prototype.getReachabilityPlot = function() {\r\n  var reachabilityPlot = [];\r\n\r\n  for (var i = 0, l = this._orderedList.length; i < l; i++) {\r\n    var pointId = this._orderedList[i];\r\n    var distance = this._reachability[pointId];\r\n\r\n    reachabilityPlot.push([pointId, distance]);\r\n  }\r\n\r\n  return reachabilityPlot;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this._reachability = new Array(this.dataset.length);\r\n    this._processed = new Array(this.dataset.length);\r\n    this._coreDistance = 0;\r\n    this._orderedList = [];\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Update information in queue\r\n *\r\n * @param {number} pointId\r\n * @param {Array} neighbors\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._updateQueue = function(pointId, neighbors, queue) {\r\n  var self = this;\r\n\r\n  this._coreDistance = this._distanceToCore(pointId);\r\n  neighbors.forEach(function(pointId2) {\r\n    if (self._processed[pointId2] === undefined) {\r\n      var dist = self.distance(self.dataset[pointId], self.dataset[pointId2]);\r\n      var newReachableDistance = Math.max(self._coreDistance, dist);\r\n\r\n      if (self._reachability[pointId2] === undefined) {\r\n        self._reachability[pointId2] = newReachableDistance;\r\n        queue.insert(pointId2, newReachableDistance);\r\n      } else {\r\n        if (newReachableDistance < self._reachability[pointId2]) {\r\n          self._reachability[pointId2] = newReachableDistance;\r\n          queue.remove(pointId2);\r\n          queue.insert(pointId2, newReachableDistance);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Expand cluster\r\n *\r\n * @param {number} clusterId\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._expandCluster = function(clusterId, queue) {\r\n  var queueElements = queue.getElements();\r\n\r\n  for (var p = 0, l = queueElements.length; p < l; p++) {\r\n    var pointId = queueElements[p];\r\n    if (this._processed[pointId] === undefined) {\r\n      var neighbors = this._regionQuery(pointId);\r\n      this._processed[pointId] = 1;\r\n\r\n      this.clusters[clusterId].push(pointId);\r\n      this._orderedList.push(pointId);\r\n\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, queue);\r\n        this._expandCluster(clusterId, queue);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Calculating distance to cluster core\r\n *\r\n * @param {number} pointId\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._distanceToCore = function(pointId) {\r\n  var l = this.epsilon;\r\n  for (var coreDistCand = 0; coreDistCand < l; coreDistCand++) {\r\n    var neighbors = this._regionQuery(pointId, coreDistCand);\r\n    if (neighbors.length >= this.minPts) {\r\n      return coreDistCand;\r\n    }\r\n  }\r\n\r\n  return;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nOPTICS.prototype._regionQuery = function(pointId, epsilon) {\r\n  epsilon = epsilon || this.epsilon;\r\n  var neighbors = [];\r\n\r\n  for (var id = 0, l = this.dataset.length; id < l; id++) {\r\n    if (this.distance(this.dataset[pointId], this.dataset[id]) < epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = OPTICS;\r\n}\r\n","/**\r\n * PriorityQueue\r\n * Elements in this queue are sorted according to their value\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * PriorityQueue class construcotr\r\n * @constructor\r\n *\r\n * @example\r\n * queue: [1,2,3,4]\r\n * priorities: [4,1,2,3]\r\n * > result = [1,4,2,3]\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @param {string} sorting - asc / desc\r\n * @returns {PriorityQueue}\r\n */\r\nfunction PriorityQueue(elements, priorities, sorting) {\r\n  /** @type {Array} */\r\n  this._queue = [];\r\n  /** @type {Array} */\r\n  this._priorities = [];\r\n  /** @type {string} */\r\n  this._sorting = 'desc';\r\n\r\n  this._init(elements, priorities, sorting);\r\n};\r\n\r\n/**\r\n * Insert element\r\n *\r\n * @param {Object} ele\r\n * @param {Object} priority\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.insert = function(ele, priority) {\r\n  var indexToInsert = this._queue.length;\r\n  var index = indexToInsert;\r\n\r\n  while (index--) {\r\n    var priority2 = this._priorities[index];\r\n    if (this._sorting === 'desc') {\r\n      if (priority > priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    } else {\r\n      if (priority < priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  this._insertAt(ele, priority, indexToInsert);\r\n};\r\n\r\n/**\r\n * Remove element\r\n *\r\n * @param {Object} ele\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.remove = function(ele) {\r\n  var index = this._queue.length;\r\n\r\n  while (index--) {\r\n    var ele2 = this._queue[index];\r\n    if (ele === ele2) {\r\n      this._queue.splice(index, 1);\r\n      this._priorities.splice(index, 1);\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For each loop wrapper\r\n *\r\n * @param {function} func\r\n * @returs {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.forEach = function(func) {\r\n  this._queue.forEach(func);\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElements = function() {\r\n  return this._queue;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @returns {Object}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementPriority = function(index) {\r\n  return this._priorities[index];\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getPriorities = function() {\r\n  return this._priorities;\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementsWithPriorities = function() {\r\n  var result = [];\r\n\r\n  for (var i = 0, l = this._queue.length; i < l; i++) {\r\n    result.push([this._queue[i], this._priorities[i]]);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._init = function(elements, priorities, sorting) {\r\n\r\n  if (elements && priorities) {\r\n    this._queue = [];\r\n    this._priorities = [];\r\n\r\n    if (elements.length !== priorities.length) {\r\n      throw new Error('Arrays must have the same length');\r\n    }\r\n\r\n    for (var i = 0; i < elements.length; i++) {\r\n      this.insert(elements[i], priorities[i]);\r\n    }\r\n  }\r\n\r\n  if (sorting) {\r\n    this._sorting = sorting;\r\n  }\r\n};\r\n\r\n/**\r\n * Insert element at given position\r\n *\r\n * @param {Object} ele\r\n * @param {number} index\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._insertAt = function(ele, priority, index) {\r\n  if (this._queue.length === index) {\r\n    this._queue.push(ele);\r\n    this._priorities.push(priority);\r\n  } else {\r\n    this._queue.splice(index, 0, ele);\r\n    this._priorities.splice(index, 0, priority);\r\n  }\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = PriorityQueue;\r\n}\r\n","\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = {\r\n      DBSCAN: require('./DBSCAN.js'),\r\n      KMEANS: require('./KMEANS.js'),\r\n      OPTICS: require('./OPTICS.js'),\r\n      PriorityQueue: require('./PriorityQueue.js')\r\n    };\r\n}\r\n","// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\n(function(definition) {\n    /* global module, define */\n    if(typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = definition();\n    } else if(typeof define === 'function' && define.amd) {\n        define([], definition);\n    } else {\n        var exports = definition();\n        window.astar = exports.astar;\n        window.Graph = exports.Graph;\n    }\n})(function() {\n\nfunction pathTo(node){\n    var curr = node,\n        path = [];\n    while(curr.parent) {\n        path.unshift(curr);\n        curr = curr.parent;\n    }\n    return path;\n}\n\nfunction getHeap() {\n    return new BinaryHeap(function(node) {\n        return node.f;\n    });\n}\n\nvar astar = {\n    /**\n    * Perform an A* Search on a graph given a start and end node.\n    * @param {Graph} graph\n    * @param {GridNode} start\n    * @param {GridNode} end\n    * @param {Object} [options]\n    * @param {bool} [options.closest] Specifies whether to return the\n               path to the closest node if the target is unreachable.\n    * @param {Function} [options.heuristic] Heuristic function (see\n    *          astar.heuristics).\n    */\n    search: function(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        var heuristic = options.heuristic || astar.heuristics.manhattan,\n            closest = options.closest || false;\n\n        var openHeap = getHeap(),\n            closestNode = start; // set the start node to be the closest if required\n\n        start.h = heuristic(start, end);\n\n        openHeap.push(start);\n\n        while(openHeap.size() > 0) {\n\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            var currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if(currentNode === end) {\n                return pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            var neighbors = graph.neighbors(currentNode);\n\n            for (var i = 0, il = neighbors.length; i < il; ++i) {\n                var neighbor = neighbors[i];\n\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                var gScore = currentNode.g + neighbor.getCost(currentNode),\n                    beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n                    neighbor.h = neighbor.h || heuristic(neighbor, end);\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    }\n                    else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    },\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    heuristics: {\n        manhattan: function(pos0, pos1) {\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return d1 + d2;\n        },\n        diagonal: function(pos0, pos1) {\n            var D = 1;\n            var D2 = Math.sqrt(2);\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n        }\n    },\n    cleanNode:function(node){\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n};\n\n/**\n* A graph memory structure\n* @param {Array} gridIn 2D array of input weights\n* @param {Object} [options]\n* @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n*/\nfunction Graph(gridIn, options) {\n    options = options || {};\n    this.nodes = [];\n    this.diagonal = !!options.diagonal;\n    this.grid = [];\n    for (var x = 0; x < gridIn.length; x++) {\n        this.grid[x] = [];\n\n        for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n            var node = new GridNode(x, y, row[y]);\n            this.grid[x][y] = node;\n            this.nodes.push(node);\n        }\n    }\n    this.init();\n}\n\nGraph.prototype.init = function() {\n    this.dirtyNodes = [];\n    for (var i = 0; i < this.nodes.length; i++) {\n        astar.cleanNode(this.nodes[i]);\n    }\n};\n\nGraph.prototype.cleanDirty = function() {\n    for (var i = 0; i < this.dirtyNodes.length; i++) {\n        astar.cleanNode(this.dirtyNodes[i]);\n    }\n    this.dirtyNodes = [];\n};\n\nGraph.prototype.markDirty = function(node) {\n    this.dirtyNodes.push(node);\n};\n\nGraph.prototype.neighbors = function(node) {\n    var ret = [],\n        x = node.x,\n        y = node.y,\n        grid = this.grid;\n\n    // West\n    if(grid[x-1] && grid[x-1][y]) {\n        ret.push(grid[x-1][y]);\n    }\n\n    // East\n    if(grid[x+1] && grid[x+1][y]) {\n        ret.push(grid[x+1][y]);\n    }\n\n    // South\n    if(grid[x] && grid[x][y-1]) {\n        ret.push(grid[x][y-1]);\n    }\n\n    // North\n    if(grid[x] && grid[x][y+1]) {\n        ret.push(grid[x][y+1]);\n    }\n\n    if (this.diagonal) {\n        // Southwest\n        if(grid[x-1] && grid[x-1][y-1]) {\n            ret.push(grid[x-1][y-1]);\n        }\n\n        // Southeast\n        if(grid[x+1] && grid[x+1][y-1]) {\n            ret.push(grid[x+1][y-1]);\n        }\n\n        // Northwest\n        if(grid[x-1] && grid[x-1][y+1]) {\n            ret.push(grid[x-1][y+1]);\n        }\n\n        // Northeast\n        if(grid[x+1] && grid[x+1][y+1]) {\n            ret.push(grid[x+1][y+1]);\n        }\n    }\n\n    return ret;\n};\n\nGraph.prototype.toString = function() {\n    var graphString = [],\n        nodes = this.grid, // when using grid\n        rowDebug, row, y, l;\n    for (var x = 0, len = nodes.length; x < len; x++) {\n        rowDebug = [];\n        row = nodes[x];\n        for (y = 0, l = row.length; y < l; y++) {\n            rowDebug.push(row[y].weight);\n        }\n        graphString.push(rowDebug.join(\" \"));\n    }\n    return graphString.join(\"\\n\");\n};\n\nfunction GridNode(x, y, weight) {\n    this.x = x;\n    this.y = y;\n    this.weight = weight;\n}\n\nGridNode.prototype.toString = function() {\n    return \"[\" + this.x + \" \" + this.y + \"]\";\n};\n\nGridNode.prototype.getCost = function(fromNeighbor) {\n    // Take diagonal weight into consideration.\n    if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) {\n        return this.weight * 1.41421;\n    }\n    return this.weight;\n};\n\nGridNode.prototype.isWall = function() {\n    return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction){\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n    push: function(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    },\n    pop: function() {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    },\n    remove: function(node) {\n        var i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        var end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            }\n            else {\n                this.bubbleUp(i);\n            }\n        }\n    },\n    size: function() {\n        return this.content.length;\n    },\n    rescoreElement: function(node) {\n        this.sinkDown(this.content.indexOf(node));\n    },\n    sinkDown: function(n) {\n        // Fetch the element that has to be sunk.\n        var element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n\n            // Compute the parent element's index, and fetch it.\n            var parentN = ((n + 1) >> 1) - 1,\n                parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    },\n    bubbleUp: function(n) {\n        // Look up the target element and its score.\n        var length = this.content.length,\n            element = this.content[n],\n            elemScore = this.scoreFunction(element);\n\n        while(true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) << 1,\n                child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            var swap = null,\n                child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore){\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N],\n                    child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            }\n            // Otherwise, we are done.\n            else {\n                break;\n            }\n        }\n    }\n};\n\nreturn {\n    astar: astar,\n    Graph: Graph\n};\n\n});\n","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).predicates={})}(this,function(t){\"use strict\";const e=134217729,n=33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const f=33306690738754716e-32,i=22204460492503146e-32,u=11093356479670487e-47,c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=f*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}(4,c),K=i*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=u*h+n*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,\"__esModule\",{value:!0})});\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import concaveman from \"concaveman\";\n// import decomp from \"poly-decomp\";\n// import { StatusEnum, sortPointsClockwise, IsPointOutsideAllPaths, /*LocalLog, Sleep, pnpoly*/ } from \"./shared.js\";\n\n//globals loaded only once hopefully\nlet StatusEnum, sortPointsClockwise, IsPointOutsideAllPaths/*, LocalLog, Sleep, pnpoly*/;\n\n/**\n * AI operations class\n * */\nclass GraphAI {\n\t#iGridWidth;\n\t#iGridHeight;\n\t#Points;\n\t#POINT_STARTING;\n\t#POINT_IN_PATH;\n\n\tconstructor(iGridWidth, iGridHeight, pointStore) {\n\t\tthis.#iGridWidth = iGridWidth;\n\t\tthis.#iGridHeight = iGridHeight;\n\t\tthis.#Points = pointStore;\n\t}\n\n\tasync #Init() {\n\t\tif (StatusEnum === undefined) {\n\t\t\tconst isMinified = location.hostname !== \"localhost\";\n\n\t\t\tconst shrd = await import(/* webpackIgnore: true */`./shared${isMinified ? '.min' : ''}.js`);\n\n\t\t\tStatusEnum = shrd.StatusEnum, sortPointsClockwise = shrd.sortPointsClockwise,\n\t\t\t\tIsPointOutsideAllPaths = shrd.IsPointOutsideAllPaths;\n\t\t\t\t\n\t\t\tthis.#POINT_STARTING = StatusEnum.POINT_STARTING;\n\t\t\tthis.#POINT_IN_PATH = StatusEnum.POINT_IN_PATH;\n\t\t}\n\t}\n\n\t/**\n\t * Building graph of connected vertices and edges\n\t * @param {any} param0 is a optional object comprised of:\n\t *\tfreePointStatus - status of free point\n\t *\tcpuFillColor - CPU point color\n\t */\n\tasync BuildGraph({\n\t\tfreePointStatus = StatusEnum.POINT_FREE_BLUE,\n\t\t// cpufillCol: cpuFillColor = 'var(--bluish)'\n\t\t//, visuals: presentVisually = false\n\t} = {}) {\n\t\tawait this.#Init();\n\n\n\n\t\tconst graph_points = new Map(), graph_edges = new Map();\n\n\t\tconst isPointOKForPath = function (allowedPoints, pt) {\n\t\t\tconst status = pt.GetStatus();\n\n\t\t\tif (allowedPoints.includes(status)/* && pt.GetFillColor() === cpuFillColor */)\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t};\n\n\t\tconst freePointStatusArr = [freePointStatus];\n\t\tconst addPointsAndEdgesToGraph = async (point, to_x, to_y, x, y) => {\n\t\t\tif (to_x >= 0 && to_x < this.#iGridWidth && to_y >= 0 && to_y < this.#iGridHeight) {\n\t\t\t\tconst next = await this.#Points.get(to_y * this.#iGridWidth + to_x);\n\t\t\t\tif (next && isPointOKForPath(freePointStatusArr, next) === true) {\n\n\t\t\t\t\tconst point_hash = `${x},${y}`;\n\t\t\t\t\tconst next_hash = `${to_x},${to_y}`;\n\t\t\t\t\tif (graph_edges.has(`${point_hash}_${next_hash}`) === false && graph_edges.has(`${next_hash}_${point_hash}`) === false) {\n\t\t\t\t\t\t//if (presentVisually === true) {\n\t\t\t\t\t\t//\tconst line = CreateLine(3, 'rgba(0, 255, 0, 0.3)');\n\t\t\t\t\t\t//\tline.move(x, y, next_pos.x, next_pos.y);\n\t\t\t\t\t\t//\tedge.line = line;\n\t\t\t\t\t\t//}\n\t\t\t\t\t\tgraph_edges.set(`${point_hash}_${next_hash}`, { from: point, to: next });\n\n\n\t\t\t\t\t\tif (!graph_points.has(point_hash)) {\n\t\t\t\t\t\t\tpoint.adjacents = [next];\n\t\t\t\t\t\t\tgraph_points.set(point_hash, point);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pt = graph_points.get(point_hash);\n\t\t\t\t\t\t\tpt.adjacents.push(next);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!graph_points.has(next_hash)) {\n\t\t\t\t\t\t\tnext.adjacents = [point];\n\t\t\t\t\t\t\tgraph_points.set(next_hash, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pt = graph_points.get(next_hash);\n\t\t\t\t\t\t\tpt.adjacents.push(point);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst all_points = await this.#Points.values();\n\t\tconst good_point_status_arr = [freePointStatus, this.#POINT_STARTING, this.#POINT_IN_PATH];\n\t\tfor (const point of all_points) {\n\t\t\tif (point && isPointOKForPath(good_point_status_arr, point) === true) {\n\t\t\t\tconst { x, y } = point.GetPosition();\n\t\t\t\t//TODO: await all below promises\n\t\t\t\t//east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, y, x, y);\n\t\t\t\t//west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, y, x, y);\n\t\t\t\t//north\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x, (y - 1), x, y);\n\t\t\t\t//south\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x, (y + 1), x, y);\n\t\t\t\t//north_west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, (y - 1), x, y);\n\t\t\t\t//north_east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, (y - 1), x, y);\n\t\t\t\t//south_west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, (y + 1), x, y);\n\t\t\t\t//south_east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, (y + 1), x, y);\n\t\t\t}\n\t\t}\n\t\t//return graph\n\t\treturn {\n\t\t\tvertices: Array.from(graph_points.values()),\n\t\t\tedges: Array.from(graph_edges.values())\n\t\t};\n\t}\n\n\t/**\n\t * Based on https://www.geeksforgeeks.org/print-all-the-cycles-in-an-undirected-graph/\n\t * @param {any} graph constructed earlier with BuildGraph\n\t * @param {string} sHumanColor - human red playing color\n\t * @param {object} lines - line array\n\t * @returns {array} of cycles\n\t */\n\tasync MarkAllCycles(graph, sHumanColor, lines) {\n\t\tawait this.#Init();\n\n\n\n\t\tconst vertices = graph.vertices;\n\t\tconst N = vertices.length;\n\t\tlet cycles = new Array(N);\n\t\t// mark with unique numbers\n\t\tconst mark = new Array(N);\n\t\t// arrays required to color the \n\t\t// graph, store the parent of node \n\t\tconst color = new Array(N), par = new Array(N);\n\n\t\tfor (let i = 0; i < N; i++) {\n\t\t\tmark[i] = []; cycles[i] = [];\n\t\t}\n\n\t\tconst dfs_cycle = async function (u, p) {\n\t\t\t// already (completely) visited vertex. \n\t\t\tif (color[u] === 2)\n\t\t\t\treturn;\n\n\t\t\t// seen vertex, but was not completely visited -> cycle detected. \n\t\t\t// backtrack based on parents to find the complete cycle. \n\t\t\tif (color[u] === 1) {\n\t\t\t\tcyclenumber++;\n\t\t\t\tlet cur = p;\n\t\t\t\tmark[cur].push(cyclenumber);\n\n\t\t\t\t// backtrack the vertex which are\n\t\t\t\t// in the current cycle thats found\n\t\t\t\twhile (cur !== u) {\n\t\t\t\t\tcur = par[cur];\n\t\t\t\t\tmark[cur].push(cyclenumber);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpar[u] = p;\n\n\t\t\t// partially visited.\n\t\t\tcolor[u] = 1;\n\t\t\tconst vertex = vertices[u];\n\t\t\tif (vertex) {\n\n\t\t\t\t//const x = vertex.attributes.get('cx'), y = vertex.attributes.get('cy');\n\t\t\t\t//vertex.SetStrokeColor('black');\n\t\t\t\t//vertex.SetFillColor('black');\n\t\t\t\t////vertex.setAttribute(\"r\", \"6\");\n\t\t\t\t//await Sleep(10);\n\n\n\t\t\t\t// simple dfs on graph\n\t\t\t\tfor (const adj of vertex.adjacents) {\n\t\t\t\t\tconst v = vertices.indexOf(adj);\n\t\t\t\t\t// if it has not been visited previously\n\t\t\t\t\tif (v === par[u])\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tawait dfs_cycle(v, u);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// completely visited. \n\t\t\tcolor[u] = 2;\n\t\t};\n\n\t\tconst printCycles = async (edges, mark) => {\n\t\t\t// push the edges that into the \n\t\t\t// cycle adjacency list\n\t\t\tfor (let e = 0; e < edges; e++) {\n\t\t\t\tconst mark_e = mark[e];\n\t\t\t\tif (mark_e !== undefined && mark_e.length > 0) {\n\t\t\t\t\tfor (let m = 0; m < mark_e.length; m++) {\n\t\t\t\t\t\tconst found_c = cycles[mark_e[m]];\n\t\t\t\t\t\tif (found_c !== undefined)\n\t\t\t\t\t\t\tfound_c.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//sort by point length(only cycles >= 4): first longest cycles, most points\n\t\t\tcycles = cycles.filter(c => c.length >= 4).sort((b, a) => a.length - b.length);\n\n\t\t\t//gather free human player points that could be intercepted.\n\t\t\tconst free_human_player_points = [];\n\t\t\tfor (const pt of await this.#Points.values()) {\n\t\t\t\tif (pt !== undefined && pt.GetFillColor() === sHumanColor && StatusEnum.POINT_FREE_RED === pt.GetStatus()) {\n\t\t\t\t\tconst { x, y } = pt.GetPosition();\n\t\t\t\t\tif (false === IsPointOutsideAllPaths(x, y, lines))\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t//check if really exists\n\t\t\t\t\t//const pt1 = document.querySelector(`svg > circle[cx=\"${x}\"][cy=\"${y}\"]`);\n\t\t\t\t\t//if (pt1)\n\t\t\t\t\tfree_human_player_points.push({ x, y });\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t//const tab = [];\n\t\t\t// traverse through all the vertices with same cycle\n\t\t\tfor (let i = 0; i <= cyclenumber; i++) {\n\t\t\t\tconst cycl = cycles[i];//get cycle\n\t\t\t\tif (cycl && cycl.length > 0) {\t//some checks\n\t\t\t\t\t// Print the i-th cycle\n\t\t\t\t\t//let str = (`Cycle Number ${i}: `), trailing_points = [];\n\t\t\t\t\t//const rand_color = 'var(--indigo)';\n\n\t\t\t\t\t//convert to logical space\n\t\t\t\t\tconst mapped_verts = cycl.map(c => vertices[c].GetPosition());\n\t\t\t\t\t//sort clockwise (https://stackoverflow.com/questions/45660743/sort-points-in-counter-clockwise-in-javascript)\n\t\t\t\t\tconst cw_sorted_verts = sortPointsClockwise(mapped_verts);\n\t\t\t\t\tcycles[i] = { cycl, cw_sorted_verts };\n\t\t\t\t\t////display which cycle we are dealing with\n\t\t\t\t\t//for (const vert of cw_sorted_verts) {\n\t\t\t\t\t//\tconst { x, y } = vert;\n\t\t\t\t\t//\tconst pt = document.querySelector(`svg > circle[cx=\"${x}\"][cy=\"${y}\"]`);\n\t\t\t\t\t//\tif (pt) {//again some basic checks\n\t\t\t\t\t//\t\tstr += (`(${x},${y})`);\n\n\t\t\t\t\t//\t\tpt.SetStrokeColor(rand_color);\n\t\t\t\t\t//\t\tpt.SetFillColor(rand_color);\n\t\t\t\t\t//\t\tpt.setAttribute(\"r\", \"6\");\n\t\t\t\t\t//\t}\n\t\t\t\t\t//\tawait Sleep(50);\n\t\t\t\t\t//}\n\n\t\t\t\t\t//find for all free_human_player_points which cycle might intercept it (surrounds)\n\t\t\t\t\t//only convex, NOT concave :-(\n\t\t\t\t\t//let tmp = '', comma = '';\n\t\t\t\t\t//for (const possible_intercept of free_human_player_points) {\n\t\t\t\t\t//\tif (false !== pnpoly(cw_sorted_verts, possible_intercept.x, possible_intercept.y)) {\n\t\t\t\t\t//\t\ttmp += `${comma}(${possible_intercept.x},${possible_intercept.y})`;\n\n\t\t\t\t\t//\t\tconst pt1 = document.querySelector(`svg > circle[cx=\"${possible_intercept.x}\"][cy=\"${possible_intercept.y}\"]`);\n\t\t\t\t\t//\t\tif (pt1) {\n\t\t\t\t\t//\t\t\tpt1.SetStrokeColor('var(--yellow)');\n\t\t\t\t\t//\t\t\tpt1.SetFillColor('var(--yellow)');\n\t\t\t\t\t//\t\t\tpt1.setAttribute(\"r\", \"6\");\n\t\t\t\t\t//\t\t}\n\t\t\t\t\t//\t\tcomma = ',';\n\t\t\t\t\t//\t}\n\t\t\t\t\t//}\n\t\t\t\t\t////gathering of some data and console printing\n\t\t\t\t\t//trailing_points.unshift(str);\n\t\t\t\t\t//tab.push(trailing_points);\n\t\t\t\t\t////log...\n\t\t\t\t\t//LocalLog(str + (tmp !== '' ? ` possible intercepts: ${tmp}` : ''));\n\t\t\t\t\t////...and clear\n\t\t\t\t\t//const pts2reset = Array.from(document.querySelectorAll(`svg > circle[fill=\"${rand_color}\"][r=\"6\"]`));\n\t\t\t\t\t//pts2reset.forEach(pt => {\n\t\t\t\t\t//\tpt.SetStrokeColor(COLOR_BLUE);\n\t\t\t\t\t//\tpt.SetFillColor(COLOR_BLUE);\n\t\t\t\t\t//\tpt.setAttribute(\"r\", \"4\");\n\t\t\t\t\t//});\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*return tab;*/return { cycles, free_human_player_points, cyclenumber };\n\t\t};\n\n\t\t// store the numbers of cycle\n\t\tlet cyclenumber = 0, edges = N;\n\n\t\t// call DFS to mark the cycles\n\t\tfor (let vind = 0; vind < N; vind++) {\n\t\t\tawait dfs_cycle(vind + 1, vind);//, color, mark, par);\n\t\t}\n\n\t\t// function to print the cycles\n\t\treturn await printCycles(edges, mark);\n\t}\n}\n\n// eslint-disable-next-line no-unused-vars\n/* function concavemanTesting() {\n\tconst precision_points = [[484, 480], [676, 363], [944, 342], [678, 41], [286, 237], [758, 215], [752, 117], [282, 492], [609, 262], [129, 252]];\n\tconst concavity = 2.0, lengthThreshold = 0.0;\n\tconst concaveman_output = concaveman(precision_points, concavity, lengthThreshold);\n\t//console.log('Hello concaveman. Simple test output points: \\n' + JSON.stringify(output));\n\n\n\t// Make sure the polygon has counter-clockwise winding. Skip this step if you know it's already counter-clockwise.\n\t//console.log(`decomp.makeCCW(concavePolygon) => ${decomp.makeCCW(precision_points)}`);\n\t//const convexPolygonsQuick = decomp.quickDecomp(precision_points);\n\t// ==> [  [[1,0],[1,1],[0.5,0.5]],  [[0.5,0.5],[-1,1],[-1,0],[1,0]]  ]\n\t//console.log(`decomp.quickDecomp => ${convexPolygons}`);\n\t// Decompose using the slow (but optimal) algorithm\n\tconst convexPolygons = decomp.decomp(precision_points);\n\t// ==> [  [[-1,1],[-1,0],[1,0],[0.5,0.5]],  [[1,0],[1,1],[0.5,0.5]]  ]\n\t//console.log(`decomp.decomp => ${convexPolygons}`);\n\tif (!concaveman_output || concaveman_output.length <= 0 ||\n\t\t//!convexPolygonsQuick || convexPolygonsQuick.length <= 0 || \n\t\t!convexPolygons || convexPolygons.length <= 0) {\n\t\tLocalLog('decomp or concaveman error');\n\t}\n} */\n\nexport { concaveman, GraphAI };\n","﻿import { GraphAI, concaveman } from \"./AISource.js\";\n// import { SvgVml, StatusEnum, LocalLog, LocalError, sortPointsClockwise, pnpoly, IsPointOutsideAllPaths } from \"./shared.js\";\nimport { astar, Graph } from \"javascript-astar\";\nimport * as clustering from \"density-clustering\";\n\n//globals loaded only once hopefully\nlet SvgVml, StatusEnum, LocalLog, LocalError, sortPointsClockwise, pnpoly, IsPointOutsideAllPaths;\n\n// This is the entry point for our worker\naddEventListener('message', async function (e) {\n\n\tif (SvgVml === undefined) {\n\t\tconst isMinified = location.hostname !== \"localhost\";\n\n\t\tconst shrd = await import(/* webpackIgnore: true */`./shared${isMinified ? '.min' : ''}.js`);\n\n\t\tSvgVml = shrd.SvgVml, StatusEnum = shrd.StatusEnum, LocalLog = shrd.LocalLog, LocalError = shrd.LocalError,\n\t\t\tsortPointsClockwise = shrd.sortPointsClockwise, pnpoly = shrd.pnpoly,\n\t\t\tIsPointOutsideAllPaths = shrd.IsPointOutsideAllPaths;\n\t}\n\n\n\tconst params = e.data;\n\n\tswitch (params.operation) {\n\t\tcase \"BUILD_GRAPH\":\n\t\t\t{\n\t\t\t\tconst svgVml = new SvgVml();\n\t\t\t\tsvgVml.Init(null, null, null, params.boardSize);\n\n\t\t\t\t//debugger;\n\t\t\t\tconst lines = params.paths.map(pa => svgVml.DeserializePolyline(pa));\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\n\t\t\t\tLocalLog(`lines.count = ${lines.length}, points.count = ${points.size}`);\n\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({\n\t\t\t\t\tfreePointStatus: StatusEnum.POINT_FREE_BLUE,\n\t\t\t\t\t// cpufillCol: 'var(--bluish)', \n\t\t\t\t\tvisuals: false\n\t\t\t\t});\n\t\t\t\t//LocalLog(graph);\n\n\t\t\t\tpostMessage({ operation: params.operation, params: graph });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"CONCAVEMAN\":\n\t\t\t{\n\t\t\t\tconst svgVml = new SvgVml();\n\t\t\t\tsvgVml.Init(null, null, null, params.boardSize);\n\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst clicked_status = params.clickedPointStatus;\n\t\t\t\tconst graph = await ai.BuildGraph({\n\t\t\t\t\tfreePointStatus: clicked_status,\n\t\t\t\t\t// cpufillCol: clicked_status === StatusEnum.POINT_FREE_RED ? 'var(--redish)' : 'var(--bluish)',\n\t\t\t\t\tvisuals: false\n\t\t\t\t});\n\n\n\t\t\t\tconst vertices = graph.vertices.map(function (pt) {\n\t\t\t\t\tconst { x, y } = pt.GetPosition();\n\t\t\t\t\treturn [x, y];\n\t\t\t\t});\n\n\t\t\t\tlet convex_hull = null, mapped_verts, cw_sorted_verts;\n\t\t\t\tif (vertices.length > 0) {\n\t\t\t\t\tconvex_hull = concaveman(vertices, params.concavity ?? 2.0, params.lengthThreshold ?? 0.0);\n\n\t\t\t\t\tmapped_verts = convex_hull.map(([x, y]) => ({ x, y }));\n\t\t\t\t\tcw_sorted_verts = sortPointsClockwise(mapped_verts);\n\t\t\t\t}\n\n\t\t\t\tpostMessage({ operation: params.operation, convex_hull: convex_hull, cw_sorted_verts: cw_sorted_verts });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"MARK_ALL_CYCLES\":\n\t\t\t{\n\t\t\t\tconst svgVml = new SvgVml();\n\t\t\t\tsvgVml.Init(null, null, null, params.boardSize);\n\n\t\t\t\tconst lines = params.paths.map(pa => svgVml.DeserializePolyline(pa));\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({\n\t\t\t\t\tfreePointStatus: StatusEnum.POINT_FREE_BLUE,\n\t\t\t\t\t// cpufillCol: params.colorBlue,\n\t\t\t\t\tvisuals: false\n\t\t\t\t});\n\t\t\t\tconst result = await ai.MarkAllCycles(graph, params.colorRed, lines);\n\n\n\t\t\t\tpostMessage({\n\t\t\t\t\toperation: params.operation,\n\t\t\t\t\tcycles: result.cycles,\n\t\t\t\t\tfree_human_player_points: result.free_human_player_points,\n\t\t\t\t\tcyclenumber: result.cyclenumber\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"FIND_SURROUNDABLE_POINTS\":\n\t\t\t{\n\t\t\t\tconst svgVml = new SvgVml();\n\t\t\t\tsvgVml.Init(null, null, null, params.boardSize);\n\n\t\t\t\tconst allLines = params.allLines.map(pa => svgVml.DeserializePolyline(pa));\n\t\t\t\tconst all_points = params.allPoints.map(pt => svgVml.DeserializeOval(pt));\n\t\t\t\tconst working_points = params.workingPoints.map(pt => svgVml.DeserializeOval(pt));\n\n\t\t\t\tconst sHumanColor = params.sHumanColor, sCPUColor = params.sCPUColor;\n\t\t\t\tconst human_point_statuses = [StatusEnum.POINT_FREE_RED, StatusEnum.POINT_IN_PATH];\n\t\t\t\tconst cpu_point_statuses = [StatusEnum.POINT_FREE_BLUE, StatusEnum.POINT_IN_PATH];\n\n\n\n\t\t\t\tconst results = [];\n\t\t\t\tfor (const pt of working_points) {\n\t\t\t\t\tif (pt !== undefined && pt.GetFillColor() === sHumanColor\n\t\t\t\t\t\t&& human_point_statuses.includes(pt.GetStatus())) {\n\t\t\t\t\t\tconst { x, y } = pt.GetPosition();\n\t\t\t\t\t\tif (false === IsPointOutsideAllPaths(x, y, allLines)) {\n\t\t\t\t\t\t\tLocalLog(\"!!!Point inside path!!!\");\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let radius = 1; radius <= 4; radius++) {\n\t\t\t\t\t\t\tconst possible = [];\n\n\t\t\t\t\t\t\t//pt,x,y is good \"surroundable point\"\n\t\t\t\t\t\t\t//let's find closes CPU points to it lying on circle\n\t\t\t\t\t\t\tfor (const cpu_pt of all_points) {\n\t\t\t\t\t\t\t\tif (cpu_pt !== undefined && cpu_pt.GetFillColor() === sCPUColor\n\t\t\t\t\t\t\t\t\t&& cpu_point_statuses.includes(cpu_pt.GetStatus())) {\n\t\t\t\t\t\t\t\t\tconst { x: cpu_x, y: cpu_y } = cpu_pt.GetPosition();\n\t\t\t\t\t\t\t\t\tif (false === IsPointOutsideAllPaths(cpu_x, cpu_y, allLines))\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t\t\tif (0 <= svgVml.IsPointInCircle({ x: cpu_x, y: cpu_y }, { x, y }, radius)) {\n\t\t\t\t\t\t\t\t\t\tcpu_pt.x = cpu_x;\n\t\t\t\t\t\t\t\t\t\tcpu_pt.y = cpu_y;\n\t\t\t\t\t\t\t\t\t\tpossible.push(cpu_pt);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (possible.length > 2) {\n\t\t\t\t\t\t\t\tlet cw_sorted_verts = sortPointsClockwise(possible);\n\t\t\t\t\t\t\t\t//check if points are aligned one-by-one next to each other no more than 1 point apart\n\t\t\t\t\t\t\t\tfor (let i = cw_sorted_verts.length - 2, last = cw_sorted_verts.at(-1); i > 0; i--) {\n\t\t\t\t\t\t\t\t\tconst it = cw_sorted_verts[i];\n\t\t\t\t\t\t\t\t\tif (!(Math.abs(last.x - it.x) <= 1 && Math.abs(last.y - it.y) <= 1)) {\n\t\t\t\t\t\t\t\t\t\tcw_sorted_verts = null;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlast = it;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t//check if above loop exited with not consecutive points\n\t\t\t\t\t\t\t\t\tcw_sorted_verts === null ||\n\n\t\t\t\t\t\t\t\t\t//check last and first path points that they close up nicely\n\t\t\t\t\t\t\t\t\t!(Math.abs(cw_sorted_verts.at(-1).x - cw_sorted_verts[0].x) <= 1 &&\n\t\t\t\t\t\t\t\t\t\tMath.abs(cw_sorted_verts.at(-1).y - cw_sorted_verts[0].y) <= 1\n\t\t\t\t\t\t\t\t\t) ||\n\n\t\t\t\t\t\t\t\t\t//check if \"points-created-path\" actually contains selected single point inside its boundaries\n\t\t\t\t\t\t\t\t\tfalse === pnpoly(cw_sorted_verts, x, y)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tresults.push({ cw_sorted_verts, radius, x, y });\n\n\t\t\t\t\t\t\t\tLocalLog(`circle sorted possible path points for ${radius} radius: `);\n\t\t\t\t\t\t\t\tLocalLog(cw_sorted_verts);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpostMessage({ operation: params.operation, results });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"ASTAR\":\n\t\t\t{\n\t\t\t\tconst { arr, start, end } = params;\n\t\t\t\tconst graphDiagonal = new Graph(arr, { diagonal: true });\n\t\t\t\tconst from = graphDiagonal.grid[start.y][start.x];\n\t\t\t\tconst to = graphDiagonal.grid[end.y][end.x];\n\t\t\t\tconst resultWithDiagonals = astar.search(graphDiagonal, from, to, { heuristic: astar.heuristics.diagonal });\n\n\t\t\t\tLocalLog(resultWithDiagonals);\n\n\t\t\t\tpostMessage({ operation: params.operation, resultWithDiagonals });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"CLUSTERING\":\n\t\t\t{\n\t\t\t\tconst { dataset, method, numberOfClusters, neighborhoodRadius, minPointsPerCluster } = params;\n\t\t\t\t// LocalLog(dataset);\n\t\t\t\tswitch (method) {\n\t\t\t\t\tcase \"KMEANS\":\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst kmeans = new clustering.KMEANS();\n\t\t\t\t\t\t\t// parameters: 3 - number of clusters\n\t\t\t\t\t\t\tconst clusters = kmeans.run(dataset, numberOfClusters);\n\n\t\t\t\t\t\t\t// LocalLog({ method, clusters });\n\t\t\t\t\t\t\tpostMessage({ operation: params.operation, method, clusters });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"OPTICS\":\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst optics = new clustering.OPTICS();\n\t\t\t\t\t\t\t// parameters: 2 - neighborhood radius, 2 - number of points in neighborhood to form a cluster\n\t\t\t\t\t\t\tconst clusters = optics.run(dataset, neighborhoodRadius, minPointsPerCluster);\n\t\t\t\t\t\t\tconst plot = optics.getReachabilityPlot();\n\n\t\t\t\t\t\t\t// LocalLog({ method, clusters, plot });\n\t\t\t\t\t\t\tpostMessage({ operation: params.operation, method, clusters, plot });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"DBSCAN\":\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst dbscan = new clustering.DBSCAN();\n\t\t\t\t\t\t\t// parameters: 5 - neighborhood radius, 2 - number of points in neighborhood to form a cluster\n\t\t\t\t\t\t\tconst clusters = dbscan.run(dataset, neighborhoodRadius, minPointsPerCluster);\n\t\t\t\t\t\t\tconst noise = dbscan.noise;\n\n\t\t\t\t\t\t\t// LocalLog({ method, clusters, noise });\n\t\t\t\t\t\t\tpostMessage({ operation: params.operation, method, clusters, noise });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"bad or no clustering method\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tLocalError(`unknown params.operation = ${params.operation}`);\n\t\t\tbreak;\n\t}\n});\n\n// LocalLog('Worker loaded');\n"],"names":["RBush","Queue","pointInPolygon","orient","concaveman","points","concavity","lengthThreshold","Math","max","undefined","hull","left","top","right","bottom","i","length","p","cull","filtered","slice","push","sort","compareByX","lower","cross","pop","upper","ii","concat","convexHull","fastConvexHull","tree","toBBox","a","minX","minY","maxX","maxY","compareMinX","b","compareMinY","load","last","queue","remove","insertNode","segTree","insert","updateBBox","sqConcavity","sqLenThreshold","node","shift","next","sqLen","getSqDist","maxSqLen","findCandidate","prev","min","concave","c","d","maxDist","compareDist","data","children","child","dist","leaf","sqSegDist","sqSegBoxDist","peek","item","d0","d1","noIntersections","bbox","inside","sqSegSegDist","d2","d3","d4","p1","q1","p2","q2","edges","search","p3","dx","dy","x","y","t","x0","y0","x1","y1","x2","y2","x3","y3","sc","sN","tc","tN","ux","uy","vx","vy","wx","wy","e","D","sD","tD","default","module","exports","DBSCAN","dataset","epsilon","minPts","distanceFunction","this","distance","_euclideanDistance","clusters","noise","_visited","_assigned","_datasetLength","_init","prototype","run","pointId","neighbors","_regionQuery","clusterId","_addToCluster","_expandCluster","Array","Error","pointId2","neighbors2","_mergeArrays","id","len","P","indexOf","q","sum","sqrt","KMEANS","k","assignments","centroids","init","randomCentroid","change","assign","centroidId","mean","maxDim","count","dim","j","getClusters","centroid","maxId","round","random","closestCentroid","argmin","point","set","f","Number","MAX_VALUE","arg","diff","PriorityQueue","OPTICS","_reachability","_processed","_coreDistance","_orderedList","l","priorityQueue","_distanceToCore","_updateQueue","getReachabilityPlot","reachabilityPlot","self","forEach","newReachableDistance","queueElements","getElements","coreDistCand","elements","priorities","sorting","_queue","_priorities","_sorting","ele","priority","indexToInsert","index","priority2","_insertAt","splice","func","getElementPriority","getPriorities","getElementsWithPriorities","result","definition","pathTo","curr","path","parent","unshift","astar","graph","start","end","options","cleanDirty","heuristic","heuristics","manhattan","closest","openHeap","BinaryHeap","closestNode","h","size","currentNode","closed","il","neighbor","isWall","gScore","g","getCost","beenVisited","visited","markDirty","rescoreElement","pos0","pos1","abs","diagonal","D2","cleanNode","Graph","gridIn","nodes","grid","row","GridNode","weight","scoreFunction","content","dirtyNodes","ret","toString","rowDebug","graphString","join","fromNeighbor","element","sinkDown","bubbleUp","n","parentN","elemScore","child1Score","child2N","child1N","swap","child1","child2","vs","xi","yi","xj","yj","pointInPolygonFlat","pointInPolygonNested","isArray","nested","flat","r","o","s","log","exp","u","floor","_maxEntries","_minEntries","ceil","clear","m","height","all","_all","collides","_build","_splitRoot","_insert","_condense","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","Float64Array","orient2d","_","w","A","F","O","z","B","C","E","G","H","I","J","K","L","N","Q","orient2dfast","Object","defineProperty","value","TinyQueue","constructor","compare","defaultCompare","_down","_up","pos","current","halfLength","best","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","key","enumerable","get","obj","prop","hasOwnProperty","Symbol","toStringTag","StatusEnum","sortPointsClockwise","IsPointOutsideAllPaths","GraphAI","iGridWidth","iGridHeight","pointStore","isMinified","location","hostname","shrd","import","POINT_STARTING","POINT_IN_PATH","BuildGraph","freePointStatus","POINT_FREE_BLUE","graph_points","Map","graph_edges","isPointOKForPath","allowedPoints","pt","status","GetStatus","includes","freePointStatusArr","addPointsAndEdgesToGraph","async","to_x","to_y","point_hash","next_hash","has","from","to","adjacents","all_points","values","good_point_status_arr","GetPosition","vertices","MarkAllCycles","sHumanColor","lines","cycles","mark","color","par","dfs_cycle","cyclenumber","cur","vertex","adj","vind","mark_e","found_c","filter","free_human_player_points","GetFillColor","POINT_FREE_RED","cycl","mapped_verts","map","cw_sorted_verts","printCycles","SvgVml","LocalLog","LocalError","pnpoly","addEventListener","params","operation","svgVml","Init","boardSize","paths","pa","DeserializePolyline","DeserializeOval","ai","state","visuals","postMessage","clicked_status","clickedPointStatus","convex_hull","colorRed","allLines","allPoints","working_points","workingPoints","sCPUColor","human_point_statuses","cpu_point_statuses","results","radius","possible","cpu_pt","cpu_x","cpu_y","IsPointInCircle","at","it","arr","graphDiagonal","resultWithDiagonals","method","numberOfClusters","neighborhoodRadius","minPointsPerCluster","optics","plot","dbscan"],"sourceRoot":""}