"use strict";let $createOval,$createPolyline,$RemovePolyline,$createSVGVML,$createLine,hasDuplicates,sortPointsClockwise,GameStateStore,concavemanBundle;const StatusEnum=Object.freeze({POINT_FREE_RED:-3,POINT_FREE_BLUE:-2,POINT_FREE:-1,POINT_STARTING:0,POINT_IN_PATH:1,POINT_OWNED_BY_RED:2,POINT_OWNED_BY_BLUE:3}),CommandKindEnum=Object.freeze({UNKNOWN:-1,PING:0,POINT:1,PATH:2,PLAYER_JOINING:3,PLAYER_SURRENDER:4,WIN:5,POINTS_AND_PATHS:6,USER_SETTINGS:7,STOP_AND_DRAW:8}),GameTypeEnum=Object.freeze({FIRST_CAPTURE:0,FIRST_5_CAPTURES:1,FIRST_5_PATHS:2,FIRST_5_ADVANTAGE_PATHS:3}),WinStatusEnum=Object.freeze({RED_WINS:0,GREEN_WINS:1,NO_WIN:2,DRAW_WIN:3});class DtoMsg{GetKind(){throw new Error("missing GetKind implementation!")}}class InkBallPointViewModel extends DtoMsg{constructor(t=0,i=0,e=0,s=0,n=0,o=StatusEnum.POINT_FREE,a=0){super(),this.iId=t,this.iGameId=i,this.iPlayerId=e,this.iX=s,this.iY=n,this.Status=o,this.iEnclosingPathId=a}GetKind(){return CommandKindEnum.POINT}static Format(t,i){let e="("+i.iX+","+i.iY+" - ";switch(void 0!==i.Status?i.Status:i.status){case StatusEnum.POINT_FREE_RED:e+="red";break;case StatusEnum.POINT_FREE_BLUE:e+="blue";break;case StatusEnum.POINT_FREE:e+="";break;case StatusEnum.POINT_STARTING:e+="starting";break;case StatusEnum.POINT_IN_PATH:e+="path";break;case StatusEnum.POINT_OWNED_BY_RED:e+="owned by red";break;case StatusEnum.POINT_OWNED_BY_BLUE:e+="owned by blue";break;default:throw new Error("Bad point type!")}return t+" places "+e+") point"}}class InkBallPathViewModel extends DtoMsg{constructor(t=0,i=0,e=0,s="",n=""){super(),this.iId=t,this.iGameId=i,this.iPlayerId=e,this.PointsAsString=s,this.OwnedPointsAsString=n}GetKind(){return CommandKindEnum.PATH}static Format(t,i){return`${t} places ${`(${i.PointsAsString||i.pointsAsString}) [${i.OwnedPointsAsString||i.ownedPointsAsString}]`} path`}}class PlayerJoiningCommand extends DtoMsg{constructor(t,i,e){super(),this.OtherPlayerId=t,this.OtherPlayerName=i,this.Message=e}GetKind(){return CommandKindEnum.PLAYER_JOINING}static Format(t){return t.Message||t.message}}class PlayerSurrenderingCommand extends DtoMsg{constructor(t,i,e){super(),this.OtherPlayerId=t,this.thisOrOtherPlayerSurrenders=i,this.Message=e}GetKind(){return CommandKindEnum.PLAYER_SURRENDER}static Format(t){return t.Message||t.message}}class PingCommand extends DtoMsg{constructor(t=""){super(),this.Message=t}GetKind(){return CommandKindEnum.PING}static Format(t,i){return t+" says '"+(i.Message||i.message)+"'"}}class WinCommand extends DtoMsg{constructor(t=WinStatusEnum.NO_WIN,i=0,e="null"){super(),this.Status=t,this.WinningPlayerId=i,this.Message=e}GetKind(){return CommandKindEnum.WIN}static Format(t){let i="";switch(void 0!==t.Status?t.Status:t.status){case WinStatusEnum.RED_WINS:i="red.";break;case WinStatusEnum.GREEN_WINS:i="blue.";break;case WinStatusEnum.NO_WIN:i="no one!";break;case WinStatusEnum.DRAW_WIN:i="draw!"}return"And the winner is... "+i}}class StopAndDrawCommand extends DtoMsg{constructor(){super()}GetKind(){return CommandKindEnum.STOP_AND_DRAW}static Format(t){return"User "+t+" started to draw path"}}class PlayerPointsAndPathsDTO extends DtoMsg{constructor(t=[],i=[]){super(),this.Points=t,this.Paths=i}GetKind(){return CommandKindEnum.POINTS_AND_PATHS}static Deserialize(t){const i=`{ "Points": ${t.Points||t.points}, "Paths": ${t.Paths||t.paths} }`;return JSON.parse(i)}}class ApplicationUserSettings extends DtoMsg{constructor(t=!1){super(),this.DesktopNotifications=t}GetKind(){return CommandKindEnum.USER_SETTINGS}static Serialize(t){return JSON.stringify(t)}static Deserialize(t){return JSON.parse(t)}}class CountdownTimer{constructor({countdownSeconds:t=60,labelSelector:i=null,initialStart:e=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.timerID=-1,this.label=null,this.countdownReachedHandler=s,i&&(this.label=document.querySelector(i)),e&&this.Start()}setTimeFunc(){--this.totalSeconds<=0?(this.Stop(),this.countdownReachedHandler&&this.countdownReachedHandler(this.label)):this.label&&(this.label.innerHTML=this.pad(parseInt(this.totalSeconds/60))+":"+this.pad(this.totalSeconds%60))}pad(t){const i=t+"";return i.length<2?"0"+i:i}Start(){this.Stop(),this.timerID=setInterval(this.setTimeFunc.bind(this),1e3)}Stop(){this.timerID>0&&clearInterval(this.timerID),this.label&&(this.label.innerHTML="")}Reset({countdownSeconds:t=60,labelSelector:i=null,initialStart:e=!1,countdownReachedHandler:s}={}){this.countdownSeconds=t,this.totalSeconds=this.countdownSeconds,this.label=null,this.countdownReachedHandler=s,i&&(this.label=document.querySelector(i)),e&&this.Start()}}async function importAllModulesAsync(t){let i;i=-1!==Array.prototype.slice.call(document.getElementsByTagName("script")).map(t=>t.src).find(t=>-1!==t.indexOf("inkball")).split("/").pop().indexOf("min")?await import("./svgvml.min.js"):await import("./svgvml.js"),$createOval=i.$createOval,$createPolyline=i.$createPolyline,$RemovePolyline=i.$RemovePolyline,$createSVGVML=i.$createSVGVML,$createLine=i.$createLine,hasDuplicates=i.hasDuplicates,sortPointsClockwise=i.sortPointsClockwise,GameStateStore=i.GameStateStore,-1===t.iOtherPlayerID&&(i=await import("./concavemanBundle.js"),concavemanBundle=i)}function LocalLog(t){console.log(t)}function LocalError(t){console.error(t)}function RandomColor(){return"var(--orange)"}async function Sleep(t){return new Promise(i=>setTimeout(i,t))}class InkBallGame{constructor(t,i,e,s,n,o,a,r,l,h=!0,m=!0,u=!1,c=60,d=125){this.g_iGameID=t,this.g_iPlayerID=i,this.m_iOtherPlayerId=e,this.m_bIsCPUGame=-1===this.m_iOtherPlayerId,this.GameType=GameTypeEnum[l],this.iConnErrCount=0,this.iExponentialBackOffMillis=2e3,this.COLOR_RED="red",this.COLOR_BLUE="blue",this.COLOR_OWNED_RED="#DC143C",this.COLOR_OWNED_BLUE="#8A2BE2",this.DRAWING_PATH_COLOR="black",this.m_bIsWon=!1,this.m_bPointsAndPathsLoaded=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=d,this.m_Timer=null,this.m_ReconnectTimer=null,this.m_WaitStartTime=null,this.m_TimerOpts={countdownSeconds:c,labelSelector:"#debug2",initialStart:!0,countdownReachedHandler:this.CountDownReachedHandler.bind(this)},this.m_iSlowdownLevel=0,this.m_iGridSizeX=0,this.m_iGridSizeY=0,this.m_iGridWidth=0,this.m_iGridHeight=0,this.m_BoardSize=null,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_Screen=null,this.m_Debug=null,this.m_Player2Name=null,this.m_SurrenderButton=null,this.m_sMsgInputSel=null,this.m_sMsgSendButtonSel=null,this.m_sMsgListSel=null,this.m_CancelPath=null,this.m_StopAndDraw=null,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_bIsPlayingWithRed=h,this.m_bIsPlayerActive=m,this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.m_PointRadius=4,this.m_Line=null,this.m_Lines=null,this.m_Points=null,this.m_bViewOnly=u,this.m_MouseCursorOval=null,this.m_ApplicationUserSettings=null,this.m_sLastMoveGameTimeStamp=null,null!==s&&""!==s&&(this.g_SignalRConnection=(new signalR.HubConnectionBuilder).withUrl(s,{transport:a,accessTokenFactory:function(){return`iGameID=${this.g_iGameID}&iPlayerID=${this.g_iPlayerID}`}.bind(this)}).withHubProtocol(o).configureLogging(n).build(),this.g_SignalRConnection.serverTimeoutInMilliseconds=r,this.g_SignalRConnection.onclose(async t=>{null!=t&&(LocalError(t),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout(()=>this.Connect(),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5)))}))}async GetPlayerPointsAndPaths(){if(!1===this.m_bPointsAndPathsLoaded){const t=await this.g_SignalRConnection.invoke("GetPlayerPointsAndPaths",this.m_bViewOnly,this.g_iGameID),i=PlayerPointsAndPathsDTO.Deserialize(t);return void 0!==i.Points&&await this.SetAllPoints(i.Points),void 0!==i.Paths&&await this.SetAllPaths(i.Paths),this.m_bPointsAndPathsLoaded=!0,!0}return!1}async Connect(){try{if(await this.g_SignalRConnection.start(),this.iConnErrCount=0,LocalLog("connected; iConnErrCount = "+this.iConnErrCount),!1===this.m_bViewOnly)if(null===sessionStorage.getItem("ApplicationUserSettings")){let t=await this.g_SignalRConnection.invoke("GetUserSettings");if(t){LocalLog(t),t=ApplicationUserSettings.Deserialize(t);const i=ApplicationUserSettings.Serialize(t);sessionStorage.setItem("ApplicationUserSettings",i)}this.m_ApplicationUserSettings=new ApplicationUserSettings(t.DesktopNotifications),await this.GetPlayerPointsAndPaths()}else{const t=sessionStorage.getItem("ApplicationUserSettings"),i=ApplicationUserSettings.Deserialize(t);this.m_ApplicationUserSettings=new ApplicationUserSettings(i.DesktopNotifications)}!1===this.m_bPointsAndPathsLoaded&&await this.GetPlayerPointsAndPaths(),null!==this.m_ApplicationUserSettings&&!0===this.m_ApplicationUserSettings.DesktopNotifications&&this.SetupNotifications(),!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()}catch(t){LocalError(t+"; iConnErrCount = "+this.iConnErrCount),this.m_Screen.style.cursor="not-allowed",this.iConnErrCount++,setTimeout(()=>this.Connect(),4e3+this.iExponentialBackOffMillis*Math.max(this.iConnErrCount,5))}}SetupNotifications(){return window.Notification?"granted"===Notification.permission||void Notification.requestPermission().then((function(t){return"granted"===t||(LocalLog("User blocked notifications."),!1)})).catch((function(t){return LocalError(t),!1})):(LocalLog("Browser does not support notifications."),!1)}NotifyBrowser(t="Hi there!",i="How are you doing?"){return!!document.hidden&&(window.Notification?"granted"===Notification.permission?(new Notification(t,{body:i,icon:"../img/homescreen.webp"}),!0):void Notification.requestPermission().then((function(e){return"granted"===e?(new Notification(t,{body:i,icon:"../img/homescreen.webp"}),!0):(LocalLog("User blocked notifications."),!1)})).catch((function(t){return LocalError(t),!1})):(LocalLog("Browser does not support notifications."),!1))}async StartSignalRConnection(t){return null===this.g_SignalRConnection?Promise.reject(new Error("signalr conn is null")):(!1===this.m_bPointsAndPathsLoaded&&(this.m_bPointsAndPathsLoaded=!t),this.g_SignalRConnection.on("ServerToClientPoint",async function(t){if(this.g_iPlayerID!==t.iPlayerId){const i=this.m_Player2Name.innerHTML;let e=InkBallPointViewModel.Format(i,t);const s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("New Point",e)}await this.ReceivedPointProcessing(t)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPath",function(t){if(Object.prototype.hasOwnProperty.call(t,"PointsAsString")||Object.prototype.hasOwnProperty.call(t,"pointsAsString")){let i=t;if(this.g_iPlayerID!==i.iPlayerId){const t=this.m_Player2Name.innerHTML;let e=InkBallPathViewModel.Format(t,i);const s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("New Path",e)}this.ReceivedPathProcessing(i)}else{if(!Object.prototype.hasOwnProperty.call(t,"WinningPlayerId")&&!Object.prototype.hasOwnProperty.call(t,"winningPlayerId"))throw new Error("ServerToClientPath bad GetKind!");{let i=t,e=WinCommand.Format(i),s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.ReceivedWinProcessing(i),this.NotifyBrowser("We have a winner",e)}}}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerJoin",function(t){const i=t.OtherPlayerId||t.otherPlayerId;this.m_iOtherPlayerId=i;const e=PlayerJoiningCommand.Format(t);let s=document.createElement("li");s.innerHTML=`<strong class="text-primary">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(s),null!==this.m_SurrenderButton&&""!==t.OtherPlayerName&&(this.m_Player2Name.innerHTML=t.OtherPlayerName||t.otherPlayerName,this.m_SurrenderButton.value="surrender",this.ShowMobileStatus("Your move")),this.NotifyBrowser("Player joininig",e),this.m_bHandlingEvent=!1}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerSurrender",function(t){let i=PlayerSurrenderingCommand.Format(t),e=document.createElement("li");e.innerHTML=`<strong class="text-warning">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(e),this.m_bHandlingEvent=!1,i=""===i?"Game interrupted!":i,this.NotifyBrowser("Game interruption",i),alert(i),window.location.href="GamesList"}.bind(this)),this.g_SignalRConnection.on("ServerToClientPlayerWin",function(t){let i=WinCommand.Format(t),e=document.createElement("li");e.innerHTML=`<strong class="text-warning">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(e),this.ReceivedWinProcessing(t),this.NotifyBrowser("We have a winner",i)}.bind(this)),this.g_SignalRConnection.on("ServerToClientPing",function(t){const i=this.m_Player2Name.innerHTML;let e=PingCommand.Format(i,t),s=document.createElement("li");s.textContent=e,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("User Message",e)}.bind(this)),this.g_SignalRConnection.on("ServerToClientOtherPlayerDisconnected",function(t){const i={countdownSeconds:5,initialStart:!0,countdownReachedHandler:function(){let i=t,e=document.createElement("li");e.innerHTML=`<strong class="text-warning">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(e),this.NotifyBrowser("User disconnected",i),this.m_ReconnectTimer=null}.bind(this)};this.m_ReconnectTimer?this.m_ReconnectTimer.Reset(i):this.m_ReconnectTimer=new CountdownTimer(i)}.bind(this)),this.g_SignalRConnection.on("ServerToClientOtherPlayerConnected",function(t){if(this.m_ReconnectTimer)this.m_ReconnectTimer.Stop(),this.m_ReconnectTimer=null;else{let i=t,e=document.createElement("li");e.innerHTML=`<strong class="text-primary">${i}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(e),this.NotifyBrowser("User disconnected",i),this.m_ReconnectTimer=null}}.bind(this)),this.g_SignalRConnection.on("ServerToClientStopAndDraw",function(t){if(!t)return;const i=this.m_Player2Name.innerHTML;let e=StopAndDrawCommand.Format(i),s=document.createElement("li");s.innerHTML=`<strong class="text-info">${e}</strong>`,document.querySelector(this.m_sMsgListSel).appendChild(s),this.NotifyBrowser("User "+i+" started drawing new path",e)}.bind(this)),!1===this.m_bIsCPUGame&&(document.querySelector(this.m_sMsgSendButtonSel).addEventListener("click",async function(t){t.preventDefault();let i=document.querySelector(this.m_sMsgInputSel).value.trim();if(""===i)return;let e=new PingCommand(i);await this.SendAsyncData(e)}.bind(this),!1),document.querySelector(this.m_sMsgInputSel).addEventListener("keyup",function(t){t.preventDefault(),13===t.keyCode&&document.querySelector(this.m_sMsgSendButtonSel).click()}.bind(this),!1)),this.Connect())}StopSignalRConnection(){null!==this.g_SignalRConnection&&(this.g_SignalRConnection.stop(),this.m_ReconnectTimer&&this.m_ReconnectTimer.Stop(),this.m_Timer&&this.m_Timer.Stop(),LocalLog("Stopped SignalR connection"))}Debug(...t){switch(t.length){case 1:this.m_Debug.innerHTML=t[0];break;case 2:document.getElementById("debug"+t[1]).innerHTML=t[0];break;default:for(let i=0;i<t.length;i++){const e=t[i];if(e){const t=document.getElementById("debug"+i);t&&(t.innerHTML=e)}}}}DisableSelection(t){void 0!==typeof t.onselectstart?t.onselectstart=function(){return!1}:void 0!==typeof t.style.MozUserSelect?t.style.MozUserSelect="none":t.onmousedown=function(){return!1}}f_clientWidth(){return this.f_filterResults(window.innerWidth?window.innerWidth:0,document.documentElement?document.documentElement.clientWidth:0,document.body?document.body.clientWidth:0)}f_clientHeight(){return this.f_filterResults(window.innerHeight?window.innerHeight:0,document.documentElement?document.documentElement.clientHeight:0,document.body?document.body.clientHeight:0)}f_scrollLeft(){return this.f_filterResults(window.pageXOffset?window.pageXOffset:0,document.documentElement?document.documentElement.scrollLeft:0,document.body?document.body.scrollLeft:0)}f_scrollTop(){return this.f_filterResults(window.pageYOffset?window.pageYOffset:0,document.documentElement?document.documentElement.scrollTop:0,document.body?document.body.scrollTop:0)}f_filterResults(t,i,e){let s=t||0;return i&&(!s||s>i)&&(s=i),e&&(!s||s>e)?e:s}async SetPoint(t,i,e,s){if(await this.m_Points.has(i*this.m_iGridWidth+t))return;const n=t*this.m_iGridSizeX,o=i*this.m_iGridSizeY,a=$createOval(this.m_PointRadius,"true");let r;switch(a.$move(n,o,this.m_PointRadius),e){case StatusEnum.POINT_FREE_RED:r=this.COLOR_RED,a.$SetStatus(e);break;case StatusEnum.POINT_FREE_BLUE:r=this.COLOR_BLUE,a.$SetStatus(e);break;case StatusEnum.POINT_FREE:case StatusEnum.POINT_STARTING:r=this.m_sDotColor,a.$SetStatus(e);break;case StatusEnum.POINT_IN_PATH:r=this.g_iPlayerID===s?!0===this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE:!0===this.m_bIsPlayingWithRed?this.COLOR_BLUE:this.COLOR_RED,a.$SetStatus(e);break;case StatusEnum.POINT_OWNED_BY_RED:r=this.COLOR_OWNED_RED,a.$SetStatus(e);break;case StatusEnum.POINT_OWNED_BY_BLUE:r=this.COLOR_OWNED_BLUE,a.$SetStatus(e);break;default:alert("bad point")}a.$SetFillColor(r),a.$SetStrokeColor(r),await this.m_Points.set(i*this.m_iGridWidth+t,a)}GetGameStateForIndexedDb(){return{iGameID:this.g_iGameID,iPlayerID:this.g_iPlayerID,iOtherPlayerId:this.m_iOtherPlayerId,sLastMoveGameTimeStamp:this.m_sLastMoveGameTimeStamp,bPointsAndPathsLoaded:this.m_bPointsAndPathsLoaded,iGridWidth:this.m_iGridWidth,iGridSizeX:this.m_iGridSizeX,iGridSizeY:this.m_iGridSizeY}}CreateScreenPointFromIndexedDb(t,i,e,s){const n=t*this.m_iGridSizeX,o=i*this.m_iGridSizeY,a=$createOval(this.m_PointRadius,"true");let r;switch(a.$move(n,o,this.m_PointRadius),e){case StatusEnum.POINT_FREE_RED:r=this.COLOR_RED,a.$SetStatus(e);break;case StatusEnum.POINT_FREE_BLUE:r=this.COLOR_BLUE,a.$SetStatus(e);break;case StatusEnum.POINT_FREE:case StatusEnum.POINT_STARTING:r=this.m_sDotColor,a.$SetStatus(e);break;case StatusEnum.POINT_IN_PATH:r=s,a.$SetStatus(e);break;case StatusEnum.POINT_OWNED_BY_RED:r=this.COLOR_OWNED_RED,a.$SetStatus(e);break;case StatusEnum.POINT_OWNED_BY_BLUE:r=this.COLOR_OWNED_BLUE,a.$SetStatus(e);break;default:alert("bad point")}return a.$SetFillColor(r),a.$SetStrokeColor(r),a}async SetAllPoints(t){try{await this.m_Points.BeginBulkStorage();for(const s of t)await this.SetPoint(s[0],s[1],(e=s[2],e-3),(i=s[3],i-1))}finally{await this.m_Points.EndBulkStorage()}var i,e}async SetPath(t,i,e,s=0){const n=t.split(" ");let o,a,r="",l="",h=null,m=StatusEnum.POINT_STARTING;for(const t of n)h=t.split(","),o=parseInt(h[0]),a=parseInt(h[1]),h=await this.m_Points.get(a*this.m_iGridWidth+o),null!=h&&(h.$SetStatus(m),m=StatusEnum.POINT_IN_PATH),o*=this.m_iGridSizeX,a*=this.m_iGridSizeY,l+=`${r}${o},${a}`,r=" ";h=n[0].split(","),o=parseInt(h[0]),a=parseInt(h[1]),h=await this.m_Points.get(a*this.m_iGridWidth+o),null!=h&&h.$SetStatus(m),o*=this.m_iGridSizeX,a*=this.m_iGridSizeY,l+=`${r}${o},${a}`;const u=$createPolyline(3,l,e?this.m_sDotColor:i?this.COLOR_BLUE:this.COLOR_RED);u.$SetID(s),await this.m_Lines.push(u)}async CreateScreenPathFromIndexedDb(t,i,e){const s=t.split(" ");let n,o,a="",r="",l=null,h=StatusEnum.POINT_STARTING;for(const t of s)l=t.split(","),n=parseInt(l[0]),o=parseInt(l[1]),l=await this.m_Points.get(o*this.m_iGridWidth+n),null!=l&&(l.$SetStatus(h),h=StatusEnum.POINT_IN_PATH),r+=`${a}${n},${o}`,a=" ";l=s[0].split(","),n=parseInt(l[0]),o=parseInt(l[1]),l=await this.m_Points.get(o*this.m_iGridWidth+n),null!=l&&l.$SetStatus(h),r+=`${a}${n},${o}`;const m=$createPolyline(3,r,i);return m.$SetID(e),m}async SetAllPaths(t){try{await this.m_Lines.BeginBulkStorage();for(const i of t){if(i.iGameId!==this.g_iGameID)throw new Error("Bad game from path!");await this.SetPath(i.PointsAsString,this.m_bIsPlayingWithRed,i.iPlayerId===this.g_iPlayerID,i.iId)}}finally{await this.m_Lines.EndBulkStorage()}}IsPointBelongingToLine(t,i,e){for(const s of t){const t=s.split(","),n=t[0],o=t[1];if(n===i&&o===e)return!0}return!1}pnpoly(t,i,e,s,n){let o,a,r=!1;for(o=0,a=t-1;o<t;a=o++)(e[o]<=n&&n<e[a]||e[a]<=n&&n<e[o])&&s<(i[a]-i[o])*(n-e[o])/(e[a]-e[o])+i[o]&&(r=!r);return r}pnpoly2(t,i,e){const s=t.length;let n,o,a=!1;for(n=0,o=s-1;n<s;o=n++){const s=t[n],r=t[o];(s.y<=e&&e<r.y||r.y<=e&&e<s.y)&&i<(r.x-s.x)*(e-s.y)/(r.y-s.y)+s.x&&(a=!a)}return a}async SurroundOponentPoints(){const t=this.m_Line.$GetPointsArray();if(hasDuplicates(t.slice(0,-1).map(t=>t.x+"_"+t.y))||t[0].x!==t[t.length-1].x||t[0].y!==t[t.length-1].y)return{OwnedPoints:void 0,owned:"",path:"",errorDesc:"Points not unique"};let i,e,s;this.m_sDotColor===this.COLOR_RED?(i=this.COLOR_BLUE,e=StatusEnum.POINT_OWNED_BY_RED,s=this.COLOR_OWNED_RED):(i=this.COLOR_RED,e=StatusEnum.POINT_OWNED_BY_BLUE,s=this.COLOR_OWNED_BLUE);let n="",o="",a="",r=[];const l=await this.m_Points.values();for(const n of l)if(void 0!==n&&n.$GetFillColor()===i&&[StatusEnum.POINT_FREE_BLUE,StatusEnum.POINT_FREE_RED].includes(n.$GetStatus())){let{x:i,y:l}=n.$GetPosition();!1!==this.pnpoly2(t,i,l)&&(i/=this.m_iGridSizeX,l/=this.m_iGridSizeY,o+=`${a}${i},${l}`,a=" ",r.push({point:n,revertStatus:n.$GetStatus(),revertFillColor:n.$GetFillColor(),revertStrokeColor:n.$GetStrokeColor()}),n.$SetStatus(e,!0),n.$SetFillColor(s),n.$SetStrokeColor(s))}return""!==o&&(n=t.map(function(t){let i=t.x,e=t.y;return null===i||null===e?"":(i/=this.m_iGridSizeX,e/=this.m_iGridSizeY,`${i},${e}`)}.bind(this)).join(" ")),{OwnedPoints:r,owned:o,PathPoints:[],path:n,errorDesc:"No surrounded points"}}async IsPointOutsideAllPaths(t,i){const e=t*this.m_iGridSizeX,s=i*this.m_iGridSizeY,n=await this.m_Lines.all();for(const t of n){const i=t.$GetPointsArray();if(!1!==this.pnpoly2(i,e,s))return!1}return!0}CreateXMLWaitForPlayerRequest(){}CreateXMLPutPointRequest(t,i){return new InkBallPointViewModel(0,this.g_iGameID,this.g_iPlayerID,t,i,this.m_bIsPlayingWithRed?StatusEnum.POINT_FREE_RED:StatusEnum.POINT_FREE_BLUE,0)}CreateXMLPutPathRequest(t){return new InkBallPathViewModel(0,this.g_iGameID,this.g_iPlayerID,t.path,t.owned)}async SendAsyncData(t,i){switch(t.GetKind()){case CommandKindEnum.POINT:LocalLog(InkBallPointViewModel.Format("some player",t)),this.m_bHandlingEvent=!0;try{const i=await this.g_SignalRConnection.invoke("ClientToServerPoint",t);await this.ReceivedPointProcessing(i)}catch(t){LocalError(t.toString()),void 0!==i&&i()}break;case CommandKindEnum.PATH:LocalLog(InkBallPathViewModel.Format("some player",t)),this.m_bHandlingEvent=!0;try{const i=await this.g_SignalRConnection.invoke("ClientToServerPath",t);if(Object.prototype.hasOwnProperty.call(i,"WinningPlayerId")||Object.prototype.hasOwnProperty.call(i,"winningPlayerId")){let t=i;this.ReceivedWinProcessing(t)}else{if(!Object.prototype.hasOwnProperty.call(i,"PointsAsString")&&!Object.prototype.hasOwnProperty.call(i,"pointsAsString"))throw new Error("ClientToServerPath bad GetKind!");{let t=i;await this.ReceivedPathProcessing(t)}}}catch(t){LocalError(t.toString()),void 0!==i&&i()}break;case CommandKindEnum.PING:try{await this.g_SignalRConnection.invoke("ClientToServerPing",t),document.querySelector(this.m_sMsgInputSel).value="",document.querySelector(this.m_sMsgSendButtonSel).disabled="disabled"}catch(t){LocalError(t.toString())}break;case CommandKindEnum.STOP_AND_DRAW:try{await this.g_SignalRConnection.invoke("ClientToServerStopAndDraw",t),this.m_bDrawLines=!0,this.m_iLastX=this.m_iLastY=-1,this.m_Line=null,this.m_bIsPlayerActive=!0,this.m_StopAndDraw.disabled="disabled"}catch(t){LocalError(t.toString())}break;default:LocalError("unknown object")}}CountDownReachedHandler(t){t&&(t.innerHTML=""),this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled",this.m_Timer=null,this.m_bIsPlayerActive=!1}async ReceivedPointProcessing(t){const i=t.iX,e=t.iY,s=void 0!==t.Status?t.Status:t.status;this.m_sLastMoveGameTimeStamp=(void 0!==t.TimeStamp?t.TimeStamp:new Date(t.timeStamp)).toISOString(),await this.SetPoint(i,e,s,t.iPlayerId),this.g_iPlayerID!==t.iPlayerId?(this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&await this.OnCancelClick(),this.m_StopAndDraw.disabled="",this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)):(this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_CancelPath.disabled="disabled",this.m_StopAndDraw.disabled="",this.m_StopAndDraw.value="Stop and Draw",this.m_Timer?this.m_Timer.Reset(this.m_TimerOpts):this.m_Timer=new CountdownTimer(this.m_TimerOpts),!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()),this.m_bHandlingEvent=!1}async ReceivedPathProcessing(t){if(this.m_sLastMoveGameTimeStamp=(void 0!==t.TimeStamp?t.TimeStamp:new Date(t.timeStamp)).toISOString(),this.g_iPlayerID!==t.iPlayerId){const i=t.PointsAsString||t.pointsAsString,e=t.OwnedPointsAsString||t.ownedPointsAsString;await this.SetPath(i,this.m_sDotColor===this.COLOR_RED,!1,t.iId);const s=e.split(" "),n=this.m_sDotColor===this.COLOR_RED?StatusEnum.POINT_OWNED_BY_RED:StatusEnum.POINT_OWNED_BY_BLUE,o=this.m_sDotColor===this.COLOR_RED?this.COLOR_OWNED_RED:this.COLOR_OWNED_BLUE;for(const t of s){let i=t.split(",");const e=parseInt(i[0]),s=parseInt(i[1]);i=await this.m_Points.get(s*this.m_iGridWidth+e),void 0!==i&&(i.$SetStatus(n),i.$SetFillColor(o),i.$SetStrokeColor(o))}this.m_bIsPlayerActive=!0,this.ShowMobileStatus("Oponent has moved, your turn"),this.m_Screen.style.cursor="crosshair",null!==this.m_Line&&await this.OnCancelClick(),this.m_StopAndDraw.disabled=""}else{const i=this.m_Line.$GetPointsArray();let e=i[0].x,s=i[0].y;e/=this.m_iGridSizeX,s/=this.m_iGridSizeY;const n=await this.m_Points.get(s*this.m_iGridWidth+e);void 0!==n&&n.$SetStatus(StatusEnum.POINT_IN_PATH),this.m_Line.$SetWidthAndColor(3,this.m_sDotColor),this.m_Line.$SetID(t.iId),await this.m_Lines.push(this.m_Line),this.m_iLastX=this.m_iLastY=-1,this.m_Line=null,this.m_bIsPlayerActive=!1,this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait",this.m_StopAndDraw.disabled=this.m_CancelPath.disabled="disabled",!0!==this.m_bIsCPUGame||this.m_bIsPlayerActive||this.StartCPUCalculation()}this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line",this.m_bHandlingEvent=!1,this.m_Timer&&(this.m_Timer.Stop(),this.m_Timer=null)}ReceivedWinProcessing(t){this.ShowMobileStatus("Win situation"),this.m_bHandlingEvent=!1;let i=WinCommand.Format(t);const e=void 0!==t.Status?t.Status:t.status,s=t.WinningPlayerId||t.winningPlayerId;((e===WinStatusEnum.RED_WINS||e===WinStatusEnum.GREEN_WINS)&&s>0||e===WinStatusEnum.DRAW_WIN)&&(alert(""===i?"Game won!":i),window.location.href="GamesList")}Check4Win(t,i,e,s){let n,o;switch(this.GameType){case GameTypeEnum.FIRST_CAPTURE:return t.length>0?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:i.length>0?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:WinStatusEnum.NO_WIN;case GameTypeEnum.FIRST_5_CAPTURES:return n=this.m_bIsPlayingWithRed?StatusEnum.POINT_OWNED_BY_BLUE:StatusEnum.POINT_OWNED_BY_RED,o=s.filter((function(t){return null!==t.iEnclosingPathId&&t.$GetStatus()===n})).length,o>=5?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:(n=this.m_bIsPlayingWithRed?StatusEnum.POINT_OWNED_BY_RED:StatusEnum.POINT_OWNED_BY_BLUE,o=e.filter((function(t){return null!==t.iEnclosingPathId&&t.$GetStatus()===n})).length,o>=5?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:WinStatusEnum.NO_WIN);case GameTypeEnum.FIRST_5_PATHS:return i.length>=5?this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS:t.length>=5?this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS:WinStatusEnum.NO_WIN;case GameTypeEnum.FIRST_5_ADVANTAGE_PATHS:{const e=t.length-i.length;if(e>=5)return this.m_bIsPlayingWithRed?WinStatusEnum.RED_WINS:WinStatusEnum.GREEN_WINS;if(e<=-5)return this.m_bIsPlayingWithRed?WinStatusEnum.GREEN_WINS:WinStatusEnum.RED_WINS}return WinStatusEnum.NO_WIN;default:throw new Error("Wrong game type")}}ShowMobileStatus(t=""){"???"===this.m_Player2Name.innerHTML?this.m_bIsPlayerActive?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayerActive?this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_RED:this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_bIsPlayingWithRed?this.m_GameStatus.style.color=this.COLOR_BLUE:this.m_GameStatus.style.color=this.COLOR_RED,null!==t&&""!==t?this.Debug(t,0):this.Debug("",0)}async OnMouseMove(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return void(this.iConnErrCount<=0&&!this.m_bIsPlayerActive&&(this.m_Screen.style.cursor="wait"));let i=(t?t.clientX:window.event.clientX)-this.m_Screen.offsetLeft+this.f_scrollLeft()+.5*this.m_iGridSizeX,e=(t?t.clientY:window.event.clientY)-this.m_Screen.offsetTop+this.f_scrollTop()+.5*this.m_iGridSizeY;i=parseInt(i/this.m_iGridSizeX),e=parseInt(e/this.m_iGridSizeY);let s=i*this.m_iGridSizeX,n=e*this.m_iGridSizeY;if(this.m_MouseCursorOval.$move(s,n,this.m_PointRadius),this.m_MouseCursorOval.$Show(),this.Debug(`[${i},${e}]`,1),this.m_bDrawLines){if(null!==this.m_Line?this.m_Screen.style.cursor="move":this.m_Screen.style.cursor="crosshair",!0===this.m_bMouseDown&&(this.m_iLastX!==i||this.m_iLastY!==e)&&Math.abs(parseInt(this.m_iLastX-i))<=1&&Math.abs(parseInt(this.m_iLastY-e))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),o=await this.m_Points.get(e*this.m_iGridWidth+i);if(this.m_CancelPath.disabled=this.m_Line.$GetLength()>=2?"":"disabled",void 0!==t&&void 0!==o&&t.$GetFillColor()===this.m_sDotColor&&o.$GetFillColor()===this.m_sDotColor){const a=this.m_Line.$ContainsPoint(s,n);if(a<1&&o.$GetStatus()!==StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(s,n,this.m_iGridSizeX,this.m_iGridSizeY))o.$SetStatus(StatusEnum.POINT_IN_PATH,!0),this.m_iLastX=i,this.m_iLastY=e;else if(1===a&&o.$GetStatus()===StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(s,n,this.m_iGridSizeX,this.m_iGridSizeY)){const t=await this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPathRequest(t),async()=>{await this.OnCancelClick(),t.OwnedPoints.forEach(t=>{const i=t.point,e=t.revertFillColor,s=t.revertStrokeColor;i.$RevertOldStatus(),i.$SetFillColor(e),i.$SetStrokeColor(s)}),this.m_bHandlingEvent=!1})):this.Debug((t.errorDesc?t.errorDesc:"Wrong path")+", cancell it or refresh page",0),this.m_iLastX=i,this.m_iLastY=e}else a>=1&&t.$GetStatus()===StatusEnum.POINT_IN_PATH&&this.m_Line.$GetPointsString().endsWith(`${this.m_iLastX*this.m_iGridSizeX},${this.m_iLastY*this.m_iGridSizeY}`)&&(this.m_Line.$GetLength()>2?(t.$RevertOldStatus(),this.m_Line.$RemoveLastPoint(),this.m_iLastX=i,this.m_iLastY=e):await this.OnCancelClick())}}else{let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),o=await this.m_Points.get(e*this.m_iGridWidth+i);if(void 0!==t&&void 0!==o&&t.$GetFillColor()===this.m_sDotColor&&o.$GetFillColor()===this.m_sDotColor){const a=this.m_iLastX*this.m_iGridSizeX,r=this.m_iLastY*this.m_iGridSizeY;this.m_Line=$createPolyline(6,a+","+r+" "+s+","+n,this.DRAWING_PATH_COLOR),this.m_CancelPath.disabled="",t.$SetStatus(StatusEnum.POINT_STARTING,!0),o.$SetStatus(StatusEnum.POINT_IN_PATH,!0),this.m_iLastX=i,this.m_iLastY=e}}}else this.m_Screen.style.cursor="crosshair"}async OnMouseDown(t){if(!this.m_bIsPlayerActive||"???"===this.m_Player2Name.innerHTML||!0===this.m_bHandlingEvent||this.iConnErrCount>0)return;let i=(t?t.clientX:window.event.clientX)-this.m_Screen.offsetLeft+this.f_scrollLeft()+.5*this.m_iGridSizeX,e=(t?t.clientY:window.event.clientY)-this.m_Screen.offsetTop+this.f_scrollTop()+.5*this.m_iGridSizeY;if(i=this.m_iMouseX=parseInt(i/this.m_iGridSizeX),e=this.m_iMouseY=parseInt(e/this.m_iGridSizeY),this.m_bMouseDown=!0,this.m_bDrawLines){if((this.m_iLastX!==i||this.m_iLastY!==e)&&Math.abs(parseInt(this.m_iLastX-i))<=1&&Math.abs(parseInt(this.m_iLastY-e))<=1&&this.m_iLastX>=0&&this.m_iLastY>=0)if(null!==this.m_Line){let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),s=await this.m_Points.get(e*this.m_iGridWidth+i);if(this.m_CancelPath.disabled=this.m_Line.$GetLength()>=2?"":"disabled",void 0!==t&&void 0!==s&&t.$GetFillColor()===this.m_sDotColor&&s.$GetFillColor()===this.m_sDotColor){const n=i*this.m_iGridSizeX,o=e*this.m_iGridSizeY,a=this.m_Line.$ContainsPoint(n,o);if(a<1&&s.$GetStatus()!==StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(n,o,this.m_iGridSizeX,this.m_iGridSizeY))s.$SetStatus(StatusEnum.POINT_IN_PATH,!0),this.m_iLastX=i,this.m_iLastY=e;else if(1===a&&s.$GetStatus()===StatusEnum.POINT_STARTING&&!0===this.m_Line.$AppendPoints(n,o,this.m_iGridSizeX,this.m_iGridSizeY)){const t=await this.SurroundOponentPoints();t.owned.length>0?(this.Debug("Closing path",0),this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPathRequest(t),async()=>{await this.OnCancelClick(),t.OwnedPoints.forEach(t=>{const i=t.point,e=t.revertFillColor,s=t.revertStrokeColor;i.$RevertOldStatus(),i.$SetFillColor(e),i.$SetStrokeColor(s)}),this.m_bMouseDown=!1,this.m_bHandlingEvent=!1})):this.Debug((t.errorDesc?t.errorDesc:"Wrong path")+", cancell it or refresh page",0),this.m_iLastX=i,this.m_iLastY=e}else a>=1&&t.$GetStatus()===StatusEnum.POINT_IN_PATH&&this.m_Line.$GetPointsString().endsWith(`${this.m_iLastX*this.m_iGridSizeX},${this.m_iLastY*this.m_iGridSizeY}`)&&(this.m_Line.$GetLength()>2?(t.$RevertOldStatus(),this.m_Line.$RemoveLastPoint(),this.m_iLastX=i,this.m_iLastY=e):await this.OnCancelClick())}}else{let t=await this.m_Points.get(this.m_iLastY*this.m_iGridWidth+this.m_iLastX),s=await this.m_Points.get(e*this.m_iGridWidth+i);if(void 0!==t&&void 0!==s&&t.$GetFillColor()===this.m_sDotColor&&s.$GetFillColor()===this.m_sDotColor){const n=this.m_iLastX*this.m_iGridSizeX,o=this.m_iLastY*this.m_iGridSizeY,a=i*this.m_iGridSizeX,r=e*this.m_iGridSizeY;this.m_Line=$createPolyline(6,n+","+o+" "+a+","+r,this.DRAWING_PATH_COLOR),this.m_CancelPath.disabled="",t.$SetStatus(StatusEnum.POINT_STARTING,!0),s.$SetStatus(StatusEnum.POINT_IN_PATH,!0)}this.m_iLastX=i,this.m_iLastY=e}else if(this.m_iLastX<0||this.m_iLastY<0){let t=await this.m_Points.get(e*this.m_iGridWidth+i);void 0!==t&&t.$GetFillColor()===this.m_sDotColor&&(this.m_iLastX=i,this.m_iLastY=e)}}else{this.m_iLastX=i,this.m_iLastY=e;const t=i,s=e;if(i=t*this.m_iGridSizeX,e=s*this.m_iGridSizeY,void 0!==await this.m_Points.get(s*this.m_iGridWidth+t))return void this.Debug("Wrong point - already existing",0);if(!await this.IsPointOutsideAllPaths(t,s))return void this.Debug("Wrong point, Point is not outside all paths",0);this.rAF_FrameID=null,await this.SendAsyncData(this.CreateXMLPutPointRequest(t,s),()=>{this.m_bMouseDown=!1,this.m_bHandlingEvent=!1})}}OnMouseUp(){this.m_bMouseDown=!1}OnMouseLeave(){this.m_MouseCursorOval.$Hide()}async OnStopAndDraw(t){if(this.m_Timer)null===this.m_Line&&await this.SendAsyncData(new StopAndDrawCommand);else{null!==this.m_Line&&await this.OnCancelClick(),this.m_bDrawLines=!this.m_bDrawLines;const i=t.target;this.m_bDrawLines?i.value="Draw dot":i.value="Draw line",this.m_iLastX=this.m_iLastY=-1,this.m_Line=null}}async OnCancelClick(){if(this.m_bDrawLines){if(null!==this.m_Line){const t=this.m_Line.$GetPointsArray();this.m_CancelPath.disabled="disabled";for(const i of t){let t=i.x,e=i.y;if(null===t||null===e)continue;t/=this.m_iGridSizeX,e/=this.m_iGridSizeY;const s=await this.m_Points.get(e*this.m_iGridWidth+t);void 0!==s&&s.$RevertOldStatus()}$RemovePolyline(this.m_Line),this.m_Line=null}this.m_iLastX=this.m_iLastY=-1,this.m_Timer&&(this.m_StopAndDraw.disabled="disabled"),this.Debug("",0)}}CountPointsDebug(t){let i="";[{query:"circle:not([z-index])",display:"circles: %s, "},{query:"polyline",display:"lines: %s, "},{query:"circle[data-status='2']",display:"intercepted(P1:%s, "},{query:"circle[data-status='3']",display:"P2:%s)"}].forEach((function(t){const e=document.querySelectorAll(t.query);i+=t.display.replace("%s",e.length)})),document.querySelector(t).innerHTML="SVGs by tags: "+i}async OnTestBuildCurrentGraph(t){t.preventDefault(),LocalLog(await this.BuildGraph())}async OnTestConcaveman(t){t.preventDefault();const i=(await this.BuildGraph()).vertices.map(function(t){const i=t.$GetPosition();return[i.x/this.m_iGridSizeX,i.y/this.m_iGridSizeX]}.bind(this));if(i&&i.length>0){const t=concavemanBundle.concaveman(i,2,0);$createPolyline(6,t.map(function(t){return parseInt(t[0])*this.m_iGridSizeX+","+parseInt(t[1])*this.m_iGridSizeY}.bind(this)).join(" "),"green"),LocalLog("convex_hull = "+t);const e=t.map(function(t){return{x:t[0],y:t[1]}}.bind(this)),s=sortPointsClockwise(e),n=RandomColor();for(const t of s){const{x:i,y:e}=t,s=i*this.m_iGridSizeX,o=e*this.m_iGridSizeY,a=document.querySelector(`svg > circle[cx="${s}"][cy="${o}"]`);a&&(a.$SetStrokeColor(n),a.$SetFillColor(n),a.$SetZIndex(100),a.setAttribute("r","6")),await Sleep(50)}}}async OnTestMarkAllCycles(t){t.preventDefault(),LocalLog(await this.MarkAllCycles(await this.BuildGraph({visuals:!0})))}async OnTestGroupPoints(t){t.preventDefault(),$createPolyline(6,(await this.GroupPointsRecurse([],await this.m_Points.get(9*this.m_iGridWidth+26))).map((function(t){const i=t.$GetPosition();return i.x+","+i.y})).join(" "),"green"),LocalLog("game.lastCycle = "+this.lastCycle)}async OnTestFindFullSurroundedPoints(t){t.preventDefault();const i=this.COLOR_RED,e=RandomColor(),s=await this.m_Points.values();for(const t of s)if(void 0!==t&&t.$GetFillColor()===i&&StatusEnum.POINT_FREE_RED===t.$GetStatus()){const{x:i,y:s}=t.$GetPosition(),n=i/this.m_iGridSizeX,o=s/this.m_iGridSizeY;if(!1===await this.IsPointOutsideAllPaths(n,o))continue;const a=document.querySelector(`svg > circle[cx="${i}"][cy="${s}"]`);a&&(a.$SetStrokeColor(e),a.$SetFillColor(e),a.setAttribute("r","6"))}}async PrepareDrawing(t,i,e,s,n,o,a,r,l,h,m,u,c,d=125){if(this.m_bIsWon=!1,this.m_iDelayBetweenMultiCaptures=4e3,this.m_iTooLong2Duration=d,this.m_Timer=null,this.m_WaitStartTime=null,this.m_iSlowdownLevel=0,this.m_iLastX=-1,this.m_iLastY=-1,this.m_iMouseX=0,this.m_iMouseY=0,this.m_iPosX=0,this.m_iPosY=0,this.m_bMouseDown=!1,this.m_bHandlingEvent=!1,this.m_bDrawLines=!1,this.m_sMessage="",this.m_sDotColor=this.m_bIsPlayingWithRed?this.COLOR_RED:this.COLOR_BLUE,this.m_Line=null,this.m_Debug=document.getElementById("debug0"),this.m_Player2Name=document.querySelector(i),this.m_GameStatus=document.querySelector(e),this.m_SurrenderButton=document.querySelector(s),this.m_CancelPath=document.querySelector(n),this.m_StopAndDraw=document.querySelector(a),this.m_sMsgInputSel=r,this.m_sMsgListSel=l,this.m_sMsgSendButtonSel=h,this.m_Screen=document.querySelector(t),!this.m_Screen)return void alert("no board");this.m_iPosX=this.m_Screen.offsetLeft,this.m_iPosY=this.m_Screen.offsetTop;const _=Array.from(this.m_Screen.classList).find(t=>t.startsWith("boardsize")).split("-")[1].split("x");this.m_BoardSize={width:parseInt(_[0]),height:parseInt(_[1])};let S=this.m_Screen.clientWidth,P=this.m_Screen.clientHeight,g=null;P<=0&&(P=16*this.m_BoardSize.height,this.m_Screen.style.height=P+"px",g="100%"),this.m_iGridSizeX=parseInt(Math.ceil(S/this.m_BoardSize.width)),this.m_iGridSizeY=parseInt(Math.ceil(P/this.m_BoardSize.height)),this.m_iGridWidth=parseInt(Math.ceil(S/this.m_iGridSizeX)),this.m_iGridHeight=parseInt(Math.ceil(P/this.m_iGridSizeY)),this.m_sLastMoveGameTimeStamp=m,this.rAF_StartTimestamp=null,this.rAF_FrameID=null,this.lastCycle=[],$createSVGVML(this.m_Screen,g,g,!0),this.DisableSelection(this.m_Screen);const p=new GameStateStore(u,this.CreateScreenPointFromIndexedDb.bind(this),this.CreateScreenPathFromIndexedDb.bind(this),this.GetGameStateForIndexedDb.bind(this));if(this.m_Lines=p.GetPathStore(),this.m_Points=p.GetPointStore(),this.m_bPointsAndPathsLoaded=await p.PrepareStore(this),!1===this.m_bViewOnly){if(null===this.m_MouseCursorOval&&(this.m_MouseCursorOval=$createOval(this.m_PointRadius,"true"),this.m_MouseCursorOval.$SetFillColor(this.m_sDotColor),this.m_MouseCursorOval.$SetStrokeColor(this.m_sDotColor),this.m_MouseCursorOval.$SetZIndex(-1),this.m_MouseCursorOval.$Hide()),this.m_Screen.onmousedown=this.OnMouseDown.bind(this),this.m_Screen.onmousemove=this.OnMouseMove.bind(this),this.m_Screen.onmouseup=this.OnMouseUp.bind(this),this.m_Screen.onmouseleave=this.OnMouseLeave.bind(this),this.m_CancelPath.onclick=this.OnCancelClick.bind(this),this.m_StopAndDraw.onclick=this.OnStopAndDraw.bind(this),!1===this.m_bIsCPUGame)document.querySelector(this.m_sMsgInputSel).disabled="",document.getElementById("testArea").textContent="";else{let t=0;c.length>t&&(document.querySelector(c[t++]).onclick=this.OnTestBuildCurrentGraph.bind(this)),c.length>t&&(document.querySelector(c[t++]).onclick=this.OnTestConcaveman.bind(this)),c.length>t&&(document.querySelector(c[t++]).onclick=this.OnTestMarkAllCycles.bind(this)),c.length>t&&(document.querySelector(c[t++]).onclick=this.OnTestGroupPoints.bind(this)),c.length>t&&(document.querySelector(c[t++]).onclick=this.OnTestFindFullSurroundedPoints.bind(this));const i=document.getElementById("chatSection");for(;i.lastElementChild;)i.removeChild(i.lastElementChild)}this.m_SurrenderButton.disabled="","???"===this.m_Player2Name.innerHTML?(this.ShowMobileStatus("Waiting for other player to connect"),this.m_Screen.style.cursor="wait"):(this.m_SurrenderButton.value="surrender",this.m_bIsPlayerActive?(this.ShowMobileStatus("Your move"),this.m_Screen.style.cursor="crosshair",this.m_StopAndDraw.disabled=""):(this.ShowMobileStatus("Waiting for oponent move"),this.m_Screen.style.cursor="wait"),this.m_bDrawLines?this.m_StopAndDraw.value="Draw dot":this.m_StopAndDraw.value="Draw line")}else document.querySelector(o).innerHTML="back to Game List"}GetRandomInt(t,i){return t=Math.ceil(t),i=Math.floor(i),Math.floor(Math.random()*(i-t))+t}async FindRandomCPUPoint(){let t,i,e=100;for(;--e>0&&(t=this.GetRandomInt(0,this.m_iGridWidth),i=this.GetRandomInt(0,this.m_iGridHeight),await this.m_Points.has(i*this.m_iGridWidth+t)||!await this.IsPointOutsideAllPaths(t,i)););return new InkBallPointViewModel(0,this.g_iGameID,-1,t,i,StatusEnum.POINT_FREE_BLUE,0)}async CalculateCPUCentroid(){let t,i,e=0,s=0,n=0;const o=this.COLOR_RED,a=await this.m_Points.values();for(const r of a)if(void 0!==r&&r.$GetFillColor()===o&&r.$GetStatus()===StatusEnum.POINT_FREE_RED){const o=r.$GetPosition();t=o.x,i=o.y,t/=this.m_iGridSizeX,i/=this.m_iGridSizeY,e+=t,s+=i,n++}if(n<=0)return null;t=e/n,i=s/n,t*=this.m_iGridSizeX,i*=this.m_iGridSizeY;const r=parseInt(t/this.m_iGridSizeX),l=parseInt(i/this.m_iGridSizeY);t=r,i=l;let h=20;for(;--h>0&&(this.m_Points.has(i*this.m_iGridWidth+t)||!await this.IsPointOutsideAllPaths(t,i));)t=this.GetRandomInt(r-2,r+3),i=this.GetRandomInt(l-2,l+3);if(h<=0)return null;return new InkBallPointViewModel(0,this.g_iGameID,-1,t,i,StatusEnum.POINT_FREE_BLUE,0)}async BuildGraph({freeStat:t=StatusEnum.POINT_FREE_BLUE,fillCol:i=this.COLOR_BLUE,visuals:e=!0}={}){const s=[],n=new Map,o=function(t,e){const s=e.$GetStatus();return!(!t.includes(s)||e.$GetFillColor()!==i)},a=async function(i,a,r,l,h,m,u){if(a>=0&&a<this.m_iGridWidth&&r>=0&&r<this.m_iGridHeight){const c=await this.m_Points.get(r*this.m_iGridWidth+a);if(c&&!0===o([t],c)){const t=c.$GetPosition();if(!1===n.has(`${m},${u}_${a},${r}`)&&!1===n.has(`${a},${r}_${m},${u}`)){const o={from:i,to:c};if(!0===e){const i=$createLine(3,"rgba(0, 255, 0, 0.3)");i.$move(l,h,t.x,t.y),o.line=i}if(n.set(`${m},${u}_${a},${r}`,o),!1===s.includes(i))i.adjacents=[c],s.push(i);else{s.find(t=>t===i).adjacents.push(c)}if(!1===s.includes(c))c.adjacents=[i],s.push(c);else{s.find(t=>t===c).adjacents.push(i)}}}}}.bind(this),r=await this.m_Points.values();for(const i of r)if(i&&!0===o([t,StatusEnum.POINT_STARTING,StatusEnum.POINT_IN_PATH],i)){const{x:t,y:e}=i.$GetPosition(),s=t/this.m_iGridSizeX,n=e/this.m_iGridSizeY;await a(i,s+1,n,t,e,s,n),await a(i,s-1,n,t,e,s,n),await a(i,s,n-1,t,e,s,n),await a(i,s,n+1,t,e,s,n),await a(i,s-1,n-1,t,e,s,n),await a(i,s+1,n-1,t,e,s,n),await a(i,s-1,n+1,t,e,s,n),await a(i,s+1,n+1,t,e,s,n)}return{vertices:s,edges:Array.from(n.values())}}IsGraphCyclic(t){const i=t.vertices,e=function(t,i){t.visited=!0;for(let s of t.adjacents)if(s.visited){if(s!==i){const{x:t,y:i}=s.$GetPosition();return LocalLog(`cycle found at ${t/this.m_iGridSizeX},${i/this.m_iGridSizeY}`),!0}}else if(e(s,t))return!0;return!1}.bind(this);for(let t=0;t<i.length;t++)i[t].visited=!1;for(let t=0;t<i.length;t++)if(!i[t].visited&&e(i[t],-1))return!0;return!1}async MarkAllCycles(t){const i=t.vertices,e=i.length;let s=new Array(e);const n=new Array(e),o=new Array(e),a=new Array(e);for(let t=0;t<e;t++)n[t]=[],s[t]=[];const r=async function(t,e){if(2===o[t])return;if(1===o[t]){h++;let i=e;for(n[i].push(h);i!==t;)i=a[i],n[i].push(h);return}a[t]=e,o[t]=1;const s=i[t];if(s){s.$SetStrokeColor("black"),s.$SetFillColor("black"),await Sleep(10);for(const e of s.adjacents){const s=i.indexOf(e);s!==a[t]&&await r(s,t)}}o[t]=2},l=async function(t,e){for(let i=0;i<t;i++){const t=e[i];if(void 0!==t&&t.length>0)for(let e=0;e<t.length;e++){const n=s[t[e]];void 0!==n&&n.push(i)}}s=s.filter(t=>t.length>=4).sort((t,i)=>i.length-t.length);const n=[],o=this.COLOR_RED,a=await this.m_Points.values();for(const t of a)if(void 0!==t&&t.$GetFillColor()===o&&StatusEnum.POINT_FREE_RED===t.$GetStatus()){const{x:i,y:e}=t.$GetPosition(),s=i/this.m_iGridSizeX,o=e/this.m_iGridSizeY;if(!1===await this.IsPointOutsideAllPaths(s,o))continue;document.querySelector(`svg > circle[cx="${i}"][cy="${e}"]`)&&n.push({x:s,y:o})}const r=[];for(let t=0;t<=h;t++){const e=s[t];if(e&&e.length>0){let s=`Cycle Number ${t}: `,o=[];const a="var(--indigo)",l=e.map(function(t){const e=i[t].$GetPosition();return{x:e.x/this.m_iGridSizeX,y:e.y/this.m_iGridSizeY}}.bind(this)),h=sortPointsClockwise(l);for(const t of h){const{x:i,y:e}=t,n=document.querySelector(`svg > circle[cx="${i*this.m_iGridSizeX}"][cy="${e*this.m_iGridSizeY}"]`);n&&(s+=`(${i},${e})`,n.$SetStrokeColor(a),n.$SetFillColor(a),n.setAttribute("r","6")),await Sleep(50)}let m="",u="";for(const t of n)if(!1!==this.pnpoly2(h,t.x,t.y)){m+=`${u}(${t.x},${t.y})`;const i=document.querySelector(`svg > circle[cx="${t.x*this.m_iGridSizeX}"][cy="${t.y*this.m_iGridSizeY}"]`);i&&(i.$SetStrokeColor("var(--yellow)"),i.$SetFillColor("var(--yellow)"),i.setAttribute("r","6")),u=","}o.unshift(s),r.push(o),LocalLog(s+(""!==m?" possible intercepts: "+m:""));Array.from(document.querySelectorAll(`svg > circle[fill="${a}"][r="6"]`)).forEach(t=>{t.$SetStrokeColor(this.COLOR_BLUE),t.$SetFillColor(this.COLOR_BLUE),t.setAttribute("r","4")})}}return r}.bind(this);let h=0,m=e;for(let t=0;t<e;t++)await r(t+1,t);return await l(m,n)}async GroupPointsRecurse(t,i){if(void 0===i||t.includes(i))return t;if(!1===[StatusEnum.POINT_FREE_BLUE,StatusEnum.POINT_STARTING,StatusEnum.POINT_IN_PATH].includes(i.$GetStatus())||i.$GetFillColor()!==this.COLOR_BLUE)return t;let{x:e,y:s}=i.$GetPosition();e/=this.m_iGridSizeX,s/=this.m_iGridSizeY;let n,o,a=null;if(t.length>0){a=t[t.length-1];const r=a.$GetPosition();if(n=r.x,o=r.y,n/=this.m_iGridSizeX,o/=this.m_iGridSizeY,!(Math.abs(parseInt(n-e))<=1&&Math.abs(parseInt(o-s))<=1))return t;t.push(i)}else t.push(i);if(t.length>2&&null!==a){const i=t[0].$GetPosition();i.x/=this.m_iGridSizeX,i.y/=this.m_iGridSizeY,a=t[t.length-1];const e=a.$GetPosition();if(n=e.x,o=e.y,n/=this.m_iGridSizeX,o/=this.m_iGridSizeY,Math.abs(parseInt(n-i.x))<=1&&Math.abs(parseInt(o-i.y))<=1){const i=[];t.forEach(t=>i.push(t)),this.lastCycle.push(i)}}const r=await this.m_Points.get(s*this.m_iGridWidth+e+1),l=await this.m_Points.get(s*this.m_iGridWidth+e-1),h=await this.m_Points.get((s-1)*this.m_iGridWidth+e),m=await this.m_Points.get((s+1)*this.m_iGridWidth+e),u=await this.m_Points.get((s-1)*this.m_iGridWidth+e-1),c=await this.m_Points.get((s-1)*this.m_iGridWidth+e+1),d=await this.m_Points.get((s+1)*this.m_iGridWidth+e-1),_=await this.m_Points.get((s+1)*this.m_iGridWidth+e+1);return r&&await this.GroupPointsRecurse(t,r),l&&await this.GroupPointsRecurse(t,l),h&&await this.GroupPointsRecurse(t,h),m&&await this.GroupPointsRecurse(t,m),u&&await this.GroupPointsRecurse(t,u),c&&await this.GroupPointsRecurse(t,c),d&&await this.GroupPointsRecurse(t,d),_&&await this.GroupPointsRecurse(t,_),t}async GroupPointsIterative({g:t=null}={}){if(!t)return;const i=t.vertices,e=[];let s;for(const t of i){s=t;const i=[];(await this.GroupPointsRecurse(i,s)).length>0&&this.lastCycle.length>0&&(e.push(this.lastCycle),this.lastCycle=[])}return e}async rAFCallBack(t){null===this.rAF_StartTimestamp&&(this.rAF_StartTimestamp=t);const i=t-this.rAF_StartTimestamp;let e=null;const s=await this.CalculateCPUCentroid();e=null!==s?s:await this.FindRandomCPUPoint(),null===e?i<2e3&&(this.rAF_FrameID=window.requestAnimationFrame(this.rAFCallBack.bind(this))):await this.SendAsyncData(e,()=>{this.m_bMouseDown=!1,this.m_bHandlingEvent=!1})}StartCPUCalculation(){null===this.rAF_FrameID&&(this.rAF_FrameID=window.requestAnimationFrame(this.rAFCallBack.bind(this)))}}window.addEventListener("load",(async function(){const t=gameOptions.inkBallHubName,i=gameOptions.iGameID;document.getElementById("gameID").innerHTML=i,document.querySelector(".container.inkgame form > input[type='hidden'][name='GameID']").value=i;const e=gameOptions.iPlayerID,s=gameOptions.iOtherPlayerID;document.getElementById("playerID").innerHTML=e;const n=gameOptions.bPlayingWithRed,o=gameOptions.bPlayerActive,a=gameOptions.gameType,r=gameOptions.protocol,l=gameOptions.servTimeoutMillis,h=gameOptions.isReadonly,m=gameOptions.pathAfterPointDrawAllowanceSecAmount,u=new Date(gameOptions.sLastMoveGameTimeStamp).toISOString();await importAllModulesAsync(gameOptions);const c=new InkBallGame(i,e,s,t,signalR.LogLevel.Warning,r,signalR.HttpTransportType.None,l,a,n,o,h,m);await c.PrepareDrawing("#screen","#Player2Name","#gameStatus","#SurrenderButton","#CancelPath","#Pause","#StopAndDraw","#messageInput","#messagesList","#sendButton",u,null===gameOptions.PointsAsJavaScriptArray,["#TestBuildGraph","#TestConcaveman","#TestMarkAllCycles","#TestGroupPoints","#TestFindFullSurroundedPoints"]),null!==gameOptions.PointsAsJavaScriptArray?(await c.StartSignalRConnection(!1),await c.SetAllPoints(gameOptions.PointsAsJavaScriptArray),await c.SetAllPaths(gameOptions.PathsAsJavaScriptArray)):await c.StartSignalRConnection(!0),document.getElementsByClassName("whichColor")[0].style.color=n?"red":"blue",c.CountPointsDebug("#debug2"),window.game=c})),window.addEventListener("beforeunload",(function(){window.game&&window.game.StopSignalRConnection()}));