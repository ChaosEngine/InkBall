{"version":3,"file":"AIWorker.Bundle.js","mappings":"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","sources":["webpack:///./node_modules/concaveman/index.js","webpack:///./node_modules/javascript-astar/astar.js","webpack:///./node_modules/point-in-polygon/flat.js","webpack:///./node_modules/point-in-polygon/index.js","webpack:///./node_modules/point-in-polygon/nested.js","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./node_modules/robust-predicates/umd/orient2d.min.js","webpack:///./node_modules/tinyqueue/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../InkBall/src/InkBall.Module/IBwwwroot/js/shared.js","webpack:///../InkBall/src/InkBall.Module/IBwwwroot/js/AISource.js","webpack:///../InkBall/src/InkBall.Module/IBwwwroot/js/AIWorker.js"],"sourcesContent":["'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nvar orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\n// Fix for require issue in webpack https://github.com/mapbox/concaveman/issues/18\nif (Queue.default) {\n    Queue = Queue.default;\n}\n\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = new RBush(16);\n    tree.toBBox = function (a) {\n        return {\n            minX: a[0],\n            minY: a[1],\n            maxX: a[0],\n            maxY: a[1]\n        };\n    };\n    tree.compareMinX = function (a, b) { return a[0] - b[0]; };\n    tree.compareMinY = function (a, b) { return a[1] - b[1]; };\n\n    tree.load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = new RBush(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new Queue([], compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\nfunction cross(p1, p2, p3) {\n    return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 &&\n        cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nfunction compareByX(a, b) {\n    return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\n\nfunction convexHull(points) {\n    points.sort(compareByX);\n\n    var lower = [];\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [];\n    for (var ii = points.length - 1; ii >= 0; ii--) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n            upper.pop();\n        }\n        upper.push(points[ii]);\n    }\n\n    upper.pop();\n    lower.pop();\n    return lower.concat(upper);\n}\n","// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\n(function(definition) {\n    /* global module, define */\n    if(typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = definition();\n    } else if(typeof define === 'function' && define.amd) {\n        define([], definition);\n    } else {\n        var exports = definition();\n        window.astar = exports.astar;\n        window.Graph = exports.Graph;\n    }\n})(function() {\n\nfunction pathTo(node){\n    var curr = node,\n        path = [];\n    while(curr.parent) {\n        path.unshift(curr);\n        curr = curr.parent;\n    }\n    return path;\n}\n\nfunction getHeap() {\n    return new BinaryHeap(function(node) {\n        return node.f;\n    });\n}\n\nvar astar = {\n    /**\n    * Perform an A* Search on a graph given a start and end node.\n    * @param {Graph} graph\n    * @param {GridNode} start\n    * @param {GridNode} end\n    * @param {Object} [options]\n    * @param {bool} [options.closest] Specifies whether to return the\n               path to the closest node if the target is unreachable.\n    * @param {Function} [options.heuristic] Heuristic function (see\n    *          astar.heuristics).\n    */\n    search: function(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        var heuristic = options.heuristic || astar.heuristics.manhattan,\n            closest = options.closest || false;\n\n        var openHeap = getHeap(),\n            closestNode = start; // set the start node to be the closest if required\n\n        start.h = heuristic(start, end);\n\n        openHeap.push(start);\n\n        while(openHeap.size() > 0) {\n\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            var currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if(currentNode === end) {\n                return pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            var neighbors = graph.neighbors(currentNode);\n\n            for (var i = 0, il = neighbors.length; i < il; ++i) {\n                var neighbor = neighbors[i];\n\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                var gScore = currentNode.g + neighbor.getCost(currentNode),\n                    beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n                    neighbor.h = neighbor.h || heuristic(neighbor, end);\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    }\n                    else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    },\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    heuristics: {\n        manhattan: function(pos0, pos1) {\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return d1 + d2;\n        },\n        diagonal: function(pos0, pos1) {\n            var D = 1;\n            var D2 = Math.sqrt(2);\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n        }\n    },\n    cleanNode:function(node){\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n};\n\n/**\n* A graph memory structure\n* @param {Array} gridIn 2D array of input weights\n* @param {Object} [options]\n* @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n*/\nfunction Graph(gridIn, options) {\n    options = options || {};\n    this.nodes = [];\n    this.diagonal = !!options.diagonal;\n    this.grid = [];\n    for (var x = 0; x < gridIn.length; x++) {\n        this.grid[x] = [];\n\n        for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n            var node = new GridNode(x, y, row[y]);\n            this.grid[x][y] = node;\n            this.nodes.push(node);\n        }\n    }\n    this.init();\n}\n\nGraph.prototype.init = function() {\n    this.dirtyNodes = [];\n    for (var i = 0; i < this.nodes.length; i++) {\n        astar.cleanNode(this.nodes[i]);\n    }\n};\n\nGraph.prototype.cleanDirty = function() {\n    for (var i = 0; i < this.dirtyNodes.length; i++) {\n        astar.cleanNode(this.dirtyNodes[i]);\n    }\n    this.dirtyNodes = [];\n};\n\nGraph.prototype.markDirty = function(node) {\n    this.dirtyNodes.push(node);\n};\n\nGraph.prototype.neighbors = function(node) {\n    var ret = [],\n        x = node.x,\n        y = node.y,\n        grid = this.grid;\n\n    // West\n    if(grid[x-1] && grid[x-1][y]) {\n        ret.push(grid[x-1][y]);\n    }\n\n    // East\n    if(grid[x+1] && grid[x+1][y]) {\n        ret.push(grid[x+1][y]);\n    }\n\n    // South\n    if(grid[x] && grid[x][y-1]) {\n        ret.push(grid[x][y-1]);\n    }\n\n    // North\n    if(grid[x] && grid[x][y+1]) {\n        ret.push(grid[x][y+1]);\n    }\n\n    if (this.diagonal) {\n        // Southwest\n        if(grid[x-1] && grid[x-1][y-1]) {\n            ret.push(grid[x-1][y-1]);\n        }\n\n        // Southeast\n        if(grid[x+1] && grid[x+1][y-1]) {\n            ret.push(grid[x+1][y-1]);\n        }\n\n        // Northwest\n        if(grid[x-1] && grid[x-1][y+1]) {\n            ret.push(grid[x-1][y+1]);\n        }\n\n        // Northeast\n        if(grid[x+1] && grid[x+1][y+1]) {\n            ret.push(grid[x+1][y+1]);\n        }\n    }\n\n    return ret;\n};\n\nGraph.prototype.toString = function() {\n    var graphString = [],\n        nodes = this.grid, // when using grid\n        rowDebug, row, y, l;\n    for (var x = 0, len = nodes.length; x < len; x++) {\n        rowDebug = [];\n        row = nodes[x];\n        for (y = 0, l = row.length; y < l; y++) {\n            rowDebug.push(row[y].weight);\n        }\n        graphString.push(rowDebug.join(\" \"));\n    }\n    return graphString.join(\"\\n\");\n};\n\nfunction GridNode(x, y, weight) {\n    this.x = x;\n    this.y = y;\n    this.weight = weight;\n}\n\nGridNode.prototype.toString = function() {\n    return \"[\" + this.x + \" \" + this.y + \"]\";\n};\n\nGridNode.prototype.getCost = function(fromNeighbor) {\n    // Take diagonal weight into consideration.\n    if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) {\n        return this.weight * 1.41421;\n    }\n    return this.weight;\n};\n\nGridNode.prototype.isWall = function() {\n    return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction){\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n    push: function(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    },\n    pop: function() {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    },\n    remove: function(node) {\n        var i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        var end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            }\n            else {\n                this.bubbleUp(i);\n            }\n        }\n    },\n    size: function() {\n        return this.content.length;\n    },\n    rescoreElement: function(node) {\n        this.sinkDown(this.content.indexOf(node));\n    },\n    sinkDown: function(n) {\n        // Fetch the element that has to be sunk.\n        var element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n\n            // Compute the parent element's index, and fetch it.\n            var parentN = ((n + 1) >> 1) - 1,\n                parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    },\n    bubbleUp: function(n) {\n        // Look up the target element and its score.\n        var length = this.content.length,\n            element = this.content[n],\n            elemScore = this.scoreFunction(element);\n\n        while(true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) << 1,\n                child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            var swap = null,\n                child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore){\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N],\n                    child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            }\n            // Otherwise, we are done.\n            else {\n                break;\n            }\n        }\n    }\n};\n\nreturn {\n    astar: astar,\n    Graph: Graph\n};\n\n});\n","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).predicates={})}(this,function(t){\"use strict\";const e=134217729,n=33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const f=33306690738754716e-32,i=22204460492503146e-32,u=11093356479670487e-47,c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=f*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}(4,c),K=i*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=u*h+n*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,\"__esModule\",{value:!0})});\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"$\" }]*/\n/*global myAlert*/\n\"use strict\";\n\n/**\n * Point status enum\n * */\nconst StatusEnum = Object.freeze({\n\tPOINT_FREE_RED: -3,\n\tPOINT_FREE_BLUE: -2,\n\tPOINT_FREE: -1,\n\tPOINT_STARTING: 0,\n\tPOINT_IN_PATH: 1,\n\tPOINT_OWNED_BY_RED: 2,\n\tPOINT_OWNED_BY_BLUE: 3\n});\n\n/**\n * Shared log function\n * @param {any} msg - object to log\n */\nfunction LocalLog(msg) {\n\t// eslint-disable-next-line no-console\n\tconsole.log(msg);\n}\n\n/**\n * Shared error log function\n * @param {...any} args - objects to log\n */\nfunction LocalError(...args) {\n\tlet msg = '';\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst str = args[i];\n\t\tif (str)\n\t\t\tmsg += str;\n\t}\n\t// eslint-disable-next-line no-console\n\tconsole.error(msg);\n}\n\nconst LocalAlert = (typeof myAlert !== \"undefined\") ?\n\tmyAlert :\n\t(msg, onCloseCallback = undefined) => {\n\t\twindow.alert(msg);\n\t\tif (onCloseCallback)\n\t\t\tonCloseCallback();\n\t};\n\n/**\n * Based on http://www.faqs.org/faqs/graphics/algorithms-faq/\n * but mainly on http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n * returns != 0 if point is inside path\n * @param {array} pathPoints points as array of {x,y}\n * @param {number} x point to check x coordinate\n * @param {number} y point to check y coordinate\n * @returns {boolean} if point lies inside the polygon\n */\nfunction pnpoly(pathPoints, x, y) {\n\tconst size = pathPoints.length;\n\tlet i, j, c = false;\n\n\tfor (i = 0, j = size - 1; i < size; j = i++) {\n\t\tconst pi = pathPoints[i], pj = pathPoints[j];\n\n\t\tif ((((pi.y <= y) && (y < pj.y)) ||\n\t\t\t((pj.y <= y) && (y < pi.y))) &&\n\t\t\t(x < (pj.x - pi.x) * (y - pi.y) / (pj.y - pi.y) + pi.x))\n\n\t\t\tc = !c;\n\t}\n\treturn c;\n}\n\n/**\n * Test for array uniqueness using default object comparator\n * @param {array} array of objects that are tested against uniqueness\n * @returns {boolean} true - has duplicates\n */\nfunction hasDuplicates(array) {\n\treturn (new Set(array)).size !== array.length;\n}\n\nasync function Sleep(ms) {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Sorting point clockwise/anticlockwise\n * @param {array} points array of points to sort\n * @returns {array} of points\n */\nfunction sortPointsClockwise(points) {\n\t// Get the center (mean value) using reduce\n\tconst center = points.reduce((acc, pt) => {\n\t\tacc.x += pt.x;\n\t\tacc.y += pt.y;\n\t\treturn acc;\n\t}, { x: 0, y: 0 });\n\tcenter.x /= points.length;\n\tcenter.y /= points.length;\n\n\t// Add an angle property to each point using tan(angle) = y/x\n\t// const one80_div_by_pi = 180 / Math.PI;\n\tconst added_angles = points.map(p => {\n\t\tp.angle = Math.atan2(p.y - center.y, p.x - center.x)/*  * one80_div_by_pi */;\n\t\treturn p;\n\t});\n\n\t// Sort your points by angle\n\tconst pointsSorted = added_angles.sort((a, b) => a.angle - b.angle);\n\treturn pointsSorted;\n}\n\n//////////////////////////////////////////////////////\n// SVG-VML mini graphic library \n// ==========================================\n// written by Gerard Ferrandez\n// initial version - June 28, 2006\n// modified - 2020 - Andrzej Pauli dropping vml - obsolete and no support so why bother\n// modified - 2018-2020 - Andrzej Pauli polyline and oval functions & extensions\n// modified - July 21 - use object functions\n// modified - July 24 - debug\n// www.dhteumeuleu.com\n//////////////////////////////////////////////////////\nclass SvgVml {\n\t#mathSVGPoint;\n\t#cont;\n\n\tconstructor() {\n\t\tconst svgNS = \"http://www.w3.org/2000/svg\";\n\t\tlet svgAvailable = false, svgAntialias = undefined;\n\t\tlet documentCreateElementNS_SVG, documentCreateElementNS_Element;\n\t\tthis.#cont = null;\n\t\t// Create an SVGPoint for future math\n\t\tthis.#mathSVGPoint = null;\n\n\t\tif (self && self.document && self.document.createElementNS) {\n\t\t\tconst some_cont = document.createElementNS(svgNS, \"svg\");\n\t\t\tsvgAvailable = (some_cont.x !== null);\n\t\t}\n\n\t\tif (svgAvailable) {\n\t\t\t/* ============= displayable SVG ============== */\n\t\t\tdocumentCreateElementNS_SVG = (contextElement) => contextElement;\n\t\t\tdocumentCreateElementNS_Element = function (elementName) {\n\t\t\t\tswitch (elementName) {\n\t\t\t\t\tcase \"circle\":\n\t\t\t\t\tcase \"line\":\n\t\t\t\t\tcase \"polyline\":\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst o = document.createElementNS(svgNS, elementName);\n\t\t\t\t\t\t\treturn o;\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`unknown type ${elementName}`);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\t/* ============= emulated SVG ============== */\n\t\t\tdocumentCreateElementNS_SVG = function () {\n\t\t\t\treturn {\n\t\t\t\t\tattributes: new Map(),\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tsetAttributeNS: function (_nullish, key, val) {\n\t\t\t\t\t\tthis.attributes.set(key, val);\n\t\t\t\t\t},\n\t\t\t\t\tappendChild: function (val) {\n\t\t\t\t\t\tthis.children.push(val);\n\t\t\t\t\t},\n\t\t\t\t\tremoveChild: function (val) {\n\t\t\t\t\t\tconst index = this.children.indexOf(val);\n\t\t\t\t\t\tif (index !== -1)\n\t\t\t\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t/////////////// Pollyfills start ///////////////\n\t\t\tself.SVGCircleElement = function () {\n\t\t\t\tthis.attributes = new Map();\n\t\t\t};\n\t\t\tSVGCircleElement.prototype.setAttribute = function (key, val) {\n\t\t\t\tthis.attributes.set(key, val);\n\t\t\t};\n\t\t\tSVGCircleElement.prototype.getAttribute = function (key) {\n\t\t\t\treturn this.attributes.get(key);\n\t\t\t};\n\t\t\tSVGCircleElement.prototype.removeAttribute = function (key) {\n\t\t\t\tthis.attributes.delete(key);\n\t\t\t};\n\n\t\t\t// self.SVGLineElement = function () {\n\t\t\t// \tthis.attributes = new Map();\n\t\t\t// };\n\t\t\t// SVGLineElement.prototype.setAttribute = function (key, val) {\n\t\t\t// \tthis.attributes.set(key, val);\n\t\t\t// };\n\t\t\t// SVGLineElement.prototype.getAttribute = function (key) {\n\t\t\t// \treturn this.attributes.get(key);\n\t\t\t// };\n\t\t\t// SVGLineElement.prototype.removeAttribute = function (key) {\n\t\t\t// \tthis.attributes.delete(key);\n\t\t\t// };\n\n\t\t\tself.SVGPolylineElement = function () {\n\t\t\t\tthis.attributes = new Map();\n\t\t\t};\n\t\t\tSVGPolylineElement.prototype.setAttribute = function (key, val) {\n\t\t\t\tthis.attributes.set(key, val);\n\t\t\t};\n\t\t\tSVGPolylineElement.prototype.getAttribute = function (key) {\n\t\t\t\treturn this.attributes.get(key);\n\t\t\t};\n\t\t\tSVGPolylineElement.prototype.removeAttribute = function (key) {\n\t\t\t\tthis.attributes.delete(key);\n\t\t\t};\n\t\t\t/////////////// Pollyfills end ///////////////\n\n\t\t\tdocumentCreateElementNS_Element = function (elementName) {\n\t\t\t\tswitch (elementName) {\n\t\t\t\t\tcase \"circle\":\n\t\t\t\t\t\treturn new SVGCircleElement();\n\t\t\t\t\t// case \"line\":\n\t\t\t\t\t// \treturn new SVGLineElement();\n\t\t\t\t\tcase \"polyline\":\n\t\t\t\t\t\treturn new SVGPolylineElement();\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`unknown type ${elementName}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tSVGCircleElement.prototype.move = function (x, y/* , radius = undefined */) {\n\t\t\tthis.setAttribute(\"cx\", x);\n\t\t\tthis.setAttribute(\"cy\", y);\n\t\t\t// if (radius)\n\t\t\t// \tthis.setAttribute(\"r\", radius);\n\t\t};\n\t\tSVGCircleElement.prototype.GetStrokeColor = function () { return this.getAttribute(\"stroke\"); };\n\t\tSVGCircleElement.prototype.SetStrokeColor = function (col) { this.setAttribute(\"stroke\", col); };\n\t\tSVGCircleElement.prototype.GetPosition = function () {\n\t\t\tif (typeof (this.cachedPosition) === 'undefined') {\n\t\t\t\tthis.cachedPosition = { x: parseInt(this.getAttribute(\"cx\")), y: parseInt(this.getAttribute(\"cy\")) };\n\t\t\t}\n\t\t\treturn this.cachedPosition;\n\t\t};\n\t\tSVGCircleElement.prototype.GetFillColor = function () {\n\t\t\tif (typeof (this.cachedFillColor) === 'undefined') {\n\t\t\t\tthis.cachedFillColor = this.getAttribute(\"fill\");\n\t\t\t}\n\t\t\treturn this.cachedFillColor;\n\t\t};\n\t\tSVGCircleElement.prototype.SetFillColor = function (col) {\n\t\t\tthis.cachedFillColor = col;\n\t\t\tthis.setAttribute(\"fill\", col);\n\t\t\t// this.setAttribute(\"style\", `fill: ${col}`);\n\t\t};\n\t\tSVGCircleElement.prototype.GetStatus = function () {\n\t\t\tif (typeof (this.cachedStatus) === 'undefined') {\n\t\t\t\tthis.cachedStatus = StringToStatusEnum(this.getAttribute(\"data-status\"));\n\t\t\t}\n\t\t\treturn this.cachedStatus;\n\t\t};\n\t\tSVGCircleElement.prototype.SetStatus = function (iStatus, saveOldPoint = false) {\n\t\t\tif (saveOldPoint) {\n\t\t\t\tconst old_status = StringToStatusEnum(this.getAttribute(\"data-status\"));\n\t\t\t\tthis.cachedStatus = iStatus;\n\t\t\t\tthis.setAttribute(\"data-status\", StatusEnumToString(this.cachedStatus));\n\t\t\t\tif (old_status !== StatusEnum.POINT_FREE && old_status !== iStatus)\n\t\t\t\t\tthis.setAttribute(\"data-old-status\", StatusEnumToString(old_status));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.cachedStatus = iStatus;\n\t\t\t\tthis.setAttribute(\"data-status\", StatusEnumToString(iStatus));\n\t\t\t}\n\t\t};\n\t\tSVGCircleElement.prototype.RevertOldStatus = function () {\n\t\t\tconst old_status = this.getAttribute(\"data-old-status\");\n\t\t\tif (old_status) {\n\t\t\t\tthis.removeAttribute(\"data-old-status\");\n\t\t\t\tthis.setAttribute(\"data-status\", old_status);\n\t\t\t\tthis.cachedStatus = StringToStatusEnum(old_status);\n\t\t\t\treturn this.cachedStatus;\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\t\tSVGCircleElement.prototype.GetZIndex = function () { return this.getAttribute(\"z-index\"); };\n\t\tSVGCircleElement.prototype.SetZIndex = function (val) { this.setAttribute(\"z-index\", val); };\n\t\tSVGCircleElement.prototype.Hide = function () { this.setAttribute(\"visibility\", 'hidden'); };\n\t\tSVGCircleElement.prototype.Show = function () { this.setAttribute(\"visibility\", 'visible'); };\n\t\tSVGCircleElement.prototype.StrokeWeight = function (sw) { this.setAttribute(\"stroke-width\", sw); };\n\t\tSVGCircleElement.prototype.Serialize = function () {\n\t\t\tconst { x, y } = this.GetPosition();\n\t\t\tconst Status = this.GetStatus();\n\t\t\tconst Color = this.GetFillColor();\n\t\t\treturn { x, y, Status, Color };\n\t\t};\n\n\t\t// SVGLineElement.prototype.move = function (x1, y1, x2, y2) {\n\t\t// \tthis.setAttribute(\"x1\", x1);\n\t\t// \tthis.setAttribute(\"y1\", y1);\n\t\t// \tthis.setAttribute(\"x2\", x2);\n\t\t// \tthis.setAttribute(\"y2\", y2);\n\t\t// };\n\t\t// SVGLineElement.prototype.RGBcolor = function (r, g, b) {\n\t\t// \tthis.setAttribute(\"stroke\", `rgb(${Math.round(r)},${Math.round(g)},${Math.round(b)})`);\n\t\t// };\n\t\t// SVGLineElement.prototype.SetColor = function (color) { this.setAttribute(\"stroke\", color); };\n\t\t// SVGLineElement.prototype.strokeWidth = function (sw) { this.setAttribute(\"stroke-width\", sw + \"px\"); };\n\n\t\tSVGPolylineElement.prototype.AppendPoints = function (x, y, diff = 1) {\n\t\t\tconst pts_str = this.getAttribute(\"points\");\n\t\t\tconst pts = pts_str.split(\" \");\n\n\t\t\tif (pts.length <= 1 || true === hasDuplicates(pts))\n\t\t\t\treturn false;\n\n\t\t\tconst arr = pts.at(-1).split(\",\");//obtain last point coords\n\t\t\tif (arr.length !== 2)\n\t\t\t\treturn false;\n\n\t\t\tconst last_x = parseInt(arr[0]), last_y = parseInt(arr[1]);\n\t\t\tx = parseInt(x);\n\t\t\ty = parseInt(y);\n\t\t\tif (!(Math.abs(last_x - x) <= diff && Math.abs(last_y - y) <= diff))\n\t\t\t\treturn false;\n\n\t\t\tthis.setAttribute(\"points\", pts_str + ` ${x},${y}`);\n\t\t\treturn true;\n\t\t};\n\t\tSVGPolylineElement.prototype.RemoveLastPoint = function () {\n\t\t\tconst new_points = this.getAttribute(\"points\").replace(/(\\s\\d+,\\d+)$/, \"\");\n\t\t\tthis.setAttribute(\"points\", new_points);\n\t\t\treturn new_points;\n\t\t};\n\t\tSVGPolylineElement.prototype.ContainsPoint = function (x, y) {\n\t\t\t// const regex = new RegExp(`${x},${y}`, 'g');\n\t\t\t// const cnt = (this.getAttribute(\"points\").match(regex) || []).length;\n\t\t\t// return cnt;\n\n\t\t\tconst str_ = this.getAttribute(\"points\");\n\t\t\tconst subStr = `${x},${y}`;\n\n\t\t\t//https://stackoverflow.com/a/74282605/4429828\n\t\t\tlet occurrence_count = 0;\n\t\t\tlet pos = -subStr.length;\n\t\t\twhile ((pos = str_.indexOf(subStr, pos + subStr.length)) > -1) {\n\t\t\t\toccurrence_count++;\n\t\t\t}\n\t\t\treturn occurrence_count;\n\t\t};\n\t\tSVGPolylineElement.prototype.GetPointsString = function () {\n\t\t\treturn this.getAttribute(\"points\");\n\t\t};\n\t\tSVGPolylineElement.prototype.GetPointsArray = function () {\n\t\t\t//format is:\n\t\t\t//x0,y0 x1,y1 x2,y2\n\t\t\t//\n\t\t\tif (typeof (this.cachedPoints) === 'undefined') {\n\t\t\t\tthis.cachedPoints = this.getAttribute(\"points\").split(\" \").map(function (pt) {\n\t\t\t\t\tconst [x, y] = pt.split(',');\n\t\t\t\t\treturn { x: parseInt(x), y: parseInt(y) };\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.cachedPoints;\n\t\t};\n\t\tSVGPolylineElement.prototype.SetPoints = function (sPoints) {\n\t\t\tthis.setAttribute(\"points\", sPoints);\n\t\t};\n\t\tSVGPolylineElement.prototype.GetIsClosed = function () {\n\t\t\tconst pts = this.getAttribute(\"points\").split(\" \");\n\t\t\treturn pts[0] === pts.at(-1);\n\t\t};\n\t\tSVGPolylineElement.prototype.GetLength = function () {\n\t\t\treturn this.getAttribute(\"points\").split(\" \").length;\n\t\t};\n\t\tSVGPolylineElement.prototype.SetWidthAndColor = function (sw, col) {\n\t\t\tthis.setAttribute(\"stroke\", col);\n\t\t\tthis.setAttribute(\"fill\", col);\n\t\t\tthis.setAttribute(\"stroke-width\", sw);\n\t\t};\n\t\tSVGPolylineElement.prototype.GetID = function () { return parseInt(this.getAttribute(\"data-id\")); };\n\t\tSVGPolylineElement.prototype.SetID = function (iID) { this.setAttribute(\"data-id\", iID); };\n\t\tSVGPolylineElement.prototype.GetFillColor = function () { return this.getAttribute(\"fill\"); };\n\t\tSVGPolylineElement.prototype.Serialize = function () {\n\t\t\tconst id = this.GetID();\n\t\t\tconst color = this.GetFillColor();\n\t\t\tconst pts = this.GetPointsString();\n\t\t\treturn { iId: id, Color: color, PointsAsString: pts };\n\t\t};\n\n\t\tthis.CreateSVGVML = function (contextElement, iWidth, iHeight, { iGridWidth, iGridHeight }, antialias) {\n\t\t\tthis.#cont = documentCreateElementNS_SVG(contextElement);\n\t\t\tif (iWidth)\n\t\t\t\tthis.#cont.setAttributeNS(null, 'width', iWidth);\n\t\t\tif (iHeight)\n\t\t\t\tthis.#cont.setAttributeNS(null, 'height', iHeight);\n\t\t\tif (contextElement) {\n\t\t\t\tif (iGridWidth !== undefined && iGridHeight !== undefined)\n\t\t\t\t\tthis.#cont.setAttribute(\"viewBox\", `0 0 ${iGridWidth} ${iGridHeight}`);\n\n\t\t\t\tthis.#mathSVGPoint = this.#cont.createSVGPoint();\n\t\t\t}\n\t\t\tsvgAntialias = antialias;\n\n\t\t\treturn svgAvailable ? this.#cont : null;\n\t\t};\n\t\t// this.CreateLine = function (w, col, linecap) {\n\t\t// \tconst o = documentCreateElementNS_Element(\"line\");\n\t\t// \tif (svgAntialias !== undefined)\n\t\t// \t\to.setAttribute(\"shape-rendering\", svgAntialias === true ? \"auto\" : \"optimizeSpeed\");\n\t\t// \to.setAttribute(\"stroke-width\", w + \"px\");\n\t\t// \tif (col) o.setAttribute(\"stroke\", col);\n\t\t// \tif (linecap) o.setAttribute(\"stroke-linecap\", linecap);\n\n\t\t// \tthis.#cont.appendChild(o);\n\t\t// \treturn o;\n\t\t// };\n\t\tthis.CreatePolyline = function (points, col, width = undefined) {\n\t\t\tconst o = documentCreateElementNS_Element(\"polyline\");\n\t\t\tif (svgAntialias !== undefined)\n\t\t\t\to.setAttribute(\"shape-rendering\", svgAntialias === true ? \"auto\" : \"optimizeSpeed\");\n\t\t\tif (width !== undefined)\n\t\t\t\to.setAttribute(\"stroke-width\", width);\n\t\t\tif (col) {\n\t\t\t\to.setAttribute(\"stroke\", col);\n\t\t\t\to.setAttribute(\"fill\", col);\n\t\t\t}\n\t\t\t// o.setAttribute(\"fill-opacity\", \"0.1\");\n\t\t\tif (points) o.setAttribute(\"points\", points);\n\t\t\t// o.setAttribute(\"stroke-linecap\", \"round\");\n\t\t\t// o.setAttribute(\"stroke-linejoin\", \"round\");\n\t\t\to.setAttribute(\"data-id\", 0);\n\n\t\t\tthis.#cont.appendChild(o);\n\t\t\treturn o;\n\t\t};\n\t\tthis.CreateOval = function (radius = undefined) {\n\t\t\tconst o = documentCreateElementNS_Element(\"circle\");\n\t\t\tif (svgAntialias !== undefined)\n\t\t\t\to.setAttribute(\"shape-rendering\", svgAntialias === true ? \"auto\" : \"optimizeSpeed\");\n\t\t\t// o.setAttribute(\"stroke-width\", 0);\n\t\t\tif (radius !== undefined)\n\t\t\t\to.setAttribute(\"r\", radius);\n\t\t\to.setAttribute(\"data-status\", StatusEnumToString(StatusEnum.POINT_FREE));\n\t\t\t//o.setAttribute(\"data-old-status\", StatusEnumToString(StatusEnum.POINT_FREE));\n\n\t\t\tthis.#cont.appendChild(o);\n\t\t\treturn o;\n\t\t};\n\n\t\tconst StatusEnumToString = function (enumVal) {\n\t\t\tswitch (enumVal) {\n\t\t\t\tcase StatusEnum.POINT_FREE_RED:\n\t\t\t\t\treturn Object.keys(StatusEnum)[0];\n\t\t\t\tcase StatusEnum.POINT_FREE_BLUE:\n\t\t\t\t\treturn Object.keys(StatusEnum)[1];\n\t\t\t\tcase StatusEnum.POINT_FREE:\n\t\t\t\t\treturn Object.keys(StatusEnum)[2];\n\t\t\t\tcase StatusEnum.POINT_STARTING:\n\t\t\t\t\treturn Object.keys(StatusEnum)[3];\n\t\t\t\tcase StatusEnum.POINT_IN_PATH:\n\t\t\t\t\treturn Object.keys(StatusEnum)[4];\n\t\t\t\tcase StatusEnum.POINT_OWNED_BY_RED:\n\t\t\t\t\treturn Object.keys(StatusEnum)[5];\n\t\t\t\tcase StatusEnum.POINT_OWNED_BY_BLUE:\n\t\t\t\t\treturn Object.keys(StatusEnum)[6];\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('bad status enum value');\n\t\t\t}\n\t\t};\n\n\t\tconst StringToStatusEnum = function (enumStr) {\n\t\t\tswitch (enumStr.toUpperCase()) {\n\t\t\t\tcase Object.keys(StatusEnum)[0]:\n\t\t\t\t\treturn StatusEnum.POINT_FREE_RED;\n\t\t\t\tcase Object.keys(StatusEnum)[1]:\n\t\t\t\t\treturn StatusEnum.POINT_FREE_BLUE;\n\t\t\t\tcase Object.keys(StatusEnum)[2]:\n\t\t\t\t\treturn StatusEnum.POINT_FREE;\n\t\t\t\tcase Object.keys(StatusEnum)[3]:\n\t\t\t\t\treturn StatusEnum.POINT_STARTING;\n\t\t\t\tcase Object.keys(StatusEnum)[4]:\n\t\t\t\t\treturn StatusEnum.POINT_IN_PATH;\n\t\t\t\tcase Object.keys(StatusEnum)[5]:\n\t\t\t\t\treturn StatusEnum.POINT_OWNED_BY_RED;\n\t\t\t\tcase Object.keys(StatusEnum)[6]:\n\t\t\t\t\treturn StatusEnum.POINT_OWNED_BY_BLUE;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('bad status enum string');\n\t\t\t}\n\t\t};\n\t}\n\n\tRemoveOval(oval) {\n\t\tthis.#cont.removeChild(oval);\n\t}\n\n\tRemovePolyline(polyline) {\n\t\tthis.#cont.removeChild(polyline);\n\t}\n\n\tDeserializeOval(packed, radius = undefined) {\n\t\tlet { x, y, Status, Color } = packed;\n\t\tx = parseInt(x);\n\t\ty = parseInt(y);\n\t\tconst o = this.CreateOval(radius);\n\t\to.move(x, y);\n\t\t// o.SetStrokeColor(Color);\n\t\to.SetFillColor(Color);\n\t\to.SetStatus(Status);\n\t\treturn o;\n\t}\n\n\tDeserializePolyline(packed, width = undefined) {\n\t\tconst { iId, Color, PointsAsString } = packed;\n\t\tconst o = this.CreatePolyline(PointsAsString, Color, width);\n\t\to.SetID(iId);\n\t\treturn o;\n\t}\n\n\t/**\n\t * Converts coordinates point from screen to scaled SVG as according to\n\t * https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/samples/hh535760(v=vs.85)?redirectedfrom=MSDN\n\t * https://stackoverflow.com/questions/22183727/how-do-you-convert-screen-coordinates-to-document-space-in-a-scaled-svg\n\t * @param {number} clientX X coordinate\n\t * @param {number} clientY Y coordinate\n\t * @returns {object} coordinate {x,y} point\n\t */\n\tToCursorPoint(clientX, clientY) {\n\t\t// Get point in global SVG space\n\t\tthis.#mathSVGPoint.x = clientX; this.#mathSVGPoint.y = clientY;\n\t\tconst loc = this.#mathSVGPoint.matrixTransform(this.#cont.getScreenCTM().inverse());\n\n\t\treturn loc;\n\t}\n\n\t/**\n\t * https://stackoverflow.com/a/68078941/4429828\n\t * @description Check if a pt is in, on or outside of a circle.\n\t * @param {point} pt The point to test. An array of two floats - x and y coordinates.\n\t * @param {point} center The circle center. An array of two floats - x and y coordinates.\n\t * @param {float} r The circle radius.\n\t * @param {float} tolerance +- above below tolerance value\n\t * @returns {1 | 0 | -1} 1 if the point is inside, 0 if it is on and -1 if it is outside the circle.\n\t */\n\tIsPointInCircle(pt, center, r, tolerance = 4) {\n\t\tconst lhs = Math.pow(center.x - pt.x, 2) + Math.pow(center.y - pt.y, 2);\n\t\tconst rhs = Math.pow(r, 2);\n\n\t\tif (Math.abs(lhs - rhs) < tolerance) {//inside\n\t\t\t// if ((rhs - lhs) < tolerance)\n\t\t\t// \treturn 0;\n\t\t\t// LocalLog(`lhs - rhs = ${lhs - rhs}`);\n\t\t\treturn 1;\n\t\t}\n\t\telse if (lhs === rhs)\n\t\t\treturn 0;//on circle\n\t\telse\n\t\t\treturn -1;//outside\n\t}\n}\n\nclass GameStateStore {\n\t#DB;\n\t#DB_NAME;\n\t#DB_VERSION;\n\t#DB_POINT_STORE;\n\t#DB_PATH_STORE;\n\t#DB_STATE_STORE;\n\t#bulkStores;\n\t#PointStore;\n\t#PathStore;\n\n\tconstructor(useIndexedDb, pointCreationCallbackFn = null, pathCreationCallbackFn = null, getGameStateFn = null, version = \"\") {\n\t\tif (useIndexedDb) {\n\t\t\tif (!('indexedDB' in self)) {\n\t\t\t\tLocalLog(\"This browser doesn't support IndexedDB\");\n\t\t\t\tuseIndexedDb = false;\n\t\t\t}\n\t\t\telse\n\t\t\t\tuseIndexedDb = true;\n\t\t}\n\t\telse\n\t\t\tuseIndexedDb = false;\n\n\t\t/////////inner class definitions start/////////\n\t\t/////////https://stackoverflow.com/questions/28784375/nested-es6-classes/////////\n\t\tconst SimplePointStoreDefinition = class SimplePointStore {\n\t\t\tconstructor() {\n\t\t\t\tthis.store = new Map();\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\treturn true;//dummy\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync has(key) {\n\t\t\t\treturn this.store.has(key);\n\t\t\t}\n\n\t\t\tasync set(key, val) {\n\t\t\t\treturn this.store.set(key, val);\n\t\t\t}\n\n\t\t\tasync get(key) {\n\t\t\t\treturn this.store.get(key);\n\t\t\t}\n\n\t\t\tasync values() {\n\t\t\t\treturn this.store.values();\n\t\t\t}\n\n\t\t\tasync count() {\n\t\t\t\treturn this.store.size;\n\t\t\t}\n\t\t};\n\n\t\tconst SimplePathStoreDefinition = class SimplePathStore {\n\t\t\tconstructor() {\n\t\t\t\tthis.store = [];\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\treturn true;//dummy\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\t//dummy\n\t\t\t}\n\n\t\t\tasync push(obj) {\n\t\t\t\treturn this.store.push(obj);\n\t\t\t}\n\n\t\t\tasync all() {\n\t\t\t\treturn this.store;\n\t\t\t}\n\n\t\t\tasync count() {\n\t\t\t\treturn this.store.length;\n\t\t\t}\n\t\t};\n\n\t\tconst IDBPointStoreDefinition = class IDBPointStore extends SimplePointStoreDefinition {\n\t\t\t#MainGameStateStore;\n\t\t\t#GetPoint;\n\t\t\t#StorePoint;\n\t\t\t#UpdatePoint;\n\t\t\t// GetAllPoints;\n\t\t\t#UpdateState;\n\t\t\t#PointCreationCallback;\n\t\t\t// GetGameStateCallback;\n\n\t\t\tconstructor(mainGameStateStore, pointCreationCallbackFn, getGameStateFn) {\n\t\t\t\tsuper();\n\t\t\t\tthis.#MainGameStateStore = mainGameStateStore;\n\t\t\t\tthis.#GetPoint = mainGameStateStore.GetPoint.bind(this.#MainGameStateStore);\n\t\t\t\tthis.#StorePoint = mainGameStateStore.StorePoint.bind(this.#MainGameStateStore);\n\t\t\t\tthis.#UpdatePoint = mainGameStateStore.UpdatePoint.bind(this.#MainGameStateStore);\n\t\t\t\tthis.GetAllPoints = mainGameStateStore.GetAllPoints.bind(this.#MainGameStateStore);\n\t\t\t\tthis.#UpdateState = mainGameStateStore.UpdateState.bind(this.#MainGameStateStore);\n\t\t\t\tthis.#PointCreationCallback = pointCreationCallbackFn;\n\t\t\t\tthis.GetGameStateCallback = getGameStateFn;\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\tif (this.#PointCreationCallback && this.GetGameStateCallback) {\n\t\t\t\t\tconst points = await this.GetAllPoints();\n\t\t\t\t\tconst game_state = this.GetGameStateCallback();\n\n\t\t\t\t\t//loading points from IndexedDB\n\t\t\t\t\tfor (const idb_pt of points) {\n\t\t\t\t\t\tconst pt = await this.#PointCreationCallback(idb_pt.x, idb_pt.y, idb_pt.Status, idb_pt.Color);\n\t\t\t\t\t\tconst index = idb_pt.y * game_state.iGridWidth + idb_pt.x;\n\t\t\t\t\t\tthis.store.set(index, pt);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\tawait this.#MainGameStateStore.BeginPointBulkStorage('readwrite');\n\n\t\t\t\tif (this.#MainGameStateStore.pointBulkBuffer === null)\n\t\t\t\t\tthis.#MainGameStateStore.pointBulkBuffer = new Map();\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\tawait this.#MainGameStateStore.StoreAllPoints();\n\n\t\t\t\tawait this.#MainGameStateStore.EndPointBulkStorage();\n\t\t\t}\n\n\t\t\tasync has(key) {\n\t\t\t\t//const pt = await GetPoint(key);\n\t\t\t\t//return pt !== undefined && pt !== null;\n\t\t\t\treturn this.store.has(key);\n\t\t\t}\n\n\t\t\tasync set(key, oval) {\n\t\t\t\tconst game_state = this.GetGameStateCallback();\n\n\t\t\t\tconst pos = oval.GetPosition();\n\t\t\t\tconst color = oval.GetFillColor();\n\t\t\t\tconst idb_pt = {\n\t\t\t\t\tx: pos.x,\n\t\t\t\t\ty: pos.y,\n\t\t\t\t\tStatus: oval.GetStatus()\n\t\t\t\t};\n\t\t\t\tif (color)\n\t\t\t\t\tidb_pt.Color = color;\n\n\t\t\t\tif (await this.has(key))\n\t\t\t\t\tawait this.#UpdatePoint(key, idb_pt);\n\t\t\t\telse\n\t\t\t\t\tawait this.#StorePoint(key, idb_pt);\n\n\t\t\t\tif (this.#UpdateState) {\n\t\t\t\t\tif (game_state.bPointsAndPathsLoaded === true)\n\t\t\t\t\t\tawait this.#UpdateState(game_state.iGameID, game_state);\n\t\t\t\t}\n\n\t\t\t\treturn this.store.set(key, oval);\n\t\t\t}\n\n\t\t\tasync get(key) {\n\t\t\t\tlet val = this.store.get(key);\n\t\t\t\t//if (!val) {\n\t\t\t\t//\tconst idb_pt = await this.GetPoint(key);\n\t\t\t\t//\tif (idb_pt && this.PointCreationCallback) {\n\t\t\t\t//\t\tval = this.PointCreationCallback(idb_pt.x, idb_pt.y, idb_pt.Status, idb_pt.Color);\n\t\t\t\t//\t\tthis.store.set(key, val);\n\t\t\t\t//\t\treturn val;\n\t\t\t\t//\t}\n\t\t\t\t//\telse\n\t\t\t\t//\t\treturn undefined;\n\t\t\t\t//}\n\t\t\t\treturn val;\n\t\t\t}\n\n\t\t\tasync values() {\n\t\t\t\tlet values = this.store.values();\n\t\t\t\tif (values)\n\t\t\t\t\treturn values;\n\t\t\t\tvalues = await this.GetAllPoints();\n\t\t\t\treturn values;\n\t\t\t}\n\t\t};\n\n\t\tconst IDBPathStoreDefinition = class IDBPathStore extends SimplePathStoreDefinition {\n\t\t\t#MainGameStateStore;\n\t\t\t#GetAllPaths;\n\t\t\t#StorePath;\n\t\t\t#UpdateState;\n\t\t\t#PathCreationCallback;\n\t\t\t#GetGameStateCallback;\n\n\t\t\tconstructor(mainGameStateStore, pathCreationCallbackFn, getGameStateFn) {\n\t\t\t\tsuper();\n\t\t\t\tthis.#MainGameStateStore = mainGameStateStore;\n\t\t\t\tthis.#GetAllPaths = mainGameStateStore.GetAllPaths.bind(this.#MainGameStateStore);\n\t\t\t\tthis.#StorePath = mainGameStateStore.StorePath.bind(this.#MainGameStateStore);\n\t\t\t\tthis.#UpdateState = mainGameStateStore.UpdateState.bind(this.#MainGameStateStore);\n\t\t\t\tthis.#PathCreationCallback = pathCreationCallbackFn;\n\t\t\t\tthis.#GetGameStateCallback = getGameStateFn;\n\t\t\t}\n\n\t\t\tasync PrepareStore() {\n\t\t\t\tif (this.#PathCreationCallback) {\n\t\t\t\t\tconst paths = await this.#GetAllPaths();\n\t\t\t\t\t//loading paths from IndexedDB\n\t\t\t\t\tfor (const idb_pa of paths) {\n\t\t\t\t\t\tconst pa = await this.#PathCreationCallback(idb_pa.PointsAsString, idb_pa.Color, idb_pa.iId);\n\t\t\t\t\t\tthis.store.push(pa);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tasync BeginBulkStorage() {\n\t\t\t\tawait this.#MainGameStateStore.BeginPathBulkStorage('readwrite');\n\n\t\t\t\tif (this.#MainGameStateStore.pathBulkBuffer === null)\n\t\t\t\t\tthis.#MainGameStateStore.pathBulkBuffer = new Map();\n\t\t\t}\n\n\t\t\tasync EndBulkStorage() {\n\t\t\t\tawait this.#MainGameStateStore.StoreAllPaths();\n\n\t\t\t\tawait this.#MainGameStateStore.EndPathBulkStorage();\n\t\t\t}\n\n\t\t\tasync push(val) {\n\t\t\t\tconst game_state = this.#GetGameStateCallback();\n\n\t\t\t\tconst id_key = val.GetID();\n\t\t\t\tconst idb_path = {\n\t\t\t\t\tiId: id_key,\n\t\t\t\t\tColor: val.GetFillColor(),\n\t\t\t\t\tPointsAsString: val.GetPointsString().split(\" \").map((pt) => {\n\t\t\t\t\t\tlet [x, y] = pt.split(',');\n\t\t\t\t\t\tx = parseInt(x); y = parseInt(y);\n\t\t\t\t\t\treturn `${x},${y}`;\n\t\t\t\t\t}).join(\" \")\n\t\t\t\t};\n\n\t\t\t\tawait this.#StorePath(id_key, idb_path);\n\n\t\t\t\tif (this.#UpdateState) {\n\t\t\t\t\tif (game_state.bPointsAndPathsLoaded === true)\n\t\t\t\t\t\tawait this.#UpdateState(game_state.iGameID, game_state);\n\t\t\t\t}\n\n\t\t\t\treturn this.store.push(val);\n\t\t\t}\n\n\t\t\tasync all() {\n\t\t\t\tlet values = this.store;\n\t\t\t\tif (values)\n\t\t\t\t\treturn values;\n\t\t\t\tvalues = await this.#GetAllPaths();\n\t\t\t\treturn values;\n\t\t\t}\n\t\t};\n\t\t/////////inner class definitions end/////////\n\n\t\tif (useIndexedDb === true) {\n\t\t\tthis.#DB_NAME = 'InkballGame';\n\t\t\tthis.#DB_POINT_STORE = 'points';\n\t\t\tthis.#DB_PATH_STORE = 'paths';\n\t\t\tthis.#DB_STATE_STORE = 'state';\n\t\t\tthis.#DB = null;//main DB object\n\t\t\tthis.#bulkStores = null;\n\t\t\tthis.pointBulkBuffer = null;\n\t\t\tthis.pathBulkBuffer = null;\n\n\t\t\t// Use a long long for this value (don't use a float)\n\t\t\tif (!version || version === \"\" || version.length <= 0)\n\t\t\t\tthis.#DB_VERSION = null;\n\t\t\telse {\n\t\t\t\tthis.#DB_VERSION = parseInt(version.split('.').reduce((acc, val) => {\n\t\t\t\t\tval = parseInt(val);\n\t\t\t\t\treturn acc * 10 + (isNaN(val) ? 0 : val);\n\t\t\t\t}, 0)) - 1010/*initial module versioning start number*/ + 4/*initial indexDB start number*/;\n\t\t\t}\n\n\t\t\tthis.#PointStore = new IDBPointStoreDefinition(this, pointCreationCallbackFn, getGameStateFn);\n\t\t\tthis.#PathStore = new IDBPathStoreDefinition(this, pathCreationCallbackFn, getGameStateFn);\n\t\t}\n\t\telse {\n\t\t\tthis.#PointStore = new SimplePointStoreDefinition();\n\t\t\tthis.#PathStore = new SimplePathStoreDefinition();\n\t\t}\n\t}\n\n\tGetPointStore() {\n\t\treturn this.#PointStore;\n\t}\n\n\tGetPathStore() {\n\t\treturn this.#PathStore;\n\t}\n\n\tasync #OpenDb() {\n\t\tLocalLog(\"OpenDb ...\");\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet req;\n\t\t\tif (this.#DB_VERSION !== null)\n\t\t\t\treq = indexedDB.open(this.#DB_NAME, this.#DB_VERSION);\n\t\t\telse\n\t\t\t\treq = indexedDB.open(this.#DB_NAME);\n\n\t\t\treq.onsuccess = (evt) => {\n\t\t\t\t// Equal to: db = req.result;\n\t\t\t\tthis.#DB = evt.currentTarget.result;\n\n\t\t\t\tLocalLog(\"OpenDb DONE\");\n\t\t\t\tresolve(evt.currentTarget.result);\n\t\t\t};\n\n\t\t\treq.onerror = (evt) => {\n\t\t\t\tLocalError(\"OpenDb:\", evt.target.errorCode || evt.target.error);\n\t\t\t\treject();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * onupgradeneeded event handler\n\t\t\t * @param {IDBVersionChangeEvent} evt change event\n\t\t\t */\n\t\t\treq.onupgradeneeded = (evt) => {\n\t\t\t\tLocalLog(`OpenDb.onupgradeneeded(version: ${this.#DB_VERSION})`);\n\t\t\t\tconst loc_db = evt.currentTarget.result;\n\n\t\t\t\tconst store_list = Array.from(loc_db.objectStoreNames);\n\t\t\t\tif (store_list.includes(this.#DB_POINT_STORE))\n\t\t\t\t\tloc_db.deleteObjectStore(this.#DB_POINT_STORE);\n\t\t\t\tif (store_list.includes(this.#DB_PATH_STORE))\n\t\t\t\t\tloc_db.deleteObjectStore(this.#DB_PATH_STORE);\n\t\t\t\tif (store_list.includes(this.#DB_STATE_STORE))\n\t\t\t\t\tloc_db.deleteObjectStore(this.#DB_STATE_STORE);\n\n\t\t\t\tconst point_store = loc_db.createObjectStore(\n\t\t\t\t\tthis.#DB_POINT_STORE, { keyPath: /* 'Idx' */['x', 'y'], autoIncrement: false });\n\t\t\t\t//point_store.createIndex('Status', 'Status', { unique: false });\n\t\t\t\t//point_store.createIndex('Color', 'Color', { unique: false });\n\t\t\t\t//point_store.createIndex('Key', 'Key', { unique: true });\n\n\t\t\t\tloc_db.createObjectStore(\n\t\t\t\t\tthis.#DB_PATH_STORE, { keyPath: 'iId', autoIncrement: false });\n\t\t\t\t//path_store.createIndex('Color', 'Color', { unique: false });\n\n\t\t\t\tloc_db.createObjectStore(\n\t\t\t\t\tthis.#DB_STATE_STORE, { /*keyPath: 'gameId',*/ autoIncrement: false });\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {string} storeName is a store name\n\t  * @param {string} mode either \"readonly\" or \"readwrite\"\n\t  * @returns {object} store\n\t  */\n\t#GetObjectStore(storeName, mode) {\n\t\tif (this.#bulkStores !== null && this.#bulkStores.has(storeName))\n\t\t\treturn this.#bulkStores.get(storeName);\n\n\t\tconst tx = this.#DB.transaction(storeName, mode);\n\t\treturn tx.objectStore(storeName);\n\t}\n\n\tasync #ClearAllStores() {\n\t\tconst clearObjectStore = async (storeName) => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst store = this.#GetObjectStore(storeName, 'readwrite');\n\t\t\t\tconst req = store.clear();\n\t\t\t\treq.onsuccess = function () {\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t\treq.onerror = function (evt) {\n\t\t\t\t\tLocalError(\"clearObjectStore:\", evt.target.errorCode);\n\t\t\t\t\treject();\n\t\t\t\t};\n\t\t\t});\n\t\t};\n\n\t\tawait Promise.all([\n\t\t\tclearObjectStore(this.#DB_POINT_STORE),\n\t\t\tclearObjectStore(this.#DB_PATH_STORE),\n\t\t\tclearObjectStore(this.#DB_STATE_STORE)\n\t\t]);\n\t}\n\n\t/**\n\t  * @param {number} key is calculated index of point y * width + x, probably not useful\n\t  */\n\tasync GetPoint(key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_POINT_STORE, 'readonly');\n\t\t\tconst req = store.get(key);\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetPoint => ' + event));\n\t\t\t};\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tresolve(event.target.result);\n\t\t\t};\n\t\t});\n\t}\n\n\tasync GetAllPoints() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_POINT_STORE, 'readonly');\n\t\t\tconst bucket = [];\n\t\t\tconst req = store.openCursor();\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tconst cursor = event.target.result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tbucket.push(cursor.value);\n\t\t\t\t\tcursor.continue();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tresolve(bucket);\n\t\t\t};\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetAllPoints => ' + event));\n\t\t\t};\n\t\t});\n\t}\n\n\tasync GetState(key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_STATE_STORE, 'readonly');\n\t\t\tconst req = store.get(key);\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetState => ' + event));\n\t\t\t};\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tresolve(event.target.result);\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is path Id\n\t  */\n\tasync GetPath(key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_PATH_STORE, 'readonly');\n\t\t\tconst req = store.get(key);\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetPath => ' + event));\n\t\t\t};\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tresolve(event.target.result);\n\t\t\t};\n\t\t});\n\t}\n\n\tasync GetAllPaths() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_PATH_STORE, 'readonly');\n\t\t\tconst bucket = [];\n\t\t\tconst req = store.openCursor();\n\t\t\treq.onsuccess = function (event) {\n\t\t\t\tconst cursor = event.target.result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tbucket.push(cursor.value);\n\t\t\t\t\tcursor.continue();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tresolve(bucket);\n\t\t\t};\n\t\t\treq.onerror = function (event) {\n\t\t\t\treject(new Error('GetAllPaths => ' + event));\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is calculated index of point y * width + x, probably not useful\n\t  * @param {object} val is serialized, thin circle\n\t  */\n\tasync StorePoint(key, val) {\n\t\tif (this.#bulkStores !== null && this.#bulkStores.has(this.#DB_POINT_STORE)) {\n\t\t\tif (this.pointBulkBuffer === null)\n\t\t\t\tthis.pointBulkBuffer = new Map();\n\t\t\tthis.pointBulkBuffer.set(key, val);\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_POINT_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\t// if (typeof (val.Idx) === 'undefined')\n\t\t\t\t// \tval.Idx = key;\n\t\t\t\treq = store.add(val/* , key */);//earlier was 'add'\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"StorePoint error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is calculated index of point y * width + x, probably not useful\n\t  * @param {object} val is serialized, thin circle\n\t  */\n\tasync UpdatePoint(key, val) {\n\t\tif (this.#bulkStores !== null && this.#bulkStores.has(this.#DB_POINT_STORE)) {\n\t\t\tif (this.pointBulkBuffer === null)\n\t\t\t\tthis.pointBulkBuffer = new Map();\n\t\t\tthis.pointBulkBuffer.set(key, val);\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_POINT_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\t// if (typeof (val.Idx) === 'undefined')\n\t\t\t\t// \tval.Idx = key;\n\t\t\t\treq = store.put(val/* , key */);//earlier was 'add'\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"UpdatePoint error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Store all points array to IDBStore\n\t * @param {Array<object>} values of points\n\t * @returns {Promise} resolved promise\n\t */\n\tasync StoreAllPoints(values = null) {\n\t\tif (!values)\n\t\t\tvalues = this.pointBulkBuffer;\n\n\t\tif (!values || this.#bulkStores === null)\n\t\t\treturn Promise.reject();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_POINT_STORE, 'readwrite');\n\t\t\ttry {\n\t\t\t\tvalues.forEach(function (val/* , key */) {\n\t\t\t\t\t// if (typeof (val.Idx) === 'undefined')\n\t\t\t\t\t// \tval.Idx = key;\n\t\t\t\t\tstore.add(val/* , key */);\n\t\t\t\t});\n\n\t\t\t\tthis.pointBulkBuffer = null;\n\t\t\t\tresolve();\n\t\t\t} catch (e) {\n\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is GameID\n\t  * @param {object} gameState is InkBallGame state object\n\t  */\n\tasync #StoreState(key, gameState) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_STATE_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\treq = store.add(gameState, key);\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"StoreState error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\tasync UpdateState(key, gameState) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_STATE_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\treq = store.put(gameState, key);\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"UpdateState error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t  * @param {number} key is path Id\n\t  * @param {object} val is serialized thin path\n\t  */\n\tasync StorePath(key, val) {\n\t\tif (this.#bulkStores !== null && this.#bulkStores.has(this.#DB_PATH_STORE)) {\n\t\t\tif (this.pathBulkBuffer === null)\n\t\t\t\tthis.pathBulkBuffer = new Map();\n\t\t\tthis.pathBulkBuffer.set(key, val);\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_PATH_STORE, 'readwrite');\n\t\t\tlet req;\n\t\t\ttry {\n\t\t\t\treq = store.add(val/*, key*/);\n\t\t\t} catch (e) {\n\t\t\t\tif (e.name === 'DataCloneError')\n\t\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treq.onsuccess = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\treq.onerror = function () {\n\t\t\t\tLocalError(\"StorePath error\", this.error);\n\t\t\t\treject();\n\t\t\t};\n\t\t});\n\t}\n\n\tasync StoreAllPaths(values = null) {\n\t\tif (!values)\n\t\t\tvalues = this.pathBulkBuffer;\n\n\t\tif (!values || this.#bulkStores === null)\n\t\t\treturn Promise.reject();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst store = this.#GetObjectStore(this.#DB_PATH_STORE, 'readwrite');\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tvalues.forEach(function (v, key) {\n\t\t\t\t\tstore.add(v/*, key*/);\n\t\t\t\t});\n\n\t\t\t\tthis.pathBulkBuffer = null;\n\t\t\t\tresolve();\n\t\t\t} catch (e) {\n\t\t\t\tLocalError(\"This engine doesn't know how to clone a Blob, use Firefox\");\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync PrepareStore() {\n\t\t//detecting if we have IndexedDb advanced store (only checking point-store); otherwise, there is no point in going further\n\t\tif (!this.#PointStore.GetAllPoints) return false;\n\n\t\tif (this.#DB === null)\n\t\t\tawait this.#OpenDb();\n\t\telse\n\t\t\treturn false;//all initiated, just exit\n\n\t\tconst game_state = this.#PointStore.GetGameStateCallback();\n\t\tconst idb_state = await this.GetState(game_state.iGameID);\n\t\tif (!idb_state) {\n\t\t\t//no state entry in db\n\t\t\tawait this.#ClearAllStores();\n\n\t\t\tawait this.#StoreState(game_state.iGameID, game_state);\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t//Verify date of last move and decide whether to need pull points from signalR\n\t\t\t//Both datetimes should be ISO UTC\n\t\t\tif (idb_state.sLastMoveGameTimeStamp !== game_state.sLastMoveGameTimeStamp) {\n\n\t\t\t\tawait this.#ClearAllStores();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (game_state.bPointsAndPathsLoaded === false) {\n\t\t\t\t//db entry ok and ready for read\n\t\t\t\ttry {\n\t\t\t\t\tawait this.#BeginBulkStorage([this.#DB_POINT_STORE, this.#DB_PATH_STORE], 'readonly');\n\n\t\t\t\t\tif ((await this.#PointStore.PrepareStore()) !== true || (await this.#PathStore.PrepareStore()) !== true) {\n\n\t\t\t\t\t\tawait this.#ClearAllStores();\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t} finally {\n\t\t\t\t\tawait this.#EndBulkStorage([this.#DB_POINT_STORE, this.#DB_PATH_STORE]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Load all needed stores upfront\n\t * @param {any} storeName array or string of store to load\n\t * @param {any} mode - readonly/readwrite\n\t */\n\tasync #BeginBulkStorage(storeName, mode) {\n\t\tif (this.#bulkStores === null)\n\t\t\tthis.#bulkStores = new Map();\n\n\t\tconst keys = Array.isArray(storeName) ? storeName : [storeName];\n\t\tlet tx = null;\n\t\tfor (const key of keys) {\n\t\t\tif (!this.#bulkStores.has(key)) {\n\t\t\t\tif (tx === null)\n\t\t\t\t\ttx = this.#DB.transaction(keys, mode);\n\t\t\t\tthis.#bulkStores.set(key, tx.objectStore(key));\n\t\t\t}\n\t\t}\n\t}\n\n\tasync BeginPointBulkStorage(mode) {\n\t\treturn await this.#BeginBulkStorage(this.#DB_POINT_STORE, mode);\n\t}\n\n\tasync BeginPathBulkStorage(mode) {\n\t\treturn await this.#BeginBulkStorage([this.#DB_POINT_STORE, this.#DB_PATH_STORE], mode);\n\t}\n\n\tasync #EndBulkStorage(storeName) {\n\t\tif (this.#bulkStores !== null) {\n\t\t\tconst keys = Array.isArray(storeName) ? storeName : [storeName];\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (this.#bulkStores.has(key)) {\n\t\t\t\t\tthis.#bulkStores.delete(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.#bulkStores.size <= 0)\n\t\t\t\tthis.#bulkStores = null;\n\t\t}\n\t}\n\n\tasync EndPointBulkStorage() {\n\t\treturn await this.#EndBulkStorage(this.#DB_POINT_STORE);\n\t}\n\n\tasync EndPathBulkStorage() {\n\t\treturn await this.#EndBulkStorage([this.#DB_POINT_STORE, this.#DB_PATH_STORE]);\n\t}\n}\n\n\nexport {\n\tSvgVml, StatusEnum, pnpoly, LocalLog, LocalError, LocalAlert,\n\thasDuplicates, sortPointsClockwise, Sleep,\n\tGameStateStore\n};\n","import concaveman from \"concaveman\";\n// import decomp from \"poly-decomp\";\nimport { StatusEnum, LocalLog, sortPointsClockwise, /*Sleep,*/ pnpoly } from \"./shared.js\";\n\n\n/**\n * AI operations class\n * */\nclass GraphAI {\n\t#iGridWidth;\n\t#iGridHeight;\n\t#Points;\n\t#POINT_STARTING;\n\t#POINT_IN_PATH;\n\n\tconstructor(iGridWidth, iGridHeight, pointStore) {\n\t\tthis.#iGridWidth = iGridWidth;\n\t\tthis.#iGridHeight = iGridHeight;\n\t\tthis.#Points = pointStore;\n\t\tthis.#POINT_STARTING = StatusEnum.POINT_STARTING;\n\t\tthis.#POINT_IN_PATH = StatusEnum.POINT_IN_PATH;\n\t}\n\n\t/**\n\t * Building graph of connected vertices and edges\n\t * @param {any} param0 is a optional object comprised of:\n\t *\tfreePointStatus - status of free point\n\t *\tcpuFillColor - CPU point color\n\t */\n\tasync BuildGraph({\n\t\tfreePointStatus = StatusEnum.POINT_FREE_BLUE,\n\t\tcpufillCol: cpuFillColor = 'var(--bluish)'\n\t\t//, visuals: presentVisually = false\n\t} = {}) {\n\t\tconst graph_points = new Map(), graph_edges = new Map();\n\n\t\tconst isPointOKForPath = function (freePointStatusArr, pt) {\n\t\t\tconst status = pt.GetStatus();\n\n\t\t\tif (freePointStatusArr.includes(status) && pt.GetFillColor() === cpuFillColor)\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t};\n\n\t\tconst addPointsAndEdgesToGraph = async (point, to_x, to_y, x, y) => {\n\t\t\tif (to_x >= 0 && to_x < this.#iGridWidth && to_y >= 0 && to_y < this.#iGridHeight) {\n\t\t\t\tconst next = await this.#Points.get(to_y * this.#iGridWidth + to_x);\n\t\t\t\tif (next && isPointOKForPath([freePointStatus], next) === true) {\n\n\t\t\t\t\tconst point_hash = `${x},${y}`;\n\t\t\t\t\tconst next_hash = `${to_x},${to_y}`;\n\t\t\t\t\tif (graph_edges.has(`${point_hash}_${next_hash}`) === false && graph_edges.has(`${next_hash}_${point_hash}`) === false) {\n\t\t\t\t\t\t//if (presentVisually === true) {\n\t\t\t\t\t\t//\tconst line = CreateLine(3, 'rgba(0, 255, 0, 0.3)');\n\t\t\t\t\t\t//\tline.move(x, y, next_pos.x, next_pos.y);\n\t\t\t\t\t\t//\tedge.line = line;\n\t\t\t\t\t\t//}\n\t\t\t\t\t\tgraph_edges.set(`${point_hash}_${next_hash}`, { from: point, to: next });\n\n\n\t\t\t\t\t\tif (!graph_points.has(point_hash)) {\n\t\t\t\t\t\t\tpoint.adjacents = [next];\n\t\t\t\t\t\t\tgraph_points.set(point_hash, point);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pt = graph_points.get(point_hash);\n\t\t\t\t\t\t\tpt.adjacents.push(next);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!graph_points.has(next_hash)) {\n\t\t\t\t\t\t\tnext.adjacents = [point];\n\t\t\t\t\t\t\tgraph_points.set(next_hash, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pt = graph_points.get(next_hash);\n\t\t\t\t\t\t\tpt.adjacents.push(point);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const point of await this.#Points.values()) {\n\t\t\tif (point && isPointOKForPath([freePointStatus, this.#POINT_STARTING, this.#POINT_IN_PATH], point) === true) {\n\t\t\t\tconst { x, y } = point.GetPosition();\n\t\t\t\t//TODO: await all below promises\n\t\t\t\t//east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, y, x, y);\n\t\t\t\t//west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, y, x, y);\n\t\t\t\t//north\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x, (y - 1), x, y);\n\t\t\t\t//south\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x, (y + 1), x, y);\n\t\t\t\t//north_west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, (y - 1), x, y);\n\t\t\t\t//north_east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, (y - 1), x, y);\n\t\t\t\t//south_west\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x - 1, (y + 1), x, y);\n\t\t\t\t//south_east\n\t\t\t\tawait addPointsAndEdgesToGraph(point, x + 1, (y + 1), x, y);\n\t\t\t}\n\t\t}\n\t\t//return graph\n\t\treturn {\n\t\t\tvertices: Array.from(graph_points.values()),\n\t\t\tedges: Array.from(graph_edges.values())\n\t\t};\n\t}\n\n\tasync #IsPointOutsideAllPaths(x, y, allLines) {\n\t\tfor (const line of allLines) {\n\t\t\tconst points = line.GetPointsArray();\n\n\t\t\tif (false !== pnpoly(points, x, y))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Based on https://www.geeksforgeeks.org/print-all-the-cycles-in-an-undirected-graph/\n\t * @param {any} graph constructed earlier with BuildGraph\n\t * @param {string} COLOR_BLUE - cpu blue playing color\n\t * @param {string} sHumanColor - human red playing color\n\t * @param {object} lines - line array\n\t * @returns {array} of cycles\n\t */\n\tasync MarkAllCycles(graph, COLOR_BLUE, sHumanColor, lines) {\n\t\tconst vertices = graph.vertices;\n\t\tconst N = vertices.length;\n\t\tlet cycles = new Array(N);\n\t\t// mark with unique numbers\n\t\tconst mark = new Array(N);\n\t\t// arrays required to color the \n\t\t// graph, store the parent of node \n\t\tconst color = new Array(N), par = new Array(N);\n\n\t\tfor (let i = 0; i < N; i++) {\n\t\t\tmark[i] = []; cycles[i] = [];\n\t\t}\n\n\t\tconst dfs_cycle = async function (u, p) {\n\t\t\t// already (completely) visited vertex. \n\t\t\tif (color[u] === 2)\n\t\t\t\treturn;\n\n\t\t\t// seen vertex, but was not completely visited -> cycle detected. \n\t\t\t// backtrack based on parents to find the complete cycle. \n\t\t\tif (color[u] === 1) {\n\t\t\t\tcyclenumber++;\n\t\t\t\tlet cur = p;\n\t\t\t\tmark[cur].push(cyclenumber);\n\n\t\t\t\t// backtrack the vertex which are\n\t\t\t\t// in the current cycle thats found\n\t\t\t\twhile (cur !== u) {\n\t\t\t\t\tcur = par[cur];\n\t\t\t\t\tmark[cur].push(cyclenumber);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpar[u] = p;\n\n\t\t\t// partially visited.\n\t\t\tcolor[u] = 1;\n\t\t\tconst vertex = vertices[u];\n\t\t\tif (vertex) {\n\n\t\t\t\t//const x = vertex.attributes.get('cx'), y = vertex.attributes.get('cy');\n\t\t\t\t//vertex.SetStrokeColor('black');\n\t\t\t\t//vertex.SetFillColor('black');\n\t\t\t\t////vertex.setAttribute(\"r\", \"6\");\n\t\t\t\t//await Sleep(10);\n\n\n\t\t\t\t// simple dfs on graph\n\t\t\t\tfor (const adj of vertex.adjacents) {\n\t\t\t\t\tconst v = vertices.indexOf(adj);\n\t\t\t\t\t// if it has not been visited previously\n\t\t\t\t\tif (v === par[u])\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tawait dfs_cycle(v, u);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// completely visited. \n\t\t\tcolor[u] = 2;\n\t\t};\n\n\t\tconst printCycles = async (edges, mark) => {\n\t\t\t// push the edges that into the \n\t\t\t// cycle adjacency list \n\t\t\tfor (let e = 0; e < edges; e++) {\n\t\t\t\tconst mark_e = mark[e];\n\t\t\t\tif (mark_e !== undefined && mark_e.length > 0) {\n\t\t\t\t\tfor (let m = 0; m < mark_e.length; m++) {\n\t\t\t\t\t\tconst found_c = cycles[mark_e[m]];\n\t\t\t\t\t\tif (found_c !== undefined)\n\t\t\t\t\t\t\tfound_c.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//sort by point length(only cycles >= 4): first longest cycles, most points\n\t\t\tcycles = cycles.filter(c => c.length >= 4).sort((b, a) => a.length - b.length);\n\n\t\t\t//gather free human player points that could be intercepted.\n\t\t\tconst free_human_player_points = [];\n\t\t\tfor (const pt of await this.#Points.values()) {\n\t\t\t\tif (pt !== undefined && pt.GetFillColor() === sHumanColor && StatusEnum.POINT_FREE_RED === pt.GetStatus()) {\n\t\t\t\t\tconst { x, y } = pt.GetPosition();\n\t\t\t\t\tif (false === await this.#IsPointOutsideAllPaths(x, y, lines))\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t//check if really exists\n\t\t\t\t\t//const pt1 = document.querySelector(`svg > circle[cx=\"${x}\"][cy=\"${y}\"]`);\n\t\t\t\t\t//if (pt1)\n\t\t\t\t\tfree_human_player_points.push({ x, y });\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t//const tab = [];\n\t\t\t// traverse through all the vertices with same cycle\n\t\t\tfor (let i = 0; i <= cyclenumber; i++) {\n\t\t\t\tconst cycl = cycles[i];//get cycle\n\t\t\t\tif (cycl && cycl.length > 0) {\t//some checks\n\t\t\t\t\t// Print the i-th cycle\n\t\t\t\t\t//let str = (`Cycle Number ${i}: `), trailing_points = [];\n\t\t\t\t\t//const rand_color = 'var(--indigo)';\n\n\t\t\t\t\t//convert to logical space\n\t\t\t\t\tconst mapped_verts = cycl.map(c => vertices[c].GetPosition());\n\t\t\t\t\t//sort clockwise (https://stackoverflow.com/questions/45660743/sort-points-in-counter-clockwise-in-javascript)\n\t\t\t\t\tconst cw_sorted_verts = sortPointsClockwise(mapped_verts);\n\t\t\t\t\tcycles[i] = { cycl, cw_sorted_verts };\n\t\t\t\t\t////display which cycle we are dealing with\n\t\t\t\t\t//for (const vert of cw_sorted_verts) {\n\t\t\t\t\t//\tconst { x, y } = vert;\n\t\t\t\t\t//\tconst pt = document.querySelector(`svg > circle[cx=\"${x}\"][cy=\"${y}\"]`);\n\t\t\t\t\t//\tif (pt) {//again some basic checks\n\t\t\t\t\t//\t\tstr += (`(${x},${y})`);\n\n\t\t\t\t\t//\t\tpt.SetStrokeColor(rand_color);\n\t\t\t\t\t//\t\tpt.SetFillColor(rand_color);\n\t\t\t\t\t//\t\tpt.setAttribute(\"r\", \"6\");\n\t\t\t\t\t//\t}\n\t\t\t\t\t//\tawait Sleep(50);\n\t\t\t\t\t//}\n\n\t\t\t\t\t//find for all free_human_player_points which cycle might intercept it (surrounds)\n\t\t\t\t\t//only convex, NOT concave :-(\n\t\t\t\t\t//let tmp = '', comma = '';\n\t\t\t\t\t//for (const possible_intercept of free_human_player_points) {\n\t\t\t\t\t//\tif (false !== pnpoly(cw_sorted_verts, possible_intercept.x, possible_intercept.y)) {\n\t\t\t\t\t//\t\ttmp += `${comma}(${possible_intercept.x},${possible_intercept.y})`;\n\n\t\t\t\t\t//\t\tconst pt1 = document.querySelector(`svg > circle[cx=\"${possible_intercept.x}\"][cy=\"${possible_intercept.y}\"]`);\n\t\t\t\t\t//\t\tif (pt1) {\n\t\t\t\t\t//\t\t\tpt1.SetStrokeColor('var(--yellow)');\n\t\t\t\t\t//\t\t\tpt1.SetFillColor('var(--yellow)');\n\t\t\t\t\t//\t\t\tpt1.setAttribute(\"r\", \"6\");\n\t\t\t\t\t//\t\t}\n\t\t\t\t\t//\t\tcomma = ',';\n\t\t\t\t\t//\t}\n\t\t\t\t\t//}\n\t\t\t\t\t////gathering of some data and console printing\n\t\t\t\t\t//trailing_points.unshift(str);\n\t\t\t\t\t//tab.push(trailing_points);\n\t\t\t\t\t////log...\n\t\t\t\t\t//LocalLog(str + (tmp !== '' ? ` possible intercepts: ${tmp}` : ''));\n\t\t\t\t\t////...and clear\n\t\t\t\t\t//const pts2reset = Array.from(document.querySelectorAll(`svg > circle[fill=\"${rand_color}\"][r=\"6\"]`));\n\t\t\t\t\t//pts2reset.forEach(pt => {\n\t\t\t\t\t//\tpt.SetStrokeColor(COLOR_BLUE);\n\t\t\t\t\t//\tpt.SetFillColor(COLOR_BLUE);\n\t\t\t\t\t//\tpt.setAttribute(\"r\", \"4\");\n\t\t\t\t\t//});\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*return tab;*/return { cycles, free_human_player_points, cyclenumber };\n\t\t};\n\n\t\t// store the numbers of cycle\n\t\tlet cyclenumber = 0, edges = N;\n\n\t\t// call DFS to mark the cycles\n\t\tfor (let vind = 0; vind < N; vind++) {\n\t\t\tawait dfs_cycle(vind + 1, vind);//, color, mark, par);\n\t\t}\n\n\t\t// function to print the cycles\n\t\treturn await printCycles(edges, mark);\n\t}\n}\n\n// eslint-disable-next-line no-unused-vars\n/* function concavemanTesting() {\n\tconst precision_points = [[484, 480], [676, 363], [944, 342], [678, 41], [286, 237], [758, 215], [752, 117], [282, 492], [609, 262], [129, 252]];\n\tconst concavity = 2.0, lengthThreshold = 0.0;\n\tconst concaveman_output = concaveman(precision_points, concavity, lengthThreshold);\n\t//console.log('Hello concaveman. Simple test output points: \\n' + JSON.stringify(output));\n\n\n\t// Make sure the polygon has counter-clockwise winding. Skip this step if you know it's already counter-clockwise.\n\t//console.log(`decomp.makeCCW(concavePolygon) => ${decomp.makeCCW(precision_points)}`);\n\t//const convexPolygonsQuick = decomp.quickDecomp(precision_points);\n\t// ==> [  [[1,0],[1,1],[0.5,0.5]],  [[0.5,0.5],[-1,1],[-1,0],[1,0]]  ]\n\t//console.log(`decomp.quickDecomp => ${convexPolygons}`);\n\t// Decompose using the slow (but optimal) algorithm\n\tconst convexPolygons = decomp.decomp(precision_points);\n\t// ==> [  [[-1,1],[-1,0],[1,0],[0.5,0.5]],  [[1,0],[1,1],[0.5,0.5]]  ]\n\t//console.log(`decomp.decomp => ${convexPolygons}`);\n\tif (!concaveman_output || concaveman_output.length <= 0 ||\n\t\t//!convexPolygonsQuick || convexPolygonsQuick.length <= 0 || \n\t\t!convexPolygons || convexPolygons.length <= 0) {\n\t\tLocalLog('decomp or concaveman error');\n\t}\n} */\n\nexport { concaveman, GraphAI };\n","﻿import { GraphAI, concaveman } from \"./AISource.js\";\nimport { SvgVml, StatusEnum, LocalLog, LocalError, sortPointsClockwise } from \"./shared.js\";\nimport { astar, Graph } from \"javascript-astar\";\n\n// This is the entry point for our worker\naddEventListener('message', async function (e) {\n\tconst params = e.data;\n\n\tswitch (params.operation) {\n\t\tcase \"BUILD_GRAPH\":\n\t\t\t{\n\t\t\t\tconst svgVml = new SvgVml();\n\t\t\t\tsvgVml.CreateSVGVML(null, null, null, params.boardSize);\n\n\t\t\t\t//debugger;\n\t\t\t\tconst lines = params.paths.map(pa => svgVml.DeserializePolyline(pa));\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\n\t\t\t\tLocalLog(`lines.count = ${await lines.length}, points.count = ${await points.size}`);\n\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({ freePointStatus: StatusEnum.POINT_FREE_BLUE, cpufillCol: 'var(--bluish)', visuals: false });\n\t\t\t\t//LocalLog(graph);\n\n\t\t\t\tpostMessage({ operation: params.operation, params: graph });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"CONCAVEMAN\":\n\t\t\t{\n\t\t\t\tconst svgVml = new SvgVml();\n\t\t\t\tsvgVml.CreateSVGVML(null, null, null, params.boardSize);\n\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({ freePointStatus: StatusEnum.POINT_FREE_BLUE, cpufillCol: 'var(--bluish)', visuals: false });\n\n\n\t\t\t\tconst vertices = graph.vertices.map(function (pt) {\n\t\t\t\t\tconst { x, y } = pt.GetPosition();\n\t\t\t\t\treturn [x, y];\n\t\t\t\t});\n\t\t\t\tconst convex_hull = concaveman(vertices, 2.0, 0.0);\n\n\t\t\t\tconst mapped_verts = convex_hull.map(([x, y]) => ({ x, y }));\n\t\t\t\tconst cw_sorted_verts = sortPointsClockwise(mapped_verts);\n\n\t\t\t\tpostMessage({ operation: params.operation, convex_hull: convex_hull, cw_sorted_verts: cw_sorted_verts });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"MARK_ALL_CYCLES\":\n\t\t\t{\n\t\t\t\tconst svgVml = new SvgVml();\n\t\t\t\tsvgVml.CreateSVGVML(null, null, null, params.boardSize);\n\n\t\t\t\tconst lines = params.paths.map(pa => svgVml.DeserializePolyline(pa));\n\t\t\t\tconst points = new Map();\n\t\t\t\tparams.points.forEach((pt) => {\n\t\t\t\t\tpoints.set(pt.key, svgVml.DeserializeOval(pt.value));\n\t\t\t\t});\n\t\t\t\tconst ai = new GraphAI(params.state.iGridWidth, params.state.iGridHeight, points);\n\t\t\t\tconst graph = await ai.BuildGraph({ freePointStatus: StatusEnum.POINT_FREE_BLUE, cpufillCol: params.colorBlue, visuals: false });\n\t\t\t\tconst result = await ai.MarkAllCycles(graph, params.colorBlue, params.colorRed, lines);\n\n\n\t\t\t\tpostMessage({\n\t\t\t\t\toperation: params.operation,\n\t\t\t\t\tcycles: result.cycles,\n\t\t\t\t\tfree_human_player_points: result.free_human_player_points,\n\t\t\t\t\tcyclenumber: result.cyclenumber\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"ASTAR\":\n\t\t\t{\n\t\t\t\tconst { arr, start, end } = params;\n\t\t\t\tconst graphDiagonal = new Graph(arr, { diagonal: true });\n\t\t\t\tconst from = graphDiagonal.grid[start.y][start.x];\n\t\t\t\tconst to = graphDiagonal.grid[end.y][end.x];\n\t\t\t\tconst resultWithDiagonals = astar.search(graphDiagonal, from, to, { heuristic: astar.heuristics.diagonal });\n\n\t\t\t\tLocalLog(resultWithDiagonals);\n\n\t\t\t\tpostMessage({ operation: params.operation, resultWithDiagonals });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tLocalError(`unknown params.operation = ${params.operation}`);\n\t\t\tbreak;\n\t}\n});\n\nLocalLog('Worker loaded');\n"],"names":["RBush","Queue","pointInPolygon","orient","concaveman","points","concavity","lengthThreshold","Math","max","undefined","hull","left","top","right","bottom","i","length","p","cull","filtered","slice","push","sort","compareByX","lower","cross","pop","upper","ii","concat","convexHull","fastConvexHull","tree","toBBox","a","minX","minY","maxX","maxY","compareMinX","b","compareMinY","load","last","queue","remove","insertNode","segTree","insert","updateBBox","sqConcavity","sqLenThreshold","node","shift","next","sqLen","getSqDist","maxSqLen","findCandidate","prev","min","concave","c","d","maxDist","compareDist","data","children","child","dist","leaf","sqSegDist","sqSegBoxDist","peek","item","d0","d1","noIntersections","bbox","inside","sqSegSegDist","d2","d3","d4","p1","q1","p2","q2","edges","search","p3","dx","dy","x","y","t","x0","y0","x1","y1","x2","y2","x3","y3","sc","sN","tc","tN","ux","uy","vx","vy","wx","wy","e","D","sD","tD","default","module","exports","definition","pathTo","curr","path","parent","unshift","astar","graph","start","end","options","cleanDirty","heuristic","heuristics","manhattan","closest","openHeap","BinaryHeap","f","closestNode","h","size","currentNode","closed","neighbors","il","neighbor","isWall","gScore","g","getCost","beenVisited","visited","markDirty","rescoreElement","pos0","pos1","abs","diagonal","D2","sqrt","cleanNode","Graph","gridIn","this","nodes","grid","row","GridNode","init","weight","scoreFunction","content","prototype","dirtyNodes","ret","toString","rowDebug","l","graphString","len","join","fromNeighbor","element","sinkDown","result","bubbleUp","indexOf","n","parentN","elemScore","child1Score","child2N","child1N","swap","child1","child2","point","vs","j","xi","yi","xj","yj","pointInPolygonFlat","pointInPolygonNested","Array","isArray","nested","flat","r","o","s","log","exp","u","floor","_maxEntries","_minEntries","ceil","clear","m","height","all","_all","collides","_build","_splitRoot","_insert","splice","_condense","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","Float64Array","orient2d","_","w","A","F","O","P","k","q","z","B","C","E","G","H","I","J","K","L","N","Q","orient2dfast","Object","defineProperty","value","TinyQueue","constructor","compare","defaultCompare","_down","_up","pos","current","halfLength","best","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","key","enumerable","get","obj","prop","hasOwnProperty","Symbol","toStringTag","StatusEnum","freeze","POINT_FREE_RED","POINT_FREE_BLUE","POINT_FREE","POINT_STARTING","POINT_IN_PATH","POINT_OWNED_BY_RED","POINT_OWNED_BY_BLUE","LocalLog","msg","console","LocalError","args","str","error","myAlert","pnpoly","pathPoints","pi","pj","sortPointsClockwise","center","reduce","acc","pt","map","angle","atan2","SvgVml","svgNS","svgAntialias","documentCreateElementNS_SVG","documentCreateElementNS_Element","svgAvailable","self","document","createElementNS","some_cont","contextElement","elementName","Error","attributes","Map","setAttributeNS","_nullish","val","set","appendChild","removeChild","index","SVGCircleElement","setAttribute","getAttribute","removeAttribute","delete","SVGPolylineElement","move","GetStrokeColor","SetStrokeColor","col","GetPosition","cachedPosition","parseInt","GetFillColor","cachedFillColor","SetFillColor","GetStatus","cachedStatus","StringToStatusEnum","SetStatus","iStatus","saveOldPoint","old_status","StatusEnumToString","RevertOldStatus","GetZIndex","SetZIndex","Hide","Show","StrokeWeight","sw","Serialize","Status","Color","AppendPoints","diff","pts_str","pts","split","array","Set","arr","at","last_x","last_y","RemoveLastPoint","new_points","replace","ContainsPoint","str_","subStr","occurrence_count","GetPointsString","GetPointsArray","cachedPoints","SetPoints","sPoints","GetIsClosed","GetLength","SetWidthAndColor","GetID","SetID","iID","iId","PointsAsString","CreateSVGVML","iWidth","iHeight","iGridWidth","iGridHeight","antialias","createSVGPoint","CreatePolyline","width","CreateOval","radius","enumVal","keys","enumStr","toUpperCase","RemoveOval","oval","RemovePolyline","polyline","DeserializeOval","packed","DeserializePolyline","ToCursorPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","IsPointInCircle","tolerance","lhs","rhs","GraphAI","pointStore","async","freePointStatus","cpufillCol","cpuFillColor","graph_points","graph_edges","isPointOKForPath","freePointStatusArr","status","includes","addPointsAndEdgesToGraph","to_x","to_y","point_hash","next_hash","has","from","to","adjacents","values","vertices","allLines","line","COLOR_BLUE","sHumanColor","lines","cycles","mark","color","par","dfs_cycle","cyclenumber","cur","vertex","adj","vind","mark_e","found_c","filter","free_human_player_points","cycl","cw_sorted_verts","printCycles","addEventListener","params","operation","svgVml","boardSize","paths","pa","forEach","ai","state","BuildGraph","visuals","postMessage","convex_hull","colorBlue","MarkAllCycles","colorRed","graphDiagonal","resultWithDiagonals"],"sourceRoot":""}