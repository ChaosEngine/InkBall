"use strict";function hasDuplicates(t){return new Set(t).size!==t.length}function sortPointsClockwise(t){const e=t.reduce(((t,{x:e,y:r})=>(t.x+=e,t.y+=r,t)),{x:0,y:0});e.x/=t.length,e.y/=t.length;return t.map((({x:t,y:r})=>({x:t,y:r,angle:180*Math.atan2(r-e.y,t-e.x)/Math.PI}))).sort(((t,e)=>t.angle-e.angle))}class SvgVml{constructor(){const t="http://www.w3.org/2000/svg";let e,r,i=!1,n=!1;this.cont=null,self&&self.document&&self.document.createElementNS&&(this.cont=document.createElementNS(t,"svg"),i=null!==this.cont.x),i?(e=function(){return this.cont}.bind(this),r=function(e){switch(e){case"circle":case"line":case"polyline":return document.createElementNS(t,e);default:throw new Error(`unknwn type ${e}`)}}):(e=function(){return{attributes:new Map,children:[],setAttributeNS:function(t,e,r){this.attributes.set(e,r)},appendChild:function(t){this.children.push(t)},removeChild:function(t){const e=this.children.indexOf(t);-1!==e&&this.children.splice(e,1)}}},self.SVGCircleElement=function(){this.attributes=new Map},SVGCircleElement.prototype.setAttribute=function(t,e){this.attributes.set(t,e)},SVGCircleElement.prototype.getAttribute=function(t){return this.attributes.get(t)},SVGCircleElement.prototype.removeAttribute=function(t){this.attributes.delete(t)},self.SVGLineElement=function(){this.attributes=new Map},SVGLineElement.prototype.setAttribute=function(t,e){this.attributes.set(t,e)},SVGLineElement.prototype.getAttribute=function(t){return this.attributes.get(t)},SVGLineElement.prototype.removeAttribute=function(t){this.attributes.delete(t)},self.SVGPolylineElement=function(){this.attributes=new Map},SVGPolylineElement.prototype.setAttribute=function(t,e){this.attributes.set(t,e)},SVGPolylineElement.prototype.getAttribute=function(t){return this.attributes.get(t)},SVGPolylineElement.prototype.removeAttribute=function(t){this.attributes.delete(t)},r=function(t){switch(t){case"circle":return new SVGCircleElement;case"line":return new SVGLineElement;case"polyline":return new SVGPolylineElement;default:throw new Error(`unknwn type ${t}`)}}),SVGCircleElement.prototype.move=function(t,e,r){this.setAttribute("cx",t),this.setAttribute("cy",e),this.setAttribute("r",Math.round(r))},SVGCircleElement.prototype.GetStrokeColor=function(){return this.getAttribute("stroke")},SVGCircleElement.prototype.SetStrokeColor=function(t){this.setAttribute("stroke",t)},SVGCircleElement.prototype.GetPosition=function(){return{x:this.getAttribute("cx"),y:this.getAttribute("cy")}},SVGCircleElement.prototype.GetFillColor=function(){return this.getAttribute("fill")},SVGCircleElement.prototype.SetFillColor=function(t){this.setAttribute("fill",t)},SVGCircleElement.prototype.GetStatus=function(){return parseInt(this.getAttribute("data-status"))},SVGCircleElement.prototype.SetStatus=function(t,e=!1){if(e){const e=parseInt(this.getAttribute("data-status"));this.setAttribute("data-status",t),-1!==e&&e!==t&&this.setAttribute("data-old-status",e)}else this.setAttribute("data-status",t)},SVGCircleElement.prototype.RevertOldStatus=function(){const t=this.getAttribute("data-old-status");return t?(this.removeAttribute("data-old-status"),this.setAttribute("data-status",t),parseInt(t)):-1},SVGCircleElement.prototype.GetZIndex=function(){return this.getAttribute("z-index")},SVGCircleElement.prototype.SetZIndex=function(t){this.setAttribute("z-index",t)},SVGCircleElement.prototype.Hide=function(){this.setAttribute("visibility","hidden")},SVGCircleElement.prototype.Show=function(){this.setAttribute("visibility","visible")},SVGCircleElement.prototype.strokeWeight=function(t){this.setAttribute("stroke-width",t)},SVGCircleElement.prototype.Serialize=function(){const{x:t,y:e}=this.GetPosition();return{x:t,y:e,Status:this.GetStatus(),Color:this.GetFillColor()}},SVGLineElement.prototype.move=function(t,e,r,i){this.setAttribute("x1",t),this.setAttribute("y1",e),this.setAttribute("x2",r),this.setAttribute("y2",i)},SVGLineElement.prototype.RGBcolor=function(t,e,r){this.setAttribute("stroke","rgb("+Math.round(t)+","+Math.round(e)+","+Math.round(r)+")")},SVGLineElement.prototype.SetColor=function(t){this.setAttribute("stroke",t)},SVGLineElement.prototype.strokeWidth=function(t){this.setAttribute("stroke-width",Math.round(t)+"px")},SVGPolylineElement.prototype.AppendPoints=function(t,e,r,i){const n=this.getAttribute("points"),s=n.split(" ");if(!0===hasDuplicates(s))return!1;let o;if(s.length<=1||2!==(o=s[s.length-1].split(",")).length)return!1;const a=parseInt(o[0]),l=parseInt(o[1]),u=parseInt(t),h=parseInt(e);return Math.abs(a-u)<=r&&Math.abs(l-h)<=i&&(this.setAttribute("points",n+` ${t},${e}`),!0)},SVGPolylineElement.prototype.RemoveLastPoint=function(){const t=this.getAttribute("points").replace(/(\s\d+,\d+)$/,"");return this.setAttribute("points",t),t},SVGPolylineElement.prototype.ContainsPoint=function(t,e){const r=new RegExp(`${t},${e}`,"g");return(this.getAttribute("points").match(r)||[]).length},SVGPolylineElement.prototype.GetPointsString=function(){return this.getAttribute("points")},SVGPolylineElement.prototype.GetPointsArray=function(){return this.getAttribute("points").split(" ").map((function(t){const e=t.split(",");return{x:parseInt(e[0]),y:parseInt(e[1])}}))},SVGPolylineElement.prototype.SetPoints=function(t){this.setAttribute("points",t)},SVGPolylineElement.prototype.GetIsClosed=function(){const t=this.getAttribute("points").split(" ");return t[0]===t[t.length-1]},SVGPolylineElement.prototype.GetLength=function(){return this.getAttribute("points").split(" ").length},SVGPolylineElement.prototype.SetWidthAndColor=function(t,e){this.setAttribute("stroke",e),this.setAttribute("fill",e),this.setAttribute("stroke-width",Math.round(t))},SVGPolylineElement.prototype.GetID=function(){return parseInt(this.getAttribute("data-id"))},SVGPolylineElement.prototype.SetID=function(t){this.setAttribute("data-id",t)},SVGPolylineElement.prototype.GetFillColor=function(){return this.getAttribute("fill")},SVGPolylineElement.prototype.Serialize=function(){return{iId:this.GetID(),Color:this.GetFillColor(),PointsAsString:this.GetPointsString()}},this.CreateSVGVML=function(t,r,s,o){return this.cont=e("svg"),r&&this.cont.setAttributeNS(null,"width",r),s&&this.cont.setAttributeNS(null,"height",s),t&&t.appendChild(this.cont),n=o,i?this.cont:null},this.CreateLine=function(t,e,i){const s=r("line");return s.setAttribute("shape-rendering",n?"auto":"optimizeSpeed"),s.setAttribute("stroke-width",Math.round(t)+"px"),e&&s.setAttribute("stroke",e),i&&s.setAttribute("stroke-linecap",i),this.cont.appendChild(s),s},this.CreatePolyline=function(t,e,i){const s=r("polyline");return s.setAttribute("shape-rendering",n?"auto":"optimizeSpeed"),s.setAttribute("stroke-width",Math.round(t)),i&&s.setAttribute("stroke",i),s.setAttribute("fill",i),s.setAttribute("fill-opacity","0.1"),e&&s.setAttribute("points",e),s.setAttribute("stroke-linecap","round"),s.setAttribute("stroke-linejoin","round"),s.setAttribute("data-id",0),this.cont.appendChild(s),s},this.CreateOval=function(t){const e=r("circle");return e.setAttribute("shape-rendering",n?"auto":"optimizeSpeed"),e.setAttribute("stroke-width",0),e.setAttribute("r",Math.round(t>>1)),e.setAttribute("data-status",-1),this.cont.appendChild(e),e}}RemoveOval(t){this.cont.removeChild(t)}RemovePolyline(t){this.cont.removeChild(t)}DeserializeOval(t,e=4){const{x:r,y:i,Status:n,Color:s}=t,o=this.CreateOval(4);return o.move(r,i,e),o.SetStrokeColor(s),o.SetFillColor(s),o.SetStatus(n),o}DeserializePolyline(t,e=3){const{iId:r,Color:i,PointsAsString:n}=t,s=this.CreatePolyline(e,n,i);return s.SetID(r),s}}class GameStateStore{constructor(t,e=null,r=null,i=null,n,s,o=""){this.LocalLog=n,this.LocalError=s,t?"indexedDB"in self?t=!0:(this.LocalError("This browser doesn't support IndexedDB"),t=!1):t=!1;const a=class{constructor(){this.store=new Map}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async has(t){return this.store.has(t)}async set(t,e){return this.store.set(t,e)}async get(t){return this.store.get(t)}async values(){return this.store.values()}async count(){return this.store.size}},l=class{constructor(){this.store=[]}async PrepareStore(){return!0}async BeginBulkStorage(){}async EndBulkStorage(){}async push(t){return this.store.push(t)}async all(){return this.store}async count(){return this.store.length}},u=class extends a{constructor(t,e,r){super(),this.MainGameStateStore=t,this.GetPoint=t.GetPoint.bind(this.MainGameStateStore),this.StorePoint=t.StorePoint.bind(this.MainGameStateStore),this.GetAllPoints=t.GetAllPoints.bind(this.MainGameStateStore),this.UpdateState=t.UpdateState.bind(this.MainGameStateStore),this.PointCreationCallback=e,this.GetGameStateCallback=r}async PrepareStore(){if(this.PointCreationCallback&&this.GetGameStateCallback){const t=await this.GetAllPoints(),e=this.GetGameStateCallback();for(const r of t){const t=await this.PointCreationCallback(r.x,r.y,r.Status,r.Color),i=r.y*e.iGridWidth+r.x;this.store.set(i,t)}}return!0}async BeginBulkStorage(){await this.MainGameStateStore.BeginBulkStorage(this.MainGameStateStore.DB_POINT_STORE,"readwrite"),null===this.MainGameStateStore.pointBulkBuffer&&(this.MainGameStateStore.pointBulkBuffer=new Map)}async EndBulkStorage(){await this.MainGameStateStore.StoreAllPoints(),await this.MainGameStateStore.EndBulkStorage(this.MainGameStateStore.DB_POINT_STORE)}async has(t){return this.store.has(t)}async set(t,e){const r=this.GetGameStateCallback(),i=e.GetPosition(),n=e.GetFillColor(),s={x:parseInt(i.x)/r.iGridSizeX,y:parseInt(i.y)/r.iGridSizeY,Status:e.GetStatus(),Color:n};return await this.StorePoint(t,s),this.UpdateState&&!0===r.bPointsAndPathsLoaded&&await this.UpdateState(r.iGameID,r),this.store.set(t,e)}async get(t){return this.store.get(t)}async values(){let t=this.store.values();return t||(t=await this.GetAllPoints(),t)}},h=class extends l{constructor(t,e,r){super(),this.MainGameStateStore=t,this.GetAllPaths=t.GetAllPaths.bind(this.MainGameStateStore),this.StorePath=t.StorePath.bind(this.MainGameStateStore),this.UpdateState=t.UpdateState.bind(this.MainGameStateStore),this.PathCreationCallback=e,this.GetGameStateCallback=r}async PrepareStore(){if(this.PathCreationCallback){const t=await this.GetAllPaths();for(const e of t){const t=await this.PathCreationCallback(e.PointsAsString,e.Color,e.iId);this.store.push(t)}}return!0}async BeginBulkStorage(){await this.MainGameStateStore.BeginBulkStorage([this.MainGameStateStore.DB_POINT_STORE,this.MainGameStateStore.DB_PATH_STORE],"readwrite"),null===this.MainGameStateStore.pathBulkBuffer&&(this.MainGameStateStore.pathBulkBuffer=new Map)}async EndBulkStorage(){await this.MainGameStateStore.StoreAllPaths(),await this.MainGameStateStore.EndBulkStorage([this.MainGameStateStore.DB_POINT_STORE,this.MainGameStateStore.DB_PATH_STORE])}async push(t){const e=this.GetGameStateCallback(),r=t.GetID(),i={iId:r,Color:t.GetFillColor(),PointsAsString:t.GetPointsString().split(" ").map((t=>{const r=t.split(","),i=parseInt(r[0]),n=parseInt(r[1]);return`${i/e.iGridSizeX},${n/e.iGridSizeY}`})).join(" ")};return await this.StorePath(r,i),this.UpdateState&&!0===e.bPointsAndPathsLoaded&&await this.UpdateState(e.iGameID,e),this.store.push(t)}async all(){let t=this.store;return t||(t=await this.GetAllPaths(),t)}};!0===t?(this.DB_NAME="InkballGame",this.DB_POINT_STORE="points",this.DB_PATH_STORE="paths",this.DB_STATE_STORE="state",this.g_DB=null,this.bulkStores=null,this.pointBulkBuffer=null,this.pathBulkBuffer=null,!o||""===o||o.length<=0?this.DB_VERSION=null:this.DB_VERSION=parseInt(o.split(".").reduce(((t,e)=>(e=parseInt(e),10*t+(isNaN(e)?0:e))),0))-1010+4,this.PointStore=new u(this,e,i),this.PathStore=new h(this,r,i)):(this.PointStore=new a,this.PathStore=new l)}GetPointStore(){return this.PointStore}GetPathStore(){return this.PathStore}async OpenDb(){return this.LocalLog("OpenDb ..."),new Promise(((t,e)=>{let r;r=null!==this.DB_VERSION?indexedDB.open(this.DB_NAME,this.DB_VERSION):indexedDB.open(this.DB_NAME),r.onsuccess=function(e){this.g_DB=e.currentTarget.result,this.LocalLog("OpenDb DONE"),t(e.currentTarget.result)}.bind(this),r.onerror=function(t){this.LocalError("OpenDb:",t.target.errorCode||t.target.error),e()}.bind(this),r.onupgradeneeded=function(t){this.LocalLog(`OpenDb.onupgradeneeded(version: ${this.DB_VERSION})`);const e=Array.from(t.currentTarget.result.objectStoreNames);e.includes(this.DB_POINT_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_POINT_STORE),e.includes(this.DB_PATH_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_PATH_STORE),e.includes(this.DB_STATE_STORE)&&t.currentTarget.result.deleteObjectStore(this.DB_STATE_STORE),t.currentTarget.result.createObjectStore(this.DB_POINT_STORE,{autoIncrement:!1}),t.currentTarget.result.createObjectStore(this.DB_PATH_STORE,{autoIncrement:!1}),t.currentTarget.result.createObjectStore(this.DB_STATE_STORE,{autoIncrement:!1})}.bind(this)}))}GetObjectStore(t,e){if(null!==this.bulkStores&&this.bulkStores.has(t))return this.bulkStores.get(t);return this.g_DB.transaction(t,e).objectStore(t)}async ClearAllStores(){const t=async function(t){return new Promise(((e,r)=>{const i=this.GetObjectStore(t,"readwrite").clear();i.onsuccess=function(){e()},i.onerror=function(t){this.LocalError("clearObjectStore:",t.target.errorCode),r()}}))}.bind(this);await Promise.all([t(this.DB_POINT_STORE),t(this.DB_PATH_STORE),t(this.DB_STATE_STORE)])}async GetPoint(t){return new Promise(((e,r)=>{const i=this.GetObjectStore(this.DB_POINT_STORE,"readonly").get(t);i.onerror=function(t){r(new Error("GetPoint => "+t))},i.onsuccess=function(t){e(t.target.result)}}))}async GetAllPoints(){return new Promise(((t,e)=>{const r=this.GetObjectStore(this.DB_POINT_STORE,"readonly"),i=[],n=r.openCursor();n.onsuccess=function(e){const r=e.target.result;r?(i.push(r.value),r.continue()):t(i)},n.onerror=function(t){e(new Error("GetAllPoints => "+t))}}))}async GetState(t){return new Promise(((e,r)=>{const i=this.GetObjectStore(this.DB_STATE_STORE,"readonly").get(t);i.onerror=function(t){r(new Error("GetState => "+t))},i.onsuccess=function(t){e(t.target.result)}}))}async GetPath(t){return new Promise(((e,r)=>{const i=this.GetObjectStore(this.DB_PATH_STORE,"readonly").get(t);i.onerror=function(t){r(new Error("GetPath => "+t))},i.onsuccess=function(t){e(t.target.result)}}))}async GetAllPaths(){return new Promise(((t,e)=>{const r=this.GetObjectStore(this.DB_PATH_STORE,"readonly"),i=[],n=r.openCursor();n.onsuccess=function(e){const r=e.target.result;r?(i.push(r.value),r.continue()):t(i)},n.onerror=function(t){e(new Error("GetAllPaths => "+t))}}))}async StorePoint(t,e){return null!==this.bulkStores&&this.bulkStores.has(this.DB_POINT_STORE)?(null===this.pointBulkBuffer&&(this.pointBulkBuffer=new Map),this.pointBulkBuffer.set(t,e),Promise.resolve()):new Promise(((r,i)=>{const n=this.GetObjectStore(this.DB_POINT_STORE,"readwrite");let s;try{s=n.add(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}s.onsuccess=function(){r()},s.onerror=function(){this.LocalError("StorePoint error",this.error),i()}}))}async StoreAllPoints(t=null){return t||(t=this.pointBulkBuffer),t&&null!==this.bulkStores?new Promise(((e,r)=>{const i=this.GetObjectStore(this.DB_POINT_STORE,"readwrite");try{t.forEach((function(t,e){i.add(t,e)})),this.pointBulkBuffer=null,e()}catch(t){this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),r(t)}})):Promise.reject()}async StoreState(t,e){return new Promise(((r,i)=>{const n=this.GetObjectStore(this.DB_STATE_STORE,"readwrite");let s;try{s=n.add(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}s.onsuccess=function(){r()},s.onerror=function(){this.LocalError("StoreState error",this.error),i()}}))}async UpdateState(t,e){return new Promise(((r,i)=>{const n=this.GetObjectStore(this.DB_STATE_STORE,"readwrite");let s;try{s=n.put(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}s.onsuccess=function(){r()},s.onerror=function(){this.LocalError("UpdateState error",this.error),i()}}))}async StorePath(t,e){return null!==this.bulkStores&&this.bulkStores.has(this.DB_PATH_STORE)?(null===this.pathBulkBuffer&&(this.pathBulkBuffer=new Map),this.pathBulkBuffer.set(t,e),Promise.resolve()):new Promise(((r,i)=>{const n=this.GetObjectStore(this.DB_PATH_STORE,"readwrite");let s;try{s=n.add(e,t)}catch(t){throw"DataCloneError"===t.name&&this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),t}s.onsuccess=function(){r()},s.onerror=function(){this.LocalError("StorePath error",this.error),i()}}))}async StoreAllPaths(t=null){return t||(t=this.pathBulkBuffer),t&&null!==this.bulkStores?new Promise(((e,r)=>{const i=this.GetObjectStore(this.DB_PATH_STORE,"readwrite");try{t.forEach((function(t,e){i.add(t,e)})),this.pathBulkBuffer=null,e()}catch(t){this.LocalError("This engine doesn't know how to clone a Blob, use Firefox"),r(t)}})):Promise.reject()}async PrepareStore(){if(!this.PointStore.GetAllPoints)return!1;if(null!==this.g_DB)return!1;await this.OpenDb();const t=this.PointStore.GetGameStateCallback(),e=await this.GetState(t.iGameID);if(!e)return await this.ClearAllStores(),await this.StoreState(t.iGameID,t),!1;if(e.sLastMoveGameTimeStamp!==t.sLastMoveGameTimeStamp)return await this.ClearAllStores(),!1;if(!1===t.bPointsAndPathsLoaded)try{return await this.BeginBulkStorage([this.DB_POINT_STORE,this.DB_PATH_STORE],"readonly"),!0===await this.PointStore.PrepareStore()&&!0===await this.PathStore.PrepareStore()||(await this.ClearAllStores(),!1)}finally{await this.EndBulkStorage([this.DB_POINT_STORE,this.DB_PATH_STORE])}}async BeginBulkStorage(t,e){null===this.bulkStores&&(this.bulkStores=new Map);const r=Array.isArray(t)?t:[t];let i=null;for(const t of r)this.bulkStores.has(t)||(null===i&&(i=this.g_DB.transaction(r,e)),this.bulkStores.set(t,i.objectStore(t)))}async EndBulkStorage(t){if(null!==this.bulkStores){(Array.isArray(t)?t:[t]).forEach(function(t){this.bulkStores.has(t)||this.bulkStores.delete(t)}.bind(this)),this.bulkStores.size<=0&&(this.bulkStores=null)}}}export{SvgVml,hasDuplicates,sortPointsClockwise,GameStateStore};